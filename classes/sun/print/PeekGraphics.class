Compiled from "PeekGraphics.java"
public class sun.print.PeekGraphics extends java.awt.Graphics2D implements java.awt.print.PrinterGraphics,java.awt.image.ImageObserver,java.lang.Cloneable {
  java.awt.Graphics2D mGraphics;
  java.awt.print.PrinterJob mPrinterJob;
  public sun.print.PeekGraphics(java.awt.Graphics2D, java.awt.print.PrinterJob);
  public java.awt.Graphics2D getDelegate();
  public void setDelegate(java.awt.Graphics2D);
  public java.awt.print.PrinterJob getPrinterJob();
  public void setAWTDrawingOnly();
  public boolean getAWTDrawingOnly();
  public sun.java2d.Spans getDrawingArea();
  public java.awt.GraphicsConfiguration getDeviceConfiguration();
  public java.awt.Graphics create();
  public void translate(int, int);
  public void translate(double, double);
  public void rotate(double);
  public void rotate(double, double, double);
  public void scale(double, double);
  public void shear(double, double);
  public java.awt.Color getColor();
  public void setColor(java.awt.Color);
  public void setPaintMode();
  public void setXORMode(java.awt.Color);
  public java.awt.Font getFont();
  public void setFont(java.awt.Font);
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public java.awt.font.FontRenderContext getFontRenderContext();
  public java.awt.Rectangle getClipBounds();
  public void clipRect(int, int, int, int);
  public void setClip(int, int, int, int);
  public java.awt.Shape getClip();
  public void setClip(java.awt.Shape);
  public void copyArea(int, int, int, int, int, int);
  public void drawLine(int, int, int, int);
  public void fillRect(int, int, int, int);
  public void clearRect(int, int, int, int);
  public void drawRoundRect(int, int, int, int, int, int);
  public void fillRoundRect(int, int, int, int, int, int);
  public void drawOval(int, int, int, int);
  public void fillOval(int, int, int, int);
  public void drawArc(int, int, int, int, int, int);
  public void fillArc(int, int, int, int, int, int);
  public void drawPolyline(int[], int[], int);
  public void drawPolygon(int[], int[], int);
  public void fillPolygon(int[], int[], int);
  public void drawString(java.lang.String, int, int);
  public void drawString(java.text.AttributedCharacterIterator, int, int);
  public void drawString(java.text.AttributedCharacterIterator, float, float);
  public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
  public void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform);
  public void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform);
  public void dispose();
  public void finalize();
  public void draw(java.awt.Shape);
  public boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver);
  public void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int);
  public void drawString(java.lang.String, float, float);
  public void drawGlyphVector(java.awt.font.GlyphVector, float, float);
  public void fill(java.awt.Shape);
  public boolean hit(java.awt.Rectangle, java.awt.Shape, boolean);
  public void setComposite(java.awt.Composite);
  public void setPaint(java.awt.Paint);
  public void setStroke(java.awt.Stroke);
  public void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object);
  public java.lang.Object getRenderingHint(java.awt.RenderingHints$Key);
  public void setRenderingHints(java.util.Map<?, ?>);
  public void addRenderingHints(java.util.Map<?, ?>);
  public java.awt.RenderingHints getRenderingHints();
  public void transform(java.awt.geom.AffineTransform);
  public void setTransform(java.awt.geom.AffineTransform);
  public java.awt.geom.AffineTransform getTransform();
  public java.awt.Paint getPaint();
  public java.awt.Composite getComposite();
  public void setBackground(java.awt.Color);
  public java.awt.Color getBackground();
  public java.awt.Stroke getStroke();
  public void clip(java.awt.Shape);
  public boolean hitsDrawingArea(java.awt.Rectangle);
  public sun.print.PeekMetrics getMetrics();
  public synchronized boolean imageUpdate(java.awt.Image, int, int, int, int, int);
}
