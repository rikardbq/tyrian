Compiled from "AbstractPerfDataBufferPrologue.java"
public abstract class sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue {
  protected java.nio.ByteBuffer byteBuffer;
  static final int PERFDATA_PROLOG_OFFSET;
  static final int PERFDATA_PROLOG_MAGIC_OFFSET;
  static final int PERFDATA_PROLOG_BYTEORDER_OFFSET;
  static final int PERFDATA_PROLOG_BYTEORDER_SIZE;
  static final int PERFDATA_PROLOG_MAJOR_OFFSET;
  static final int PERFDATA_PROLOG_MAJOR_SIZE;
  static final int PERFDATA_PROLOG_MINOR_OFFSET;
  static final int PERFDATA_PROLOG_MINOR_SIZE;
  static final int PERFDATA_PROLOG_RESERVEDB1_OFFSET;
  static final int PERFDATA_PROLOG_RESERVEDB1_SIZE;
  static final int PERFDATA_PROLOG_SIZE;
  static final byte PERFDATA_BIG_ENDIAN;
  static final byte PERFDATA_LITTLE_ENDIAN;
  static final int PERFDATA_MAGIC;
  public static final java.lang.String PERFDATA_MAJOR_NAME;
  public static final java.lang.String PERFDATA_MINOR_NAME;
  public sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue(java.nio.ByteBuffer) throws sun.jvmstat.monitor.MonitorException;
  public int getMagic();
  public java.nio.ByteOrder getByteOrder();
  public int getMajorVersion();
  public int getMinorVersion();
  public abstract boolean isAccessible();
  public abstract boolean supportsAccessible();
  public int getSize();
  public java.nio.IntBuffer majorVersionBuffer();
  public java.nio.IntBuffer minorVersionBuffer();
  public static int getMagic(java.nio.ByteBuffer);
  public static int getMajorVersion(java.nio.ByteBuffer);
  public static int getMinorVersion(java.nio.ByteBuffer);
  public static java.nio.ByteOrder getByteOrder(java.nio.ByteBuffer);
}
