Compiled from "AbstractCalendar.java"
public abstract class sun.util.calendar.AbstractCalendar extends sun.util.calendar.CalendarSystem {
  static final int SECOND_IN_MILLIS;
  static final int MINUTE_IN_MILLIS;
  static final int HOUR_IN_MILLIS;
  static final int DAY_IN_MILLIS;
  static final int EPOCH_OFFSET;
  protected sun.util.calendar.AbstractCalendar();
  public sun.util.calendar.Era getEra(java.lang.String);
  public sun.util.calendar.Era[] getEras();
  public void setEra(sun.util.calendar.CalendarDate, java.lang.String);
  protected void setEras(sun.util.calendar.Era[]);
  public sun.util.calendar.CalendarDate getCalendarDate();
  public sun.util.calendar.CalendarDate getCalendarDate(long);
  public sun.util.calendar.CalendarDate getCalendarDate(long, java.util.TimeZone);
  public sun.util.calendar.CalendarDate getCalendarDate(long, sun.util.calendar.CalendarDate);
  public long getTime(sun.util.calendar.CalendarDate);
  protected long getTimeOfDay(sun.util.calendar.CalendarDate);
  public long getTimeOfDayValue(sun.util.calendar.CalendarDate);
  public sun.util.calendar.CalendarDate setTimeOfDay(sun.util.calendar.CalendarDate, int);
  public int getWeekLength();
  protected abstract boolean isLeapYear(sun.util.calendar.CalendarDate);
  public sun.util.calendar.CalendarDate getNthDayOfWeek(int, int, sun.util.calendar.CalendarDate);
  static long getDayOfWeekDateBefore(long, int);
  static long getDayOfWeekDateAfter(long, int);
  public static long getDayOfWeekDateOnOrBefore(long, int);
  protected abstract long getFixedDate(sun.util.calendar.CalendarDate);
  protected abstract void getCalendarDateFromFixedDate(sun.util.calendar.CalendarDate, long);
  public boolean validateTime(sun.util.calendar.CalendarDate);
  int normalizeTime(sun.util.calendar.CalendarDate);
}
