Compiled from "ReflectUtil.java"
public final class sun.reflect.misc.ReflectUtil {
  public static final java.lang.String PROXY_PACKAGE;
  public static java.lang.Class<?> forName(java.lang.String) throws java.lang.ClassNotFoundException;
  public static void ensureMemberAccess(java.lang.Class<?>, java.lang.Class<?>, java.lang.Object, int) throws java.lang.IllegalAccessException;
  public static void conservativeCheckMemberAccess(java.lang.reflect.Member) throws java.lang.SecurityException;
  public static void checkPackageAccess(java.lang.Class<?>);
  public static void checkPackageAccess(java.lang.String);
  public static boolean isPackageAccessible(java.lang.Class<?>);
  public static boolean needsPackageAccessCheck(java.lang.ClassLoader, java.lang.ClassLoader);
  public static void checkProxyPackageAccess(java.lang.Class<?>);
  public static void checkProxyPackageAccess(java.lang.ClassLoader, java.lang.Class<?>...);
  public static boolean isNonPublicProxyClass(java.lang.Class<?>);
  public static void checkProxyMethod(java.lang.Object, java.lang.reflect.Method);
  public static boolean isVMAnonymousClass(java.lang.Class<?>);
}
