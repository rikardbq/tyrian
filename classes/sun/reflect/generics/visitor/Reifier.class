Compiled from "Reifier.java"
public class sun.reflect.generics.visitor.Reifier implements sun.reflect.generics.visitor.TypeTreeVisitor<java.lang.reflect.Type> {
  static final boolean $assertionsDisabled;
  public static sun.reflect.generics.visitor.Reifier make(sun.reflect.generics.factory.GenericsFactory);
  public java.lang.reflect.Type getResult();
  public void visitFormalTypeParameter(sun.reflect.generics.tree.FormalTypeParameter);
  public void visitClassTypeSignature(sun.reflect.generics.tree.ClassTypeSignature);
  public void visitArrayTypeSignature(sun.reflect.generics.tree.ArrayTypeSignature);
  public void visitTypeVariableSignature(sun.reflect.generics.tree.TypeVariableSignature);
  public void visitWildcard(sun.reflect.generics.tree.Wildcard);
  public void visitSimpleClassTypeSignature(sun.reflect.generics.tree.SimpleClassTypeSignature);
  public void visitBottomSignature(sun.reflect.generics.tree.BottomSignature);
  public void visitByteSignature(sun.reflect.generics.tree.ByteSignature);
  public void visitBooleanSignature(sun.reflect.generics.tree.BooleanSignature);
  public void visitShortSignature(sun.reflect.generics.tree.ShortSignature);
  public void visitCharSignature(sun.reflect.generics.tree.CharSignature);
  public void visitIntSignature(sun.reflect.generics.tree.IntSignature);
  public void visitLongSignature(sun.reflect.generics.tree.LongSignature);
  public void visitFloatSignature(sun.reflect.generics.tree.FloatSignature);
  public void visitDoubleSignature(sun.reflect.generics.tree.DoubleSignature);
  public void visitVoidDescriptor(sun.reflect.generics.tree.VoidDescriptor);
  public java.lang.Object getResult();
  static {};
}
