Compiled from "SurfaceData.java"
public abstract class sun.java2d.SurfaceData implements java.awt.Transparency,sun.java2d.DisposerTarget,sun.java2d.StateTrackable,sun.java2d.Surface {
  protected static final sun.java2d.pipe.LoopPipe colorPrimitives;
  public static final sun.java2d.pipe.TextPipe outlineTextRenderer;
  public static final sun.java2d.pipe.TextPipe solidTextRenderer;
  public static final sun.java2d.pipe.TextPipe aaTextRenderer;
  public static final sun.java2d.pipe.TextPipe lcdTextRenderer;
  protected static final sun.java2d.pipe.AlphaColorPipe colorPipe;
  protected static final sun.java2d.pipe.PixelToShapeConverter colorViaShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter colorViaPgram;
  protected static final sun.java2d.pipe.TextPipe colorText;
  protected static final sun.java2d.pipe.CompositePipe clipColorPipe;
  protected static final sun.java2d.pipe.TextPipe clipColorText;
  protected static final sun.java2d.pipe.AAShapePipe AAColorShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAColorViaShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAColorViaPgram;
  protected static final sun.java2d.pipe.AAShapePipe AAClipColorShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAClipColorViaShape;
  protected static final sun.java2d.pipe.CompositePipe paintPipe;
  protected static final sun.java2d.pipe.SpanShapeRenderer paintShape;
  protected static final sun.java2d.pipe.PixelToShapeConverter paintViaShape;
  protected static final sun.java2d.pipe.TextPipe paintText;
  protected static final sun.java2d.pipe.CompositePipe clipPaintPipe;
  protected static final sun.java2d.pipe.TextPipe clipPaintText;
  protected static final sun.java2d.pipe.AAShapePipe AAPaintShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAPaintViaShape;
  protected static final sun.java2d.pipe.AAShapePipe AAClipPaintShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAClipPaintViaShape;
  protected static final sun.java2d.pipe.CompositePipe compPipe;
  protected static final sun.java2d.pipe.SpanShapeRenderer compShape;
  protected static final sun.java2d.pipe.PixelToShapeConverter compViaShape;
  protected static final sun.java2d.pipe.TextPipe compText;
  protected static final sun.java2d.pipe.CompositePipe clipCompPipe;
  protected static final sun.java2d.pipe.TextPipe clipCompText;
  protected static final sun.java2d.pipe.AAShapePipe AACompShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AACompViaShape;
  protected static final sun.java2d.pipe.AAShapePipe AAClipCompShape;
  protected static final sun.java2d.pipe.PixelToParallelogramConverter AAClipCompViaShape;
  protected static final sun.java2d.pipe.DrawImagePipe imagepipe;
  static final int LOOP_UNKNOWN;
  static final int LOOP_FOUND;
  static final int LOOP_NOTFOUND;
  int haveLCDLoop;
  int havePgramXORLoop;
  int havePgramSolidLoop;
  static java.security.Permission compPermission;
  protected sun.java2d.SurfaceData(sun.java2d.loops.SurfaceType, java.awt.image.ColorModel);
  protected sun.java2d.SurfaceData(sun.java2d.StateTrackable$State, sun.java2d.loops.SurfaceType, java.awt.image.ColorModel);
  protected sun.java2d.SurfaceData(sun.java2d.StateTrackableDelegate, sun.java2d.loops.SurfaceType, java.awt.image.ColorModel);
  protected sun.java2d.SurfaceData(sun.java2d.StateTrackable$State);
  protected void setBlitProxyKey(java.lang.Object);
  public sun.java2d.SurfaceData getSourceSurfaceData(java.awt.Image, int, sun.java2d.loops.CompositeType, java.awt.Color);
  public sun.java2d.SurfaceDataProxy makeProxyFor(sun.java2d.SurfaceData);
  public static sun.java2d.SurfaceData getPrimarySurfaceData(java.awt.Image);
  public static sun.java2d.SurfaceData restoreContents(java.awt.Image);
  public sun.java2d.StateTrackable$State getState();
  public sun.java2d.StateTracker getStateTracker();
  public final void markDirty();
  public void setSurfaceLost(boolean);
  public boolean isSurfaceLost();
  public final boolean isValid();
  public java.lang.Object getDisposerReferent();
  public long getNativeOps();
  public void invalidate();
  public abstract sun.java2d.SurfaceData getReplacement();
  public boolean canRenderLCDText(sun.java2d.SunGraphics2D);
  public boolean canRenderParallelograms(sun.java2d.SunGraphics2D);
  public void validatePipe(sun.java2d.SunGraphics2D);
  protected sun.java2d.loops.MaskFill getMaskFill(sun.java2d.SunGraphics2D);
  public sun.java2d.loops.RenderLoops getRenderLoops(sun.java2d.SunGraphics2D);
  public static sun.java2d.loops.RenderLoops makeRenderLoops(sun.java2d.loops.SurfaceType, sun.java2d.loops.CompositeType, sun.java2d.loops.SurfaceType);
  public abstract java.awt.GraphicsConfiguration getDeviceConfiguration();
  public final sun.java2d.loops.SurfaceType getSurfaceType();
  public final java.awt.image.ColorModel getColorModel();
  public int getTransparency();
  public abstract java.awt.image.Raster getRaster(int, int, int, int);
  public boolean useTightBBoxes();
  public int pixelFor(int);
  public int pixelFor(java.awt.Color);
  public int rgbFor(int);
  public abstract java.awt.Rectangle getBounds();
  protected void checkCustomComposite();
  protected static native boolean isOpaqueGray(java.awt.image.IndexColorModel);
  public static boolean isNull(sun.java2d.SurfaceData);
  public boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int);
  public void flush();
  public abstract java.lang.Object getDestination();
  public double getDefaultScaleX();
  public double getDefaultScaleY();
  static {};
}
