Compiled from "OGLSurfaceData.java"
public abstract class sun.java2d.opengl.OGLSurfaceData extends sun.java2d.SurfaceData implements sun.java2d.pipe.hw.AccelSurface {
  public static final int FBOBJECT;
  public static final int PF_INT_ARGB;
  public static final int PF_INT_ARGB_PRE;
  public static final int PF_INT_RGB;
  public static final int PF_INT_RGBX;
  public static final int PF_INT_BGR;
  public static final int PF_INT_BGRX;
  public static final int PF_USHORT_565_RGB;
  public static final int PF_USHORT_555_RGB;
  public static final int PF_USHORT_555_RGBX;
  public static final int PF_BYTE_GRAY;
  public static final int PF_USHORT_GRAY;
  public static final int PF_3BYTE_BGR;
  static final sun.java2d.loops.SurfaceType OpenGLSurface;
  static final sun.java2d.loops.SurfaceType OpenGLSurfaceRTT;
  static final sun.java2d.loops.SurfaceType OpenGLTexture;
  protected int type;
  protected static sun.java2d.opengl.OGLRenderer oglRenderPipe;
  protected static sun.java2d.pipe.PixelToParallelogramConverter oglTxRenderPipe;
  protected static sun.java2d.pipe.ParallelogramPipe oglAAPgramPipe;
  protected static sun.java2d.opengl.OGLTextRenderer oglTextPipe;
  protected static sun.java2d.opengl.OGLDrawImage oglImagePipe;
  protected native boolean initTexture(long, boolean, boolean, boolean, int, int);
  protected native boolean initFBObject(long, boolean, boolean, boolean, int, int);
  protected native boolean initFlipBackbuffer(long);
  protected sun.java2d.opengl.OGLSurfaceData(sun.java2d.opengl.OGLGraphicsConfig, java.awt.image.ColorModel, int);
  public sun.java2d.SurfaceDataProxy makeProxyFor(sun.java2d.SurfaceData);
  protected void initSurface(int, int);
  public final sun.java2d.opengl.OGLContext getContext();
  final sun.java2d.opengl.OGLGraphicsConfig getOGLGraphicsConfig();
  public final int getType();
  public final int getTextureTarget();
  public final int getTextureID();
  public long getNativeResource(int);
  public java.awt.image.Raster getRaster(int, int, int, int);
  public boolean canRenderLCDText(sun.java2d.SunGraphics2D);
  public void validatePipe(sun.java2d.SunGraphics2D);
  protected sun.java2d.loops.MaskFill getMaskFill(sun.java2d.SunGraphics2D);
  public boolean copyArea(sun.java2d.SunGraphics2D, int, int, int, int, int, int);
  public void flush();
  static void dispose(long, sun.java2d.opengl.OGLGraphicsConfig);
  static void swapBuffers(long);
  boolean isTexNonPow2Available();
  boolean isTexRectAvailable();
  public java.awt.Rectangle getNativeBounds();
  boolean isOnScreen();
  public sun.java2d.pipe.BufferedContext getContext();
  static {};
}
