Compiled from "DHelpers.java"
final class sun.java2d.marlin.DHelpers implements sun.java2d.marlin.MarlinConst {
  static boolean within(double, double, double);
  static double evalCubic(double, double, double, double, double);
  static double evalQuad(double, double, double, double);
  static int quadraticRoots(double, double, double, double[], int);
  static int cubicRootsInAB(double, double, double, double, double[], int, double, double);
  static int filterOutNotInAB(double[], int, int, double, double);
  static double fastLineLen(double, double, double, double);
  static double linelen(double, double, double, double);
  static double fastQuadLen(double, double, double, double, double, double);
  static double quadlen(double, double, double, double, double, double);
  static double fastCurvelen(double, double, double, double, double, double, double, double);
  static double curvelen(double, double, double, double, double, double, double, double);
  static int findSubdivPoints(sun.java2d.marlin.DCurve, double[], double[], int, double);
  static int findClipPoints(sun.java2d.marlin.DCurve, double[], double[], int, int, double[]);
  static void subdivide(double[], double[], double[], int);
  static void isort(double[], int);
  static void subdivideCubic(double[], double[], double[]);
  static void subdivideCubicAt(double, double[], int, double[], int, int);
  static void subdivideQuad(double[], double[], double[]);
  static void subdivideQuadAt(double, double[], int, double[], int, int);
  static void subdivideLineAt(double, double[], int, double[], int, int);
  static void subdivideAt(double, double[], int, double[], int, int);
  static int outcode(double, double, double[]);
}
