Compiled from "DMarlinRenderingEngine.java"
public final class sun.java2d.marlin.DMarlinRenderingEngine extends sun.java2d.pipe.RenderingEngine implements sun.java2d.marlin.MarlinConst {
  static final boolean DISABLE_2ND_STROKER_CLIPPING;
  static final boolean DO_TRACE_PATH;
  static final boolean DO_CLIP;
  static final boolean DO_CLIP_FILL;
  static final boolean DO_CLIP_RUNTIME_ENABLE;
  static final double UPPER_BND;
  static final double LOWER_BND;
  static final int REF_TYPE;
  public sun.java2d.marlin.DMarlinRenderingEngine();
  public java.awt.Shape createStrokedShape(java.awt.Shape, float, int, int, float, float[], float);
  public void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, boolean, boolean, sun.awt.geom.PathConsumer2D);
  void strokeTo(sun.java2d.marlin.DRendererContext, java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, sun.java2d.marlin.DMarlinRenderingEngine$NormMode, boolean, sun.java2d.marlin.DPathConsumer2D);
  void strokeTo(sun.java2d.marlin.DRendererContext, java.awt.Shape, java.awt.geom.AffineTransform, double, sun.java2d.marlin.DMarlinRenderingEngine$NormMode, int, int, float, float[], float, sun.java2d.marlin.DPathConsumer2D);
  public sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]);
  public sun.java2d.pipe.AATileGenerator getAATileGenerator(double, double, double, double, double, double, double, double, sun.java2d.pipe.Region, int[]);
  public float getMinimumAAPenSize();
  static sun.java2d.marlin.DRendererContext getRendererContext();
  static void returnRendererContext(sun.java2d.marlin.DRendererContext);
  static {};
}
