Compiled from "Helpers.java"
final class sun.java2d.marlin.Helpers implements sun.java2d.marlin.MarlinConst {
  static boolean within(float, float, float);
  static boolean within(double, double, double);
  static float evalCubic(float, float, float, float, float);
  static float evalQuad(float, float, float, float);
  static int quadraticRoots(float, float, float, float[], int);
  static int cubicRootsInAB(float, float, float, float, float[], int, float, float);
  static int filterOutNotInAB(float[], int, int, float, float);
  static float fastLineLen(float, float, float, float);
  static float linelen(float, float, float, float);
  static float fastQuadLen(float, float, float, float, float, float);
  static float quadlen(float, float, float, float, float, float);
  static float fastCurvelen(float, float, float, float, float, float, float, float);
  static float curvelen(float, float, float, float, float, float, float, float);
  static int findSubdivPoints(sun.java2d.marlin.Curve, float[], float[], int, float);
  static int findClipPoints(sun.java2d.marlin.Curve, float[], float[], int, int, float[]);
  static void subdivide(float[], float[], float[], int);
  static void isort(float[], int);
  static void subdivideCubic(float[], float[], float[]);
  static void subdivideCubicAt(float, float[], int, float[], int, int);
  static void subdivideQuad(float[], float[], float[]);
  static void subdivideQuadAt(float, float[], int, float[], int, int);
  static void subdivideLineAt(float, float[], int, float[], int, int);
  static void subdivideAt(float, float[], int, float[], int, int);
  static int outcode(float, float, float[]);
}
