Compiled from "XRCompositeManager.java"
public class sun.java2d.xr.XRCompositeManager {
  int srcType;
  sun.java2d.xr.XRSolidSrcPict solidSrc32;
  sun.java2d.xr.XRSurfaceData texture;
  sun.java2d.xr.XRSurfaceData gradient;
  int alphaMask;
  sun.java2d.xr.XRColor solidColor;
  float extraAlpha;
  byte compRule;
  sun.java2d.xr.XRColor alphaColor;
  sun.java2d.xr.XRSurfaceData solidSrcPict;
  int alphaMaskPict;
  int gradCachePixmap;
  int gradCachePicture;
  boolean xorEnabled;
  int validatedPixel;
  java.awt.Composite validatedComp;
  java.awt.Paint validatedPaint;
  float validatedExtraAlpha;
  sun.java2d.xr.XRBackend con;
  sun.java2d.xr.MaskTileManager maskBuffer;
  sun.font.XRTextRenderer textRenderer;
  sun.java2d.xr.XRMaskImage maskImage;
  public static synchronized sun.java2d.xr.XRCompositeManager getInstance(sun.java2d.xr.XRSurfaceData);
  public void initResources(sun.java2d.xr.XRSurfaceData);
  public void setForeground(int);
  public void setGradientPaint(sun.java2d.xr.XRSurfaceData);
  public void setTexturePaint(sun.java2d.xr.XRSurfaceData);
  public void XRResetPaint();
  public void validateCompositeState(java.awt.Composite, java.awt.geom.AffineTransform, java.awt.Paint, sun.java2d.SunGraphics2D);
  public boolean maskRequired();
  public void XRComposite(int, int, int, int, int, int, int, int, int, int, int);
  public void XRRenderRectangles(sun.java2d.xr.XRSurfaceData, sun.java2d.xr.GrowableRectArray);
  public void XRCompositeRectangles(sun.java2d.xr.XRSurfaceData, sun.java2d.xr.GrowableRectArray);
  protected sun.java2d.xr.XRSurfaceData getCurrentSource();
  public void compositeBlit(sun.java2d.xr.XRSurfaceData, sun.java2d.xr.XRSurfaceData, int, int, int, int, int, int);
  public void compositeText(sun.java2d.xr.XRSurfaceData, int, int, int, int, sun.java2d.xr.GrowableEltArray);
  public sun.java2d.xr.XRColor getMaskColor();
  public int getExtraAlphaMask();
  public boolean isTexturePaintActive();
  public boolean isSolidPaintActive();
  public sun.java2d.xr.XRColor getAlphaColor();
  public sun.java2d.xr.XRBackend getBackend();
  public float getExtraAlpha();
  public byte getCompRule();
  public sun.font.XRTextRenderer getTextRenderer();
  public sun.java2d.xr.MaskTileManager getMaskBuffer();
  public sun.java2d.xr.XRMaskImage getMaskImage();
  static {};
}
