Compiled from "XRBackendNative.java"
public class sun.java2d.xr.XRBackendNative implements sun.java2d.xr.XRBackend {
  public sun.java2d.xr.XRBackendNative();
  public native long createGC(int);
  public native void freeGC(long);
  public native int createPixmap(int, int, int, int);
  public native void freePicture(int);
  public native void freePixmap(int);
  public native void setGCExposures(long, boolean);
  public native void setGCForeground(long, int);
  public native void setPictureRepeat(int, int);
  public native void copyArea(int, int, long, int, int, int, int, int, int);
  public native void setGCMode(long, boolean);
  public native void renderComposite(byte, int, int, int, int, int, int, int, int, int, int, int);
  public native void setFilter(int, int);
  public void GCRectangles(int, long, sun.java2d.xr.GrowableRectArray);
  public int createPicture(int, int);
  public void setPictureTransform(int, java.awt.geom.AffineTransform);
  public void renderRectangle(int, byte, sun.java2d.xr.XRColor, int, int, int, int);
  public int createLinearGradient(java.awt.geom.Point2D, java.awt.geom.Point2D, float[], int[], int);
  public int createRadialGradient(float, float, float, float, float[], int[], int);
  public void setGCClipRectangles(long, sun.java2d.pipe.Region);
  public void setClipRectangles(int, sun.java2d.pipe.Region);
  public void renderRectangles(int, byte, sun.java2d.xr.XRColor, sun.java2d.xr.GrowableRectArray);
  public void XRenderAddGlyphs(int, sun.font.GlyphList, java.util.List<sun.font.XRGlyphCacheEntry>, byte[]);
  public void XRenderFreeGlyphs(int, int[]);
  public int XRenderCreateGlyphSet(int);
  public void XRenderCompositeText(byte, int, int, int, int, int, int, int, int, sun.java2d.xr.GrowableEltArray);
  public void putMaskImage(int, long, byte[], int, int, int, int, int, int, int, int, float);
  public void padBlit(byte, int, int, int, java.awt.geom.AffineTransform, int, int, int, int, int, int, int, int, int, int);
  static {};
}
