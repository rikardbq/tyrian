Compiled from "XRUtils.java"
public class sun.java2d.xr.XRUtils {
  public static final int None;
  public static final byte PictOpClear;
  public static final byte PictOpSrc;
  public static final byte PictOpDst;
  public static final byte PictOpOver;
  public static final byte PictOpOverReverse;
  public static final byte PictOpIn;
  public static final byte PictOpInReverse;
  public static final byte PictOpOut;
  public static final byte PictOpOutReverse;
  public static final byte PictOpAtop;
  public static final byte PictOpAtopReverse;
  public static final byte PictOpXor;
  public static final byte PictOpAdd;
  public static final byte PictOpSaturate;
  public static final int RepeatNone;
  public static final int RepeatNormal;
  public static final int RepeatPad;
  public static final int RepeatReflect;
  public static final int FAST;
  public static final int GOOD;
  public static final int BEST;
  public static final byte[] FAST_NAME;
  public static final byte[] GOOD_NAME;
  public static final byte[] BEST_NAME;
  public static final int PictStandardARGB32;
  public static final int PictStandardRGB24;
  public static final int PictStandardA8;
  public static final int PictStandardA4;
  public static final int PictStandardA1;
  public sun.java2d.xr.XRUtils();
  public static int ATransOpToXRQuality(int);
  public static byte[] ATransOpToXRQualityName(int);
  public static byte[] getFilterName(int);
  public static int getPictureFormatForTransparency(int);
  public static sun.java2d.loops.SurfaceType getXRSurfaceTypeForTransparency(int);
  public static int getRepeatForCycleMethod(java.awt.MultipleGradientPaint$CycleMethod);
  public static int XDoubleToFixed(double);
  public static double XFixedToDouble(int);
  public static int[] convertFloatsToFixed(float[]);
  public static long intToULong(int);
  public static byte j2dAlphaCompToXR(int);
  public static short clampToShort(int);
  public static int clampToUShort(int);
  public static boolean isDoubleInShortRange(double);
  public static boolean isPointCoordInShortRange(java.awt.geom.Point2D);
  public static boolean isTransformQuadrantRotated(java.awt.geom.AffineTransform);
  public static boolean isMaskEvaluated(byte);
  static {};
}
