Compiled from "HeadlessToolkit.java"
public final class sun.awt.HeadlessToolkit extends java.awt.Toolkit implements sun.awt.ComponentFactory,sun.awt.KeyboardFocusManagerPeerProvider {
  public sun.awt.HeadlessToolkit(java.awt.Toolkit);
  public java.awt.Toolkit getUnderlyingToolkit();
  public java.awt.peer.KeyboardFocusManagerPeer getKeyboardFocusManagerPeer();
  public java.awt.peer.TrayIconPeer createTrayIcon(java.awt.TrayIcon) throws java.awt.HeadlessException;
  public java.awt.peer.SystemTrayPeer createSystemTray(java.awt.SystemTray) throws java.awt.HeadlessException;
  public boolean isTraySupported();
  public sun.awt.GlobalCursorManager getGlobalCursorManager() throws java.awt.HeadlessException;
  protected void loadSystemColors(int[]) throws java.awt.HeadlessException;
  public java.awt.image.ColorModel getColorModel() throws java.awt.HeadlessException;
  public int getScreenResolution() throws java.awt.HeadlessException;
  public java.util.Map<java.awt.font.TextAttribute, ?> mapInputMethodHighlight(java.awt.im.InputMethodHighlight) throws java.awt.HeadlessException;
  public int getMenuShortcutKeyMask() throws java.awt.HeadlessException;
  public int getMenuShortcutKeyMaskEx() throws java.awt.HeadlessException;
  public boolean getLockingKeyState(int) throws java.lang.UnsupportedOperationException;
  public void setLockingKeyState(int, boolean) throws java.lang.UnsupportedOperationException;
  public java.awt.Cursor createCustomCursor(java.awt.Image, java.awt.Point, java.lang.String) throws java.lang.IndexOutOfBoundsException, java.awt.HeadlessException;
  public java.awt.Dimension getBestCursorSize(int, int) throws java.awt.HeadlessException;
  public int getMaximumCursorColors() throws java.awt.HeadlessException;
  public <T extends java.awt.dnd.DragGestureRecognizer> T createDragGestureRecognizer(java.lang.Class<T>, java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener);
  public java.awt.Dimension getScreenSize() throws java.awt.HeadlessException;
  public java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration) throws java.awt.HeadlessException;
  public void setDynamicLayout(boolean) throws java.awt.HeadlessException;
  protected boolean isDynamicLayoutSet() throws java.awt.HeadlessException;
  public boolean isDynamicLayoutActive() throws java.awt.HeadlessException;
  public java.awt.datatransfer.Clipboard getSystemClipboard() throws java.awt.HeadlessException;
  public java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes);
  public java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties);
  public void sync();
  public void beep();
  public java.awt.EventQueue getSystemEventQueueImpl();
  public int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public java.awt.Image getImage(java.lang.String);
  public java.awt.Image getImage(java.net.URL);
  public java.awt.Image createImage(java.lang.String);
  public java.awt.Image createImage(java.net.URL);
  public java.awt.Image createImage(byte[], int, int);
  public java.awt.Image createImage(java.awt.image.ImageProducer);
  public java.awt.Image createImage(byte[]);
  public java.awt.peer.FontPeer getFontPeer(java.lang.String, int);
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public java.lang.String[] getFontList();
  public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public boolean isModalityTypeSupported(java.awt.Dialog$ModalityType);
  public boolean isModalExclusionTypeSupported(java.awt.Dialog$ModalExclusionType);
  public boolean isAlwaysOnTopSupported();
  public void addAWTEventListener(java.awt.event.AWTEventListener, long);
  public void removeAWTEventListener(java.awt.event.AWTEventListener);
  public java.awt.event.AWTEventListener[] getAWTEventListeners();
  public java.awt.event.AWTEventListener[] getAWTEventListeners(long);
  public boolean isDesktopSupported();
  public boolean areExtraMouseButtonsEnabled() throws java.awt.HeadlessException;
  static {};
}
