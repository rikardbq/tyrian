Compiled from "XWindow.java"
class sun.awt.X11.XWindow extends sun.awt.X11.XBaseWindow implements sun.awt.X11ComponentPeer {
  static int lastX;
  static int lastY;
  static long lastTime;
  static long lastButton;
  static java.lang.ref.WeakReference<sun.awt.X11.XWindow> lastWindowRef;
  static int clickCount;
  int oldWidth;
  int oldHeight;
  protected sun.awt.X11.PropMwmHints mwm_hints;
  protected static sun.awt.X11.XAtom wm_protocols;
  protected static sun.awt.X11.XAtom wm_delete_window;
  protected static sun.awt.X11.XAtom wm_take_focus;
  sun.awt.X11.XWindowAttributesData winAttr;
  protected sun.awt.X11GraphicsConfig graphicsConfig;
  protected sun.awt.X11.AwtGraphicsConfigData graphicsConfigData;
  sun.awt.X11.XWindow parent;
  java.awt.Component target;
  public static final java.lang.String TARGET;
  public static final java.lang.String REPARENTED;
  sun.java2d.SurfaceData surfaceData;
  sun.awt.X11.XRepaintArea paintArea;
  java.awt.Color backgroundColor;
  static synchronized java.awt.Font getDefaultFont();
  native int getNativeColor(java.awt.Color, java.awt.GraphicsConfiguration);
  native void getWMInsets(long, long, long, long, long, long);
  native long getTopWindow(long, long);
  native void getWindowBounds(long, long, long, long, long);
  sun.awt.X11.XWindow(sun.awt.X11.XCreateWindowParams);
  sun.awt.X11.XWindow();
  sun.awt.X11.XWindow(long, java.awt.Rectangle);
  sun.awt.X11.XWindow(java.awt.Component, long, java.awt.Rectangle);
  sun.awt.X11.XWindow(java.awt.Component, long);
  sun.awt.X11.XWindow(java.awt.Component);
  sun.awt.X11.XWindow(java.lang.Object);
  sun.awt.X11.XWindow(long);
  protected void initGraphicsConfiguration();
  void preInit(sun.awt.X11.XCreateWindowParams);
  void postInit(sun.awt.X11.XCreateWindowParams);
  public java.awt.GraphicsConfiguration getGraphicsConfiguration();
  public sun.awt.X11.AwtGraphicsConfigData getGraphicsConfigurationData();
  protected java.lang.String[] getWMClass();
  void setReparented(boolean);
  boolean isReparented();
  static long getParentWindowID(java.awt.Component);
  static sun.awt.X11.XWindow getParentXWindowObject(java.awt.Component);
  boolean isParentOf(sun.awt.X11.XWindow);
  public java.lang.Object getTarget();
  public java.awt.Component getEventSource();
  public java.awt.image.ColorModel getColorModel(int);
  public java.awt.image.ColorModel getColorModel();
  java.awt.Graphics getGraphics(sun.java2d.SurfaceData, java.awt.Color, java.awt.Color, java.awt.Font);
  public java.awt.Graphics getGraphics();
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public java.awt.Rectangle getTargetBounds();
  boolean prePostEvent(java.awt.AWTEvent);
  static void sendEvent(java.awt.AWTEvent);
  void postEvent(java.awt.AWTEvent);
  static void postEventStatic(java.awt.AWTEvent);
  public void postEventToEventQueue(java.awt.AWTEvent);
  protected boolean doEraseBackground();
  public final void xSetBackground(java.awt.Color);
  public void setBackground(java.awt.Color);
  void winBackground(java.awt.Color);
  public java.awt.Color getWinBackground();
  public boolean isEmbedded();
  public final void repaint(int, int, int, int);
  void repaint();
  public void paint(java.awt.Graphics);
  void paintPeer(java.awt.Graphics);
  protected void flush();
  public void popup(int, int, int, int);
  public void handleExposeEvent(sun.awt.X11.XEvent);
  public void postPaintEvent(java.awt.Component, int, int, int, int);
  static int getModifiers(int, int, int);
  static int getWheelModifiers(int, int);
  static boolean isWheel(int);
  static int getXModifiers(java.awt.AWTKeyStroke);
  static int getMouseMovementSmudge();
  public void handleButtonPressRelease(sun.awt.X11.XEvent);
  public void handleMotionNotify(sun.awt.X11.XEvent);
  public boolean isMouseAbove();
  protected void setMouseAbove(boolean);
  protected void enterNotify(long);
  protected void leaveNotify(long);
  public void handleXCrossingEvent(sun.awt.X11.XEvent);
  public void doLayout(int, int, int, int);
  public void handleConfigureNotifyEvent(sun.awt.X11.XEvent);
  public void handleMapNotifyEvent(sun.awt.X11.XEvent);
  public void handleUnmapNotifyEvent(sun.awt.X11.XEvent);
  int keysymToUnicode(long, int);
  int keyEventType2Id(int);
  void logIncomingKeyEvent(sun.awt.X11.XKeyEvent);
  public void handleKeyPress(sun.awt.X11.XEvent);
  final void handleKeyPress(sun.awt.X11.XKeyEvent);
  public void handleKeyRelease(sun.awt.X11.XEvent);
  int getWMState();
  protected void stateChanged(long, int, int);
  public void handlePropertyNotify(sun.awt.X11.XEvent);
  public void reshape(java.awt.Rectangle);
  public void reshape(int, int, int, int);
  public void layout();
  boolean isShowing();
  boolean isResizable();
  boolean isLocationByPlatform();
  void updateSizeHints();
  void updateSizeHints(int, int, int, int);
  void updateSizeHints(int, int);
  void validateSurface();
  final void doValidateSurface();
  public sun.java2d.SurfaceData getSurfaceData();
  public void dispose();
  public java.awt.Point getLocationOnScreen();
  static void setBData(java.awt.event.KeyEvent, byte[]);
  public void postKeyEvent(int, long, int, int, int, int, long, int, long, int, int);
  static native int getAWTKeyCodeForKeySym(int);
  static native int getKeySymForAWTKeyCode(int);
  public sun.awt.X11.PropMwmHints getMWMHints();
  public void setMWMHints(sun.awt.X11.PropMwmHints);
  protected final void initWMProtocols();
  protected sun.awt.X11.XAtomList getWMProtocols();
  public void setFullScreenExclusiveModeState(boolean);
  public final boolean isFullScreenExclusiveMode();
  protected int getScale();
  protected int scaleUp(int);
  protected int scaleDown(int);
  static {};
}
