Compiled from "XMSelection.java"
public class sun.awt.X11.XMSelection {
  java.lang.String selectionName;
  java.util.Vector<sun.awt.X11.XMSelectionListener> listeners;
  sun.awt.X11.XAtom[] atoms;
  long[] owners;
  long eventMask;
  static int numScreens;
  static sun.awt.X11.XAtom XA_MANAGER;
  static java.util.HashMap<java.lang.Long, sun.awt.X11.XMSelection> selectionMap;
  static void initScreen(long, int);
  public int getNumberOfScreens();
  void select(long);
  void resetOwner(long, int);
  void selectPerScreen(int, long);
  static boolean processClientMessage(sun.awt.X11.XEvent, int);
  static boolean processRootEvent(sun.awt.X11.XEvent, int);
  static sun.awt.X11.XMSelection getInstance(long);
  public sun.awt.X11.XMSelection(java.lang.String);
  public sun.awt.X11.XMSelection(java.lang.String, long);
  public synchronized void addSelectionListener(sun.awt.X11.XMSelectionListener);
  public synchronized void removeSelectionListener(sun.awt.X11.XMSelectionListener);
  synchronized java.util.Collection<sun.awt.X11.XMSelectionListener> getListeners();
  synchronized sun.awt.X11.XAtom getAtom(int);
  synchronized void setAtom(sun.awt.X11.XAtom, int);
  synchronized long getOwner(int);
  synchronized void setOwner(long, int);
  synchronized java.lang.String getName();
  synchronized void dispatchSelectionChanged(sun.awt.X11.XPropertyEvent, int);
  synchronized void dispatchOwnerDeath(sun.awt.X11.XDestroyWindowEvent, int);
  void dispatchSelectionEvent(sun.awt.X11.XEvent, int);
  synchronized void dispatchOwnerChangedEvent(sun.awt.X11.XEvent, int, long, long, long);
  static {};
}
