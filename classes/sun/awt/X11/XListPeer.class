Compiled from "XListPeer.java"
class sun.awt.X11.XListPeer extends sun.awt.X11.XComponentPeer implements java.awt.peer.ListPeer,sun.awt.X11.XScrollbarClient {
  public static final int MARGIN;
  public static final int SPACE;
  public static final int SCROLLBAR_AREA;
  public static final int SCROLLBAR_WIDTH;
  public static final int NONE;
  public static final int WINDOW;
  public static final int VERSCROLLBAR;
  public static final int HORSCROLLBAR;
  public static final int DEFAULT_VISIBLE_ROWS;
  public static final int HORIZ_SCROLL_AMT;
  sun.awt.X11.XVerticalScrollbar vsb;
  sun.awt.X11.XHorizontalScrollbar hsb;
  sun.awt.X11.XListPeer$ListPainter painter;
  java.util.Vector<java.lang.String> items;
  boolean multipleSelections;
  int active;
  int[] selected;
  int fontHeight;
  int fontAscent;
  int fontLeading;
  int currentIndex;
  int eventIndex;
  int eventType;
  int focusIndex;
  int maxLength;
  boolean vsbVis;
  boolean hsbVis;
  int listWidth;
  int listHeight;
  boolean bgColorSet;
  boolean fgColorSet;
  boolean mouseDraggedOutHorizontally;
  boolean mouseDraggedOutVertically;
  boolean isScrollBarOriginated;
  boolean isMousePressed;
  static final boolean $assertionsDisabled;
  sun.awt.X11.XListPeer(java.awt.List);
  public void preInit(sun.awt.X11.XCreateWindowParams);
  public void postInit(sun.awt.X11.XCreateWindowParams);
  void createVerScrollbar();
  void createHorScrollbar();
  public void add(java.lang.String, int);
  public void removeAll();
  public void setMultipleMode(boolean);
  public java.awt.Dimension getMinimumSize();
  public java.awt.Dimension getPreferredSize(int);
  public java.awt.Dimension getMinimumSize(int);
  void initFontMetrics();
  int maxLength();
  int getItemWidth(int);
  int stringLength(java.lang.String);
  public void setForeground(java.awt.Color);
  public void setBackground(java.awt.Color);
  java.awt.Rectangle getVScrollBarRec();
  java.awt.Rectangle getHScrollBarRec();
  int getFirstVisibleItem();
  int getLastVisibleItem();
  public void repaintScrollbarRequest(sun.awt.X11.XScrollbar);
  public void repaint();
  void paintPeer(java.awt.Graphics);
  public boolean isFocusable();
  public void focusGained(java.awt.event.FocusEvent);
  public void focusLost(java.awt.event.FocusEvent);
  public void layout();
  int getItemWidth();
  int getItemHeight();
  int getItemX();
  int getItemY(int);
  int getFocusIndex();
  void setFocusIndex(int);
  java.awt.Rectangle getFocusRect();
  public void handleConfigureNotifyEvent(sun.awt.X11.XEvent);
  public boolean handlesWheelScrolling();
  void handleJavaMouseEvent(java.awt.event.MouseEvent);
  void handleJavaMouseWheelEvent(java.awt.event.MouseWheelEvent);
  void mousePressed(java.awt.event.MouseEvent);
  void mouseReleased(java.awt.event.MouseEvent);
  void mouseDragged(java.awt.event.MouseEvent);
  void trackMouseDraggedScroll(java.awt.event.MouseEvent);
  void trackMouseReleasedScroll();
  void handleJavaKeyEvent(java.awt.event.KeyEvent);
  void keyPressed(java.awt.event.KeyEvent);
  public void notifyValue(sun.awt.X11.XScrollbar, int, int, boolean);
  public void setMultipleSelections(boolean);
  public void addItem(java.lang.String, int);
  public void delItems(int, int);
  public void select(int);
  void selectItem(int);
  public void deselect(int);
  void deselectItem(int);
  public void makeVisible(int);
  public void clear();
  public int[] getSelectedIndexes();
  int index2y(int);
  boolean validY(int);
  int posInSel(int);
  boolean isIndexDisplayed(int);
  int lastItemDisplayed();
  boolean isItemHidden(int);
  int getListWidth();
  int itemsDisplayed();
  void scrollVertical(int);
  void scrollHorizontal(int);
  int y2index(int);
  boolean isSelected(int);
  int itemsInWindow(boolean);
  int itemsInWindow();
  boolean inHorizontalScrollbar(int, int);
  boolean inVerticalScrollbar(int, int);
  boolean inWindow(int, int);
  boolean vsbIsVisible(boolean);
  boolean hsbIsVisible(boolean);
  boolean prePostEvent(java.awt.AWTEvent);
  boolean prePostMouseEvent(java.awt.event.MouseEvent);
  void handleJavaMouseEventOnEDT(java.awt.event.MouseEvent);
  public void setFont(java.awt.Font);
  static {};
}
