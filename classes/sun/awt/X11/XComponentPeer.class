Compiled from "XComponentPeer.java"
public class sun.awt.X11.XComponentPeer extends sun.awt.X11.XWindow implements java.awt.peer.ComponentPeer,java.awt.dnd.peer.DropTargetPeer,sun.java2d.BackBufferCapsProvider {
  boolean paintPending;
  boolean isLayouting;
  protected int boundsOperation;
  java.awt.Color foreground;
  java.awt.Color background;
  java.awt.Color darkShadow;
  java.awt.Color lightShadow;
  java.awt.Color selectColor;
  java.awt.Font font;
  static java.awt.Color[] systemColors;
  boolean bHasFocus;
  static final int BACKGROUND_COLOR;
  static final int HIGHLIGHT_COLOR;
  static final int SHADOW_COLOR;
  static final int FOREGROUND_COLOR;
  sun.awt.X11.XComponentPeer();
  sun.awt.X11.XComponentPeer(sun.awt.X11.XCreateWindowParams);
  sun.awt.X11.XComponentPeer(java.awt.Component, long, java.awt.Rectangle);
  sun.awt.X11.XComponentPeer(java.awt.Component);
  void preInit(sun.awt.X11.XCreateWindowParams);
  void postInit(sun.awt.X11.XCreateWindowParams);
  protected boolean isInitialReshape();
  public void reparent(java.awt.peer.ContainerPeer);
  public boolean isReparentSupported();
  public boolean isObscured();
  public boolean canDetermineObscurity();
  public final boolean hasFocus();
  public void focusGained(java.awt.event.FocusEvent);
  public void focusLost(java.awt.event.FocusEvent);
  public boolean isFocusable();
  static final java.awt.AWTEvent wrapInSequenced(java.awt.AWTEvent);
  public final boolean requestFocus(java.awt.Component, boolean, boolean, long, java.awt.event.FocusEvent$Cause);
  void handleJavaFocusEvent(java.awt.AWTEvent);
  void handleJavaWindowFocusEvent(java.awt.AWTEvent);
  public void setVisible(boolean);
  public void hide();
  public void setEnabled(boolean);
  public final boolean isEnabled();
  public void paint(java.awt.Graphics);
  public java.awt.Graphics getGraphics();
  public void print(java.awt.Graphics);
  public void setBounds(int, int, int, int, int);
  public void reshape(int, int, int, int);
  public void coalescePaintEvent(java.awt.event.PaintEvent);
  sun.awt.X11.XWindowPeer getParentTopLevel();
  void handleJavaMouseEvent(java.awt.event.MouseEvent);
  void handleJavaKeyEvent(java.awt.event.KeyEvent);
  void handleJavaMouseWheelEvent(java.awt.event.MouseWheelEvent);
  void handleJavaInputMethodEvent(java.awt.event.InputMethodEvent);
  void handleF10JavaKeyEvent(java.awt.event.KeyEvent);
  public void handleEvent(java.awt.AWTEvent);
  public java.awt.Dimension getMinimumSize();
  public java.awt.Dimension getPreferredSize();
  public void layout();
  void updateMotifColors(java.awt.Color);
  public void drawMotif3DRect(java.awt.Graphics, int, int, int, int, boolean);
  public void setBackground(java.awt.Color);
  public void setForeground(java.awt.Color);
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public void setFont(java.awt.Font);
  public java.awt.Font getFont();
  public void updateCursorImmediately();
  public final void pSetCursor(java.awt.Cursor);
  public void pSetCursor(java.awt.Cursor, boolean);
  public java.awt.Image createImage(java.awt.image.ImageProducer);
  public java.awt.Image createImage(int, int);
  public java.awt.image.VolatileImage createVolatileImage(int, int);
  public boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public java.awt.Insets getInsets();
  public void beginValidate();
  public void endValidate();
  public boolean isPaintPending();
  public boolean handlesWheelScrolling();
  public void beginLayout();
  public void endLayout();
  public java.awt.Color getWinBackground();
  static int[] getRGBvals(java.awt.Color);
  public java.awt.Color[] getGUIcolors();
  static java.awt.Color[] getSystemColors();
  public void draw3DOval(java.awt.Graphics, java.awt.Color[], int, int, int, int, boolean);
  public void draw3DRect(java.awt.Graphics, java.awt.Color[], int, int, int, int, boolean);
  void draw3DOval(java.awt.Graphics, java.awt.Color, int, int, int, int, boolean);
  void draw3DRect(java.awt.Graphics, java.awt.Color, int, int, int, int, boolean);
  void drawScrollbar(java.awt.Graphics, java.awt.Color, int, int, int, int, int, int, boolean);
  public void createBuffers(int, java.awt.BufferCapabilities) throws java.awt.AWTException;
  public java.awt.BufferCapabilities getBackBufferCaps();
  public void flip(int, int, int, int, java.awt.BufferCapabilities$FlipContents);
  public java.awt.Image getBackBuffer();
  public void destroyBuffers();
  public void notifyTextComponentChange(boolean);
  protected boolean isEventDisabled(sun.awt.X11.XEvent);
  java.awt.Color getPeerBackground();
  java.awt.Color getPeerForeground();
  java.awt.Font getPeerFont();
  java.awt.Dimension getPeerSize();
  public void setBoundsOperation(int);
  static java.lang.String operationToString(int);
  public void setZOrder(java.awt.peer.ComponentPeer);
  public void addDropTarget(java.awt.dnd.DropTarget);
  public void removeDropTarget(java.awt.dnd.DropTarget);
  public void applyShape(sun.java2d.pipe.Region);
  public boolean updateGraphicsData(java.awt.GraphicsConfiguration);
  public void setFullScreenExclusiveModeState(boolean);
  public void setMWMHints(sun.awt.X11.PropMwmHints);
  public sun.awt.X11.PropMwmHints getMWMHints();
  public void postKeyEvent(int, long, int, int, int, int, long, int, long, int, int);
  public java.awt.Point getLocationOnScreen();
  public void dispose();
  public sun.java2d.SurfaceData getSurfaceData();
  public void reshape(java.awt.Rectangle);
  public void handlePropertyNotify(sun.awt.X11.XEvent);
  public void handleKeyRelease(sun.awt.X11.XEvent);
  public void handleKeyPress(sun.awt.X11.XEvent);
  public void handleUnmapNotifyEvent(sun.awt.X11.XEvent);
  public void handleMapNotifyEvent(sun.awt.X11.XEvent);
  public void handleConfigureNotifyEvent(sun.awt.X11.XEvent);
  public void doLayout(int, int, int, int);
  public void handleXCrossingEvent(sun.awt.X11.XEvent);
  public boolean isMouseAbove();
  public void handleMotionNotify(sun.awt.X11.XEvent);
  public void handleButtonPressRelease(sun.awt.X11.XEvent);
  public void postPaintEvent(java.awt.Component, int, int, int, int);
  public void handleExposeEvent(sun.awt.X11.XEvent);
  public void popup(int, int, int, int);
  public boolean isEmbedded();
  public void postEventToEventQueue(java.awt.AWTEvent);
  public java.awt.Rectangle getTargetBounds();
  public java.awt.image.ColorModel getColorModel();
  public java.awt.image.ColorModel getColorModel(int);
  public java.awt.Component getEventSource();
  public java.lang.Object getTarget();
  public sun.awt.X11.AwtGraphicsConfigData getGraphicsConfigurationData();
  public java.awt.GraphicsConfiguration getGraphicsConfiguration();
  static {};
}
