Compiled from "XFramePeer.java"
class sun.awt.X11.XFramePeer extends sun.awt.X11.XDecoratedPeer implements java.awt.peer.FramePeer {
  sun.awt.X11.XMenuBarPeer menubarPeer;
  java.awt.MenuBar menubar;
  int state;
  static final int CROSSHAIR_INSET;
  static final int BUTTON_Y;
  static final int BUTTON_W;
  static final int BUTTON_H;
  static final int SYS_MENU_X;
  static final int SYS_MENU_CONTAINED_X;
  static final int SYS_MENU_CONTAINED_Y;
  static final int SYS_MENU_CONTAINED_W;
  static final int SYS_MENU_CONTAINED_H;
  static final int MAXIMIZE_X_DIFF;
  static final int MAXIMIZE_CONTAINED_X_DIFF;
  static final int MAXIMIZE_CONTAINED_Y;
  static final int MAXIMIZE_CONTAINED_W;
  static final int MAXIMIZE_CONTAINED_H;
  static final int MINIMIZE_X_DIFF;
  static final int MINIMIZE_CONTAINED_X_DIFF;
  static final int MINIMIZE_CONTAINED_Y;
  static final int MINIMIZE_CONTAINED_W;
  static final int MINIMIZE_CONTAINED_H;
  static final int TITLE_X;
  static final int TITLE_W_DIFF;
  static final int TITLE_MID_Y;
  static final int MENUBAR_X;
  static final int MENUBAR_Y;
  static final int HORIZ_RESIZE_INSET;
  static final int VERT_RESIZE_INSET;
  sun.awt.X11.XFramePeer(java.awt.Frame);
  sun.awt.X11.XFramePeer(sun.awt.X11.XCreateWindowParams);
  void preInit(sun.awt.X11.XCreateWindowParams);
  void postInit(sun.awt.X11.XCreateWindowParams);
  boolean isTargetUndecorated();
  void setupState(boolean);
  public void setMenuBar(java.awt.MenuBar);
  sun.awt.X11.XMenuBarPeer getMenubarPeer();
  int getMenuBarHeight();
  void updateChildrenSizes();
  final void reshapeMenubarPeer();
  public void setMaximizedBounds(java.awt.Rectangle);
  public int getState();
  public void setState(int);
  void changeState(int);
  void setExtendedState(int);
  public void handlePropertyNotify(sun.awt.X11.XEvent);
  public void handleStateChange(int, int);
  public void setVisible(boolean);
  void setInitialState(int);
  public void dispose();
  boolean isMaximized();
  public void print(java.awt.Graphics);
  public void setBoundsPrivate(int, int, int, int);
  public java.awt.Rectangle getBoundsPrivate();
  public void emulateActivation(boolean);
  static {};
}
