Compiled from "XWM.java"
final class sun.awt.X11.XWM {
  static final sun.awt.X11.XAtom XA_MWM_HINTS;
  static sun.awt.X11.XAtom XA_WM_STATE;
  sun.awt.X11.XAtom XA_UTF8_STRING;
  static final int AWT_NET_N_KNOWN_STATES;
  static final sun.awt.X11.XAtom XA_E_FRAME_SIZE;
  static final sun.awt.X11.XAtom XA_KDE_NET_WM_FRAME_STRUT;
  static final sun.awt.X11.XAtom XA_KWM_WIN_ICONIFIED;
  static final sun.awt.X11.XAtom XA_KWM_WIN_MAXIMIZED;
  static final sun.awt.X11.XAtom XA_OL_DECOR_DEL;
  static final sun.awt.X11.XAtom XA_OL_DECOR_HEADER;
  static final sun.awt.X11.XAtom XA_OL_DECOR_RESIZE;
  static final sun.awt.X11.XAtom XA_OL_DECOR_PIN;
  static final sun.awt.X11.XAtom XA_OL_DECOR_CLOSE;
  static final sun.awt.X11.XAtom XA_NET_FRAME_EXTENTS;
  static final sun.awt.X11.XAtom XA_NET_REQUEST_FRAME_EXTENTS;
  static final int UNDETERMINED_WM;
  static final int NO_WM;
  static final int OTHER_WM;
  static final int OPENLOOK_WM;
  static final int MOTIF_WM;
  static final int CDE_WM;
  static final int ENLIGHTEN_WM;
  static final int KDE2_WM;
  static final int SAWFISH_WM;
  static final int ICE_WM;
  static final int METACITY_WM;
  static final int COMPIZ_WM;
  static final int LG3D_WM;
  static final int CWM_WM;
  static final int MUTTER_WM;
  static final int UNITY_COMPIZ_WM;
  int WMID;
  static final java.awt.Insets zeroInsets;
  static final java.awt.Insets defaultInsets;
  static sun.awt.X11.XNETProtocol g_net_protocol;
  static sun.awt.X11.XWINProtocol g_win_protocol;
  static sun.awt.X11.XAtom XA_ENLIGHTENMENT_COMMS;
  static final sun.awt.X11.XAtom XA_DT_SM_WINDOW_INFO;
  static final sun.awt.X11.XAtom XA_DT_SM_STATE_INFO;
  static final sun.awt.X11.XAtom XA_MOTIF_WM_INFO;
  static final sun.awt.X11.XAtom XA_DT_WORKSPACE_CURRENT;
  static int awtWMNonReparenting;
  static final sun.awt.X11.XAtom XA_ICEWM_WINOPTHINT;
  static final char[] opt;
  static final sun.awt.X11.XAtom XA_SUN_WM_PROTOCOLS;
  static int awt_wmgr;
  static sun.awt.X11.XWM wm;
  static boolean inited;
  java.util.HashMap<java.lang.Class<?>, java.awt.Insets> storedInsets;
  static int awtWMStaticGravity;
  static final boolean $assertionsDisabled;
  public java.lang.String toString();
  sun.awt.X11.XWM(int);
  int getID();
  static java.awt.Insets normalize(java.awt.Insets);
  static boolean isNetWMName(java.lang.String);
  static void initAtoms();
  static long getECommsWindowIDProperty(long);
  static boolean isEnlightenment();
  static boolean isCDE();
  static boolean isMotif();
  static boolean isSawfish();
  static boolean isKDE2();
  static boolean isCompiz();
  static boolean isUnityCompiz();
  static boolean isLookingGlass();
  static boolean isCWM();
  static boolean isMetacity();
  static boolean isMutter();
  static boolean isNonReparentingWM();
  static boolean prepareIsIceWM();
  static boolean isIceWM();
  static boolean isOpenLook();
  static sun.awt.X11.XWM getWM();
  static int getWMID();
  static void removeSizeHints(sun.awt.X11.XDecoratedPeer, long);
  static int normalizeMotifDecor(int);
  static int normalizeMotifFunc(int);
  static void setOLDecor(sun.awt.X11.XWindow, boolean, int);
  static void setMotifDecor(sun.awt.X11.XWindow, boolean, int, int);
  static boolean needRemap(sun.awt.X11.XDecoratedPeer);
  static void setShellDecor(sun.awt.X11.XDecoratedPeer);
  static void setShellResizable(sun.awt.X11.XDecoratedPeer);
  static void setShellNotResizable(sun.awt.X11.XDecoratedPeer, sun.awt.X11.WindowDimensions, java.awt.Rectangle, boolean);
  <T> java.util.Collection<T> getProtocols(java.lang.Class<T>);
  boolean supportsDynamicLayout();
  boolean supportsExtendedState(int);
  int getExtendedState(sun.awt.X11.XWindowPeer);
  boolean isStateChange(sun.awt.X11.XDecoratedPeer, sun.awt.X11.XPropertyEvent);
  int getState(sun.awt.X11.XDecoratedPeer);
  void setLayer(sun.awt.X11.XWindowPeer, int);
  void setExtendedState(sun.awt.X11.XWindowPeer, int);
  void unshadeKludge(sun.awt.X11.XDecoratedPeer);
  static void init();
  void initializeProtocols();
  java.awt.Insets guessInsets(sun.awt.X11.XDecoratedPeer);
  static boolean configureGravityBuggy();
  public static java.awt.Insets getInsetsFromExtents(long);
  public static java.awt.Insets getInsetsFromProp(long, sun.awt.X11.XAtom);
  public static void requestWMExtents(long);
  boolean syncTopLevelPos(long, sun.awt.X11.XWindowAttributes);
  java.awt.Insets getInsets(sun.awt.X11.XDecoratedPeer, long, long);
  boolean isDesktopWindow(long);
  public sun.awt.X11.XNETProtocol getNETProtocol();
  public boolean setNetWMIcon(sun.awt.X11.XWindowPeer, java.util.List<sun.awt.IconInfo>);
  static {};
}
