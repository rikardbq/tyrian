Compiled from "XEmbedCanvasPeer.java"
public class sun.awt.X11.XEmbedCanvasPeer extends sun.awt.X11.XCanvasPeer implements java.awt.event.WindowFocusListener,java.awt.KeyEventPostProcessor,sun.awt.ModalityListener,sun.awt.WindowIDProvider {
  boolean applicationActive;
  sun.awt.X11.XEmbedCanvasPeer$XEmbedServer xembed;
  java.util.Map<java.lang.Long, java.awt.AWTKeyStroke> accelerators;
  java.util.Map<java.awt.AWTKeyStroke, java.lang.Long> accel_lookup;
  java.util.Set<sun.awt.X11.XEmbedCanvasPeer$GrabbedKey> grabbed_keys;
  java.lang.Object ACCEL_LOCK;
  java.lang.Object GRAB_LOCK;
  sun.awt.X11.XEmbedCanvasPeer();
  sun.awt.X11.XEmbedCanvasPeer(sun.awt.X11.XCreateWindowParams);
  sun.awt.X11.XEmbedCanvasPeer(java.awt.Component);
  protected void postInit(sun.awt.X11.XCreateWindowParams);
  protected void preInit(sun.awt.X11.XCreateWindowParams);
  void installModalityListener();
  void deinstallModalityListener();
  void installAcceleratorListener();
  void deinstallAcceleratorListener();
  void installActivateListener();
  void deinstallActivateListener();
  boolean isXEmbedActive();
  boolean isApplicationActive();
  void initDispatching();
  void endDispatching();
  void embedChild(long);
  void childDestroyed();
  public void handleEvent(java.awt.AWTEvent);
  public void dispatchEvent(sun.awt.X11.XEvent);
  public java.awt.Dimension getPreferredSize();
  public java.awt.Dimension getMinimumSize();
  public void dispose();
  public boolean isFocusable();
  java.awt.Window getTopLevel(java.awt.Component);
  java.awt.Rectangle getClientBounds();
  void childResized();
  void focusNext();
  void focusPrev();
  void requestXEmbedFocus();
  void notifyChildEmbedded();
  void detachChild();
  public void windowGainedFocus(java.awt.event.WindowEvent);
  public void windowLostFocus(java.awt.event.WindowEvent);
  void canvasFocusGained(java.awt.event.FocusEvent);
  void canvasFocusLost(java.awt.event.FocusEvent);
  static byte[] getBData(java.awt.event.KeyEvent);
  void forwardKeyEvent(java.awt.event.KeyEvent);
  void grabKey(long, long);
  void ungrabKey(long, long);
  void registerAccelerator(long, long, long);
  void unregisterAccelerator(long);
  void propogateRegisterAccelerator(java.awt.AWTKeyStroke);
  void propogateUnRegisterAccelerator(java.awt.AWTKeyStroke);
  public boolean postProcessKeyEvent(java.awt.event.KeyEvent);
  public void modalityPushed(sun.awt.ModalityEvent);
  public void modalityPopped(sun.awt.ModalityEvent);
  public void handleClientMessage(sun.awt.X11.XEvent);
  public void setXEmbedDropTarget();
  public void removeXEmbedDropTarget();
  public boolean processXEmbedDnDEvent(long, int);
  public void disableBackgroundErase();
  public java.awt.GraphicsConfiguration getAppropriateGraphicsConfiguration(java.awt.GraphicsConfiguration);
  static {};
}
