Compiled from "DataTransferer.java"
public abstract class sun.awt.datatransfer.DataTransferer {
  public static final java.awt.datatransfer.DataFlavor javaTextEncodingFlavor;
  public sun.awt.datatransfer.DataTransferer();
  public static synchronized sun.awt.datatransfer.DataTransferer getInstance();
  public static java.awt.datatransfer.FlavorTable adaptFlavorMap(java.awt.datatransfer.FlavorMap);
  public abstract java.lang.String getDefaultUnicodeEncoding();
  public void registerTextFlavorProperties(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  protected boolean isTextFormat(long);
  protected java.lang.String getCharsetForTextFormat(java.lang.Long);
  public abstract boolean isLocaleDependentTextFormat(long);
  public abstract boolean isFileFormat(long);
  public abstract boolean isImageFormat(long);
  protected boolean isURIListFormat(long);
  public java.util.SortedMap<java.lang.Long, java.awt.datatransfer.DataFlavor> getFormatsForTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.FlavorTable);
  public java.util.SortedMap<java.lang.Long, java.awt.datatransfer.DataFlavor> getFormatsForFlavors(java.awt.datatransfer.DataFlavor[], java.awt.datatransfer.FlavorTable);
  public long[] getFormatsForTransferableAsArray(java.awt.datatransfer.Transferable, java.awt.datatransfer.FlavorTable);
  public java.util.Map<java.awt.datatransfer.DataFlavor, java.lang.Long> getFlavorsForFormats(long[], java.awt.datatransfer.FlavorTable);
  public java.util.Set<java.awt.datatransfer.DataFlavor> getFlavorsForFormatsAsSet(long[], java.awt.datatransfer.FlavorTable);
  public java.awt.datatransfer.DataFlavor[] getFlavorsForFormatsAsArray(long[], java.awt.datatransfer.FlavorTable);
  protected abstract java.lang.Long getFormatForNativeAsLong(java.lang.String);
  protected abstract java.lang.String getNativeForFormat(long);
  protected java.lang.String getBestCharsetForTextFormat(java.lang.Long, java.awt.datatransfer.Transferable) throws java.io.IOException;
  public byte[] translateTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.DataFlavor, long) throws java.io.IOException;
  protected abstract java.io.ByteArrayOutputStream convertFileListToBytes(java.util.ArrayList<java.lang.String>) throws java.io.IOException;
  public java.lang.Object translateBytes(byte[], java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable) throws java.io.IOException;
  public java.lang.Object translateStream(java.io.InputStream, java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable) throws java.io.IOException;
  protected abstract java.lang.String[] dragQueryFile(byte[]);
  protected java.net.URI[] dragQueryURIs(java.io.InputStream, long, java.awt.datatransfer.Transferable) throws java.io.IOException;
  protected abstract java.awt.Image platformImageBytesToImage(byte[], long) throws java.io.IOException;
  protected java.awt.Image standardImageBytesToImage(byte[], java.lang.String) throws java.io.IOException;
  protected abstract byte[] imageToPlatformBytes(java.awt.Image, long) throws java.io.IOException;
  protected byte[] imageToStandardBytes(java.awt.Image, java.lang.String) throws java.io.IOException;
  byte[] imageToStandardBytesImpl(java.awt.image.RenderedImage, java.lang.String) throws java.io.IOException;
  public byte[] convertData(java.lang.Object, java.awt.datatransfer.Transferable, long, java.util.Map<java.lang.Long, java.awt.datatransfer.DataFlavor>, boolean) throws java.io.IOException;
  public void processDataConversionRequests();
  public abstract sun.awt.datatransfer.ToolkitThreadBlockedHandler getToolkitThreadBlockedHandler();
  public static long[] keysToLongArray(java.util.SortedMap<java.lang.Long, ?>);
  public static java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set<java.awt.datatransfer.DataFlavor>);
  protected static byte[] inputStreamToByteArray(java.io.InputStream) throws java.io.IOException;
  public java.util.LinkedHashSet<java.awt.datatransfer.DataFlavor> getPlatformMappingsForNative(java.lang.String);
  public java.util.LinkedHashSet<java.lang.String> getPlatformMappingsForFlavor(java.awt.datatransfer.DataFlavor);
  static {};
}
