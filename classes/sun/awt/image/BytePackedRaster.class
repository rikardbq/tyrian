Compiled from "BytePackedRaster.java"
public class sun.awt.image.BytePackedRaster extends sun.awt.image.SunWritableRaster {
  int dataBitOffset;
  int scanlineStride;
  int pixelBitStride;
  int bitMask;
  byte[] data;
  int shiftOffset;
  int type;
  public sun.awt.image.BytePackedRaster(java.awt.image.SampleModel, java.awt.Point);
  public sun.awt.image.BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBufferByte, java.awt.Point);
  public sun.awt.image.BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBufferByte, java.awt.Rectangle, java.awt.Point, sun.awt.image.BytePackedRaster);
  public int getDataBitOffset();
  public int getScanlineStride();
  public int getPixelBitStride();
  public byte[] getDataStorage();
  public java.lang.Object getDataElements(int, int, java.lang.Object);
  public java.lang.Object getDataElements(int, int, int, int, java.lang.Object);
  public java.lang.Object getPixelData(int, int, int, int, java.lang.Object);
  public byte[] getByteData(int, int, int, int, int, byte[]);
  public byte[] getByteData(int, int, int, int, byte[]);
  public void setDataElements(int, int, java.lang.Object);
  public void setDataElements(int, int, java.awt.image.Raster);
  public void setRect(int, int, java.awt.image.Raster);
  public void setDataElements(int, int, int, int, java.lang.Object);
  public void putByteData(int, int, int, int, int, byte[]);
  public void putByteData(int, int, int, int, byte[]);
  public int[] getPixels(int, int, int, int, int[]);
  public void setPixels(int, int, int, int, int[]);
  public java.awt.image.Raster createChild(int, int, int, int, int, int, int[]);
  public java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]);
  public java.awt.image.WritableRaster createCompatibleWritableRaster(int, int);
  public java.awt.image.WritableRaster createCompatibleWritableRaster();
  public java.lang.String toString();
  static {};
}
