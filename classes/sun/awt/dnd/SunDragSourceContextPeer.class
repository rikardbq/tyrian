Compiled from "SunDragSourceContextPeer.java"
public abstract class sun.awt.dnd.SunDragSourceContextPeer implements java.awt.dnd.peer.DragSourceContextPeer {
  protected static final int DISPATCH_ENTER;
  protected static final int DISPATCH_MOTION;
  protected static final int DISPATCH_CHANGED;
  protected static final int DISPATCH_EXIT;
  protected static final int DISPATCH_FINISH;
  protected static final int DISPATCH_MOUSE_MOVED;
  public sun.awt.dnd.SunDragSourceContextPeer(java.awt.dnd.DragGestureEvent);
  public void startSecondaryEventLoop();
  public void quitSecondaryEventLoop();
  public void startDrag(java.awt.dnd.DragSourceContext, java.awt.Cursor, java.awt.Image, java.awt.Point) throws java.awt.dnd.InvalidDnDOperationException;
  protected abstract void startDrag(java.awt.datatransfer.Transferable, long[], java.util.Map<java.lang.Long, java.awt.datatransfer.DataFlavor>);
  public void setCursor(java.awt.Cursor) throws java.awt.dnd.InvalidDnDOperationException;
  public java.awt.Cursor getCursor();
  public java.awt.Image getDragImage();
  public java.awt.Point getDragImageOffset();
  protected abstract void setNativeCursor(long, java.awt.Cursor, int);
  protected synchronized void setTrigger(java.awt.dnd.DragGestureEvent);
  protected java.awt.dnd.DragGestureEvent getTrigger();
  protected java.awt.Component getComponent();
  protected synchronized void setNativeContext(long);
  protected synchronized long getNativeContext();
  protected java.awt.dnd.DragSourceContext getDragSourceContext();
  public void transferablesFlavorsChanged();
  protected final void postDragSourceDragEvent(int, int, int, int, int);
  protected void dragEnter(int, int, int, int);
  protected final void dragExit(int, int);
  protected final void dragDropFinished(boolean, int, int, int);
  public static void setDragDropInProgress(boolean) throws java.awt.dnd.InvalidDnDOperationException;
  public static boolean checkEvent(java.awt.AWTEvent);
  public static void checkDragDropInProgress() throws java.awt.dnd.InvalidDnDOperationException;
  public static int convertModifiersToDropAction(int, int);
  static {};
}
