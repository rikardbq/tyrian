Compiled from "AppContext.java"
public final class sun.awt.AppContext {
  public static final java.lang.Object EVENT_QUEUE_KEY;
  public static final java.lang.Object EVENT_QUEUE_LOCK_KEY;
  public static final java.lang.Object EVENT_QUEUE_COND_KEY;
  public static final java.lang.String DISPOSED_PROPERTY_NAME;
  public static final java.lang.String GUI_DISPOSED;
  public static java.util.Set<sun.awt.AppContext> getAppContexts();
  public boolean isDisposed();
  sun.awt.AppContext(java.lang.ThreadGroup);
  public static sun.awt.AppContext getAppContext();
  public static boolean isMainContext(sun.awt.AppContext);
  public void dispose() throws java.lang.IllegalThreadStateException;
  static void stopEventDispatchThreads();
  public java.lang.Object get(java.lang.Object);
  public java.lang.Object put(java.lang.Object, java.lang.Object);
  public java.lang.Object remove(java.lang.Object);
  public java.lang.ThreadGroup getThreadGroup();
  public java.lang.ClassLoader getContextClassLoader();
  public java.lang.String toString();
  public synchronized java.beans.PropertyChangeListener[] getPropertyChangeListeners();
  public synchronized void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public synchronized void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public synchronized java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String);
  public static <T> T getSoftReferenceValue(java.lang.Object, java.util.function.Supplier<T>);
  static {};
}
