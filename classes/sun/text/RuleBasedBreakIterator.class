Compiled from "RuleBasedBreakIterator.java"
public class sun.text.RuleBasedBreakIterator extends java.text.BreakIterator {
  protected static final byte IGNORE;
  static final byte[] LABEL;
  static final int LABEL_LENGTH;
  static final byte supportedVersion;
  static final boolean $assertionsDisabled;
  public sun.text.RuleBasedBreakIterator(java.lang.String, byte[]);
  void validateRuleData(java.lang.String, java.nio.ByteBuffer);
  byte[] getAdditionalData();
  void setAdditionalData(byte[]);
  public java.lang.Object clone();
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  public int hashCode();
  public int first();
  public int last();
  public int next(int);
  public int next();
  public int previous();
  int getCurrent();
  int getNext();
  protected static final void checkOffset(int, java.text.CharacterIterator);
  public int following(int);
  public int preceding(int);
  public boolean isBoundary(int);
  public int current();
  public java.text.CharacterIterator getText();
  public void setText(java.text.CharacterIterator);
  protected int handleNext();
  protected int handlePrevious();
  protected int lookupCategory(int);
  protected int lookupState(int, int);
  protected int lookupBackwardState(int, int);
  static {};
}
