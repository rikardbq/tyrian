Compiled from "UnicodeSet.java"
class sun.text.normalizer.UnicodeSet {
  public static final int MIN_VALUE;
  public static final int MAX_VALUE;
  java.util.TreeSet<java.lang.String> strings;
  static final boolean $assertionsDisabled;
  public sun.text.normalizer.UnicodeSet(int, int);
  public sun.text.normalizer.UnicodeSet(java.lang.String);
  public sun.text.normalizer.UnicodeSet set(sun.text.normalizer.UnicodeSet);
  public int size();
  public final sun.text.normalizer.UnicodeSet add(int);
  public final sun.text.normalizer.UnicodeSet add(java.lang.CharSequence);
  public sun.text.normalizer.UnicodeSet complement(int, int);
  public boolean contains(int);
  public sun.text.normalizer.UnicodeSet retainAll(sun.text.normalizer.UnicodeSet);
  public sun.text.normalizer.UnicodeSet clear();
  public int getRangeCount();
  public int getRangeStart(int);
  public int getRangeEnd(int);
  public boolean isFrozen();
  public sun.text.normalizer.UnicodeSet freeze();
  public int span(java.lang.CharSequence, sun.text.normalizer.UnicodeSet$SpanCondition);
  public int span(java.lang.CharSequence, int, sun.text.normalizer.UnicodeSet$SpanCondition);
  public int spanAndCount(java.lang.CharSequence, int, sun.text.normalizer.UnicodeSet$SpanCondition, sun.text.normalizer.OutputInt);
  public int spanBack(java.lang.CharSequence, int, sun.text.normalizer.UnicodeSet$SpanCondition);
  public sun.text.normalizer.UnicodeSet cloneAsThawed();
  static {};
}
