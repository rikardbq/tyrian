Compiled from "ProxyClient.java"
public class sun.tools.jconsole.ProxyClient implements com.sun.tools.jconsole.JConsoleContext {
  static final boolean $assertionsDisabled;
  public boolean isSslRmiRegistry();
  public boolean isSslRmiStub();
  public boolean isVmConnector();
  public com.sun.tools.jconsole.JConsoleContext$ConnectionState getConnectionState();
  void flush();
  void connect(boolean);
  public static sun.tools.jconsole.ProxyClient getProxyClient(sun.tools.jconsole.LocalVirtualMachine) throws java.io.IOException;
  public static java.lang.String getConnectionName(sun.tools.jconsole.LocalVirtualMachine);
  public static sun.tools.jconsole.ProxyClient getProxyClient(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
  public static java.lang.String getConnectionName(java.lang.String, java.lang.String);
  public static sun.tools.jconsole.ProxyClient getProxyClient(java.lang.String, int, java.lang.String, java.lang.String) throws java.io.IOException;
  public static java.lang.String getConnectionName(java.lang.String, int, java.lang.String);
  public java.lang.String connectionName();
  public java.lang.String getDisplayName();
  public java.lang.String toString();
  public javax.management.MBeanServerConnection getMBeanServerConnection();
  public sun.tools.jconsole.ProxyClient$SnapshotMBeanServerConnection getSnapshotMBeanServerConnection();
  public java.lang.String getUrl();
  public java.lang.String getHostName();
  public int getPort();
  public int getVmid();
  public java.lang.String getUserName();
  public java.lang.String getPassword();
  public void disconnect();
  public java.lang.String[] getDomains() throws java.io.IOException;
  public java.util.Map<javax.management.ObjectName, javax.management.MBeanInfo> getMBeans(java.lang.String) throws java.io.IOException;
  public javax.management.AttributeList getAttributes(javax.management.ObjectName, java.lang.String[]) throws java.io.IOException;
  public void setAttribute(javax.management.ObjectName, javax.management.Attribute) throws javax.management.InvalidAttributeValueException, javax.management.MBeanException, java.io.IOException;
  public java.lang.Object invoke(javax.management.ObjectName, java.lang.String, java.lang.Object[], java.lang.String[]) throws java.io.IOException, javax.management.MBeanException;
  public synchronized java.lang.management.ClassLoadingMXBean getClassLoadingMXBean() throws java.io.IOException;
  public synchronized java.lang.management.CompilationMXBean getCompilationMXBean() throws java.io.IOException;
  public java.util.Collection<sun.tools.jconsole.MemoryPoolProxy> getMemoryPoolProxies() throws java.io.IOException;
  public synchronized java.util.Collection<java.lang.management.GarbageCollectorMXBean> getGarbageCollectorMXBeans() throws java.io.IOException;
  public synchronized java.lang.management.MemoryMXBean getMemoryMXBean() throws java.io.IOException;
  public synchronized java.lang.management.RuntimeMXBean getRuntimeMXBean() throws java.io.IOException;
  public synchronized java.lang.management.ThreadMXBean getThreadMXBean() throws java.io.IOException;
  public synchronized java.lang.management.OperatingSystemMXBean getOperatingSystemMXBean() throws java.io.IOException;
  public synchronized com.sun.management.OperatingSystemMXBean getSunOperatingSystemMXBean() throws java.io.IOException;
  public synchronized com.sun.management.HotSpotDiagnosticMXBean getHotSpotDiagnosticMXBean() throws java.io.IOException;
  public <T> T getMXBean(javax.management.ObjectName, java.lang.Class<T>) throws java.io.IOException;
  public long[] findDeadlockedThreads() throws java.io.IOException;
  public synchronized void markAsDead();
  public boolean isDead();
  boolean isConnected();
  boolean hasPlatformMXBeans();
  boolean hasHotSpotDiagnosticMXBean();
  boolean isLockUsageSupported();
  public boolean isRegistered(javax.management.ObjectName) throws java.io.IOException;
  public void addPropertyChangeListener(java.beans.PropertyChangeListener);
  public void addWeakPropertyChangeListener(java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.beans.PropertyChangeListener);
  static {};
}
