Compiled from "ArrayAccessExpression.java"
public class sun.tools.tree.ArrayAccessExpression extends sun.tools.tree.UnaryExpression {
  sun.tools.tree.Expression index;
  public sun.tools.tree.ArrayAccessExpression(long, sun.tools.tree.Expression, sun.tools.tree.Expression);
  public sun.tools.tree.Vset checkValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>);
  public sun.tools.tree.Vset checkAmbigName(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>, sun.tools.tree.UnaryExpression);
  public sun.tools.tree.Vset checkLHS(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>);
  public sun.tools.tree.Vset checkAssignOp(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>, sun.tools.tree.Expression);
  public sun.tools.tree.FieldUpdater getAssigner(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.FieldUpdater getUpdater(sun.tools.java.Environment, sun.tools.tree.Context);
  sun.tools.java.Type toType(sun.tools.java.Environment, sun.tools.tree.Context);
  sun.tools.java.Type toType(sun.tools.java.Environment, sun.tools.java.Type);
  public sun.tools.tree.Expression inline(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression inlineValue(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression inlineLHS(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression copyInline(sun.tools.tree.Context);
  public int costInline(int, sun.tools.java.Environment, sun.tools.tree.Context);
  int codeLValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  void codeLoad(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  void codeStore(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  public void codeValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  public void print(java.io.PrintStream);
}
