Compiled from "MethodExpression.java"
public class sun.tools.tree.MethodExpression extends sun.tools.tree.NaryExpression {
  sun.tools.java.Identifier id;
  sun.tools.java.ClassDefinition clazz;
  sun.tools.java.MemberDefinition field;
  sun.tools.tree.Expression implementation;
  static final int MAXINLINECOST;
  public sun.tools.tree.MethodExpression(long, sun.tools.tree.Expression, sun.tools.java.Identifier, sun.tools.tree.Expression[]);
  public sun.tools.tree.MethodExpression(long, sun.tools.tree.Expression, sun.tools.java.MemberDefinition, sun.tools.tree.Expression[]);
  public sun.tools.tree.MethodExpression(long, sun.tools.tree.Expression, sun.tools.java.MemberDefinition, sun.tools.tree.Expression[], boolean);
  public sun.tools.tree.Expression getImplementation();
  public sun.tools.tree.Vset checkValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>);
  public sun.tools.tree.Vset check(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>);
  boolean diagnoseMismatch(sun.tools.java.Environment, sun.tools.tree.Expression[], sun.tools.java.Type[]) throws sun.tools.java.ClassNotFound;
  public sun.tools.tree.Expression inline(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression inlineValue(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression copyInline(sun.tools.tree.Context);
  public int costInline(int, sun.tools.java.Environment, sun.tools.tree.Context);
  public void codeValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  public sun.tools.tree.Expression firstConstructor();
  public void print(java.io.PrintStream);
  static {};
}
