Compiled from "UplevelReference.java"
public class sun.tools.tree.UplevelReference implements sun.tools.java.Constants {
  sun.tools.java.ClassDefinition client;
  sun.tools.tree.LocalMember target;
  sun.tools.tree.LocalMember localArgument;
  sun.tools.java.MemberDefinition localField;
  sun.tools.tree.UplevelReference next;
  public sun.tools.tree.UplevelReference(sun.tools.java.ClassDefinition, sun.tools.tree.LocalMember);
  public sun.tools.tree.UplevelReference insertInto(sun.tools.tree.UplevelReference);
  public final boolean isEarlierThan(sun.tools.tree.UplevelReference);
  public final sun.tools.tree.LocalMember getTarget();
  public final sun.tools.tree.LocalMember getLocalArgument();
  public final sun.tools.java.MemberDefinition getLocalField();
  public final sun.tools.java.MemberDefinition getLocalField(sun.tools.java.Environment);
  public final sun.tools.java.ClassDefinition getClient();
  public final sun.tools.tree.UplevelReference getNext();
  public boolean isClientOuterField();
  public boolean localArgumentAvailable(sun.tools.java.Environment, sun.tools.tree.Context);
  public void noteReference(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression makeLocalReference(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression makeFieldReference(sun.tools.java.Environment, sun.tools.tree.Context);
  public void willCodeArguments(sun.tools.java.Environment, sun.tools.tree.Context);
  public void codeArguments(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler, long, sun.tools.java.MemberDefinition);
  public void codeInitialization(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler, long, sun.tools.java.MemberDefinition);
  public java.lang.String toString();
}
