Compiled from "Context.java"
public class sun.tools.tree.Context implements sun.tools.java.Constants {
  sun.tools.tree.Context prev;
  sun.tools.tree.Node node;
  int varNumber;
  sun.tools.tree.LocalMember locals;
  sun.tools.tree.LocalMember classes;
  sun.tools.java.MemberDefinition field;
  int scopeNumber;
  int frameNumber;
  public sun.tools.tree.Context(sun.tools.tree.Context, sun.tools.java.MemberDefinition);
  public sun.tools.tree.Context(sun.tools.tree.Context, sun.tools.java.ClassDefinition);
  sun.tools.tree.Context(sun.tools.tree.Context, sun.tools.tree.Node);
  public sun.tools.tree.Context(sun.tools.tree.Context);
  public int declare(sun.tools.java.Environment, sun.tools.tree.LocalMember);
  public sun.tools.tree.LocalMember getLocalField(sun.tools.java.Identifier);
  public int getScopeNumber(sun.tools.java.ClassDefinition);
  public int declareFieldNumber(sun.tools.java.MemberDefinition);
  public int getFieldNumber(sun.tools.java.MemberDefinition);
  public sun.tools.java.MemberDefinition getElement(int);
  public sun.tools.tree.LocalMember getLocalClass(sun.tools.java.Identifier);
  public final sun.tools.java.MemberDefinition getField(sun.tools.java.Environment, sun.tools.java.Identifier) throws sun.tools.java.AmbiguousMember, sun.tools.java.ClassNotFound;
  public final sun.tools.java.MemberDefinition getApparentField(sun.tools.java.Environment, sun.tools.java.Identifier) throws sun.tools.java.AmbiguousMember, sun.tools.java.ClassNotFound;
  public boolean isInScope(sun.tools.tree.LocalMember);
  public sun.tools.tree.UplevelReference noteReference(sun.tools.java.Environment, sun.tools.tree.LocalMember);
  public sun.tools.tree.Expression makeReference(sun.tools.java.Environment, sun.tools.tree.LocalMember);
  public sun.tools.tree.Expression findOuterLink(sun.tools.java.Environment, long, sun.tools.java.MemberDefinition);
  public sun.tools.tree.Expression findOuterLink(sun.tools.java.Environment, long, sun.tools.java.ClassDefinition, sun.tools.java.MemberDefinition, boolean);
  public static boolean outerLinkExists(sun.tools.java.Environment, sun.tools.java.ClassDefinition, sun.tools.java.ClassDefinition);
  public sun.tools.java.ClassDefinition findScope(sun.tools.java.Environment, sun.tools.java.ClassDefinition);
  sun.tools.java.Identifier resolveName(sun.tools.java.Environment, sun.tools.java.Identifier);
  public sun.tools.java.Identifier getApparentClassName(sun.tools.java.Environment, sun.tools.java.Identifier);
  public void checkBackBranch(sun.tools.java.Environment, sun.tools.tree.Statement, sun.tools.tree.Vset, sun.tools.tree.Vset);
  public boolean canReach(sun.tools.java.Environment, sun.tools.java.MemberDefinition);
  public sun.tools.tree.Context getLabelContext(sun.tools.java.Identifier);
  public sun.tools.tree.Context getBreakContext(sun.tools.java.Identifier);
  public sun.tools.tree.Context getContinueContext(sun.tools.java.Identifier);
  public sun.tools.tree.CheckContext getReturnContext();
  public sun.tools.tree.CheckContext getTryExitContext();
  sun.tools.tree.Context getInlineContext();
  sun.tools.tree.Context getInlineMemberContext(sun.tools.java.MemberDefinition);
  public final sun.tools.tree.Vset removeAdditionalVars(sun.tools.tree.Vset);
  public final int getVarNumber();
  public int getThisNumber();
  public final sun.tools.java.MemberDefinition getField();
  public static sun.tools.java.Environment newEnvironment(sun.tools.java.Environment, sun.tools.tree.Context);
}
