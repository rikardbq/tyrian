Compiled from "InstanceOfExpression.java"
public class sun.tools.tree.InstanceOfExpression extends sun.tools.tree.BinaryExpression {
  public sun.tools.tree.InstanceOfExpression(long, sun.tools.tree.Expression, sun.tools.tree.Expression);
  public sun.tools.tree.Vset checkValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset, java.util.Hashtable<java.lang.Object, java.lang.Object>);
  public sun.tools.tree.Expression inline(sun.tools.java.Environment, sun.tools.tree.Context);
  public sun.tools.tree.Expression inlineValue(sun.tools.java.Environment, sun.tools.tree.Context);
  public int costInline(int, sun.tools.java.Environment, sun.tools.tree.Context);
  public void codeValue(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  void codeBranch(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler, sun.tools.asm.Label, boolean);
  public void code(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler);
  public void print(java.io.PrintStream);
}
