Compiled from "SourceMember.java"
public class sun.tools.javac.SourceMember extends sun.tools.java.MemberDefinition implements sun.tools.java.Constants {
  java.util.Vector<sun.tools.java.MemberDefinition> args;
  sun.tools.java.MemberDefinition abstractSource;
  int status;
  static final int PARSED;
  static final int CHECKING;
  static final int CHECKED;
  static final int INLINING;
  static final int INLINED;
  static final int ERROR;
  sun.tools.tree.LocalMember outerThisArg;
  public boolean resolved;
  public java.util.Vector<sun.tools.java.MemberDefinition> getArguments();
  public sun.tools.javac.SourceMember(long, sun.tools.java.ClassDefinition, java.lang.String, int, sun.tools.java.Type, sun.tools.java.Identifier, java.util.Vector<sun.tools.java.MemberDefinition>, sun.tools.java.IdentifierToken[], sun.tools.tree.Node);
  void createArgumentFields(java.util.Vector<sun.tools.java.MemberDefinition>);
  public sun.tools.tree.LocalMember getOuterThisArg();
  void addOuterThis();
  void addUplevelArguments();
  public sun.tools.javac.SourceMember(sun.tools.java.ClassDefinition);
  public sun.tools.javac.SourceMember(sun.tools.java.MemberDefinition, sun.tools.java.ClassDefinition, sun.tools.java.Environment);
  public sun.tools.java.ClassDeclaration[] getExceptions(sun.tools.java.Environment);
  public void setExceptions(sun.tools.java.ClassDeclaration[]);
  public void resolveTypeStructure(sun.tools.java.Environment);
  public sun.tools.java.ClassDeclaration getDefiningClassDeclaration();
  public boolean reportDeprecated(sun.tools.java.Environment);
  public void check(sun.tools.java.Environment) throws sun.tools.java.ClassNotFound;
  public sun.tools.tree.Vset check(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.tree.Vset) throws sun.tools.java.ClassNotFound;
  void inline(sun.tools.java.Environment) throws sun.tools.java.ClassNotFound;
  public sun.tools.tree.Node getValue(sun.tools.java.Environment) throws sun.tools.java.ClassNotFound;
  public boolean isInlineable(sun.tools.java.Environment, boolean) throws sun.tools.java.ClassNotFound;
  public java.lang.Object getInitialValue();
  public void code(sun.tools.java.Environment, sun.tools.asm.Assembler) throws sun.tools.java.ClassNotFound;
  public void codeInit(sun.tools.java.Environment, sun.tools.tree.Context, sun.tools.asm.Assembler) throws sun.tools.java.ClassNotFound;
  public void print(java.io.PrintStream);
}
