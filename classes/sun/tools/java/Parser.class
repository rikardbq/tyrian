Compiled from "Parser.java"
public class sun.tools.java.Parser extends sun.tools.java.Scanner implements sun.tools.java.ParserActions,sun.tools.java.Constants {
  sun.tools.java.ParserActions actions;
  protected int argIndex;
  protected sun.tools.java.Scanner scanner;
  protected sun.tools.java.Parser(sun.tools.java.Environment, java.io.InputStream) throws java.io.IOException;
  protected sun.tools.java.Parser(sun.tools.java.Scanner) throws java.io.IOException;
  public sun.tools.java.Parser(sun.tools.java.Scanner, sun.tools.java.ParserActions) throws java.io.IOException;
  public void packageDeclaration(long, sun.tools.java.IdentifierToken);
  protected void packageDeclaration(long, sun.tools.java.Identifier);
  public void importClass(long, sun.tools.java.IdentifierToken);
  protected void importClass(long, sun.tools.java.Identifier);
  public void importPackage(long, sun.tools.java.IdentifierToken);
  protected void importPackage(long, sun.tools.java.Identifier);
  public sun.tools.java.ClassDefinition beginClass(long, java.lang.String, int, sun.tools.java.IdentifierToken, sun.tools.java.IdentifierToken, sun.tools.java.IdentifierToken[]);
  protected void beginClass(long, java.lang.String, int, sun.tools.java.Identifier, sun.tools.java.Identifier, sun.tools.java.Identifier[]);
  protected sun.tools.java.ClassDefinition getCurrentClass();
  public void endClass(long, sun.tools.java.ClassDefinition);
  protected void endClass(long, sun.tools.java.Identifier);
  public void defineField(long, sun.tools.java.ClassDefinition, java.lang.String, int, sun.tools.java.Type, sun.tools.java.IdentifierToken, sun.tools.java.IdentifierToken[], sun.tools.java.IdentifierToken[], sun.tools.tree.Node);
  protected void defineField(long, java.lang.String, int, sun.tools.java.Type, sun.tools.java.Identifier, sun.tools.java.Identifier[], sun.tools.java.Identifier[], sun.tools.tree.Node);
  protected final void addArgument(sun.tools.tree.Node);
  protected final sun.tools.tree.Expression[] exprArgs(int);
  protected final sun.tools.tree.Statement[] statArgs(int);
  protected void expect(int) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseTypeExpression() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseMethodExpression(sun.tools.tree.Expression, sun.tools.java.Identifier) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseNewInstanceExpression(long, sun.tools.tree.Expression, sun.tools.tree.Expression) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseTerm() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseExpression() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Expression parseBinaryExpression(sun.tools.tree.Expression) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected boolean recoverStatement() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Statement parseDeclaration(long, int, sun.tools.tree.Expression) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected void topLevelExpression(sun.tools.tree.Expression);
  protected sun.tools.tree.Statement parseStatement() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Statement parseBlockStatement() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.IdentifierToken parseName(boolean) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.Identifier parseIdentifier(boolean) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.Type parseType() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.Type parseArrayBrackets(sun.tools.java.Type) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected int parseModifiers(int) throws java.io.IOException;
  protected void parseField() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected void recoverField(sun.tools.java.ClassDefinition) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected void parseClass() throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.tree.Statement parseLocalClass(int) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.ClassDefinition parseNamedClass(int, int, java.lang.String) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected void parseInheritance(java.util.Vector<sun.tools.java.IdentifierToken>, java.util.Vector<sun.tools.java.IdentifierToken>) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected sun.tools.java.ClassDefinition parseClassBody(sun.tools.java.IdentifierToken, int, int, java.lang.String, java.util.Vector<sun.tools.java.IdentifierToken>, java.util.Vector<sun.tools.java.IdentifierToken>, long) throws sun.tools.java.SyntaxError, java.io.IOException;
  protected void recoverFile() throws java.io.IOException;
  public void parseFile();
  public long scan() throws java.io.IOException;
  public void match(int, int) throws java.io.IOException;
}
