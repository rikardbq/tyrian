Compiled from "Environment.java"
public class sun.tools.java.Environment implements sun.tools.java.Constants {
  sun.tools.java.Environment env;
  java.lang.String encoding;
  java.lang.Object source;
  public sun.tools.java.Environment(sun.tools.java.Environment, java.lang.Object);
  public sun.tools.java.Environment();
  public boolean isExemptPackage(sun.tools.java.Identifier);
  public sun.tools.java.ClassDeclaration getClassDeclaration(sun.tools.java.Identifier);
  public final sun.tools.java.ClassDefinition getClassDefinition(sun.tools.java.Identifier) throws sun.tools.java.ClassNotFound;
  public sun.tools.java.ClassDeclaration getClassDeclaration(sun.tools.java.Type);
  public final sun.tools.java.ClassDefinition getClassDefinition(sun.tools.java.Type) throws sun.tools.java.ClassNotFound;
  public boolean classExists(sun.tools.java.Identifier);
  public final boolean classExists(sun.tools.java.Type);
  public sun.tools.java.Package getPackage(sun.tools.java.Identifier) throws java.io.IOException;
  public void loadDefinition(sun.tools.java.ClassDeclaration);
  public final java.lang.Object getSource();
  public boolean resolve(long, sun.tools.java.ClassDefinition, sun.tools.java.Type);
  public boolean resolveByName(long, sun.tools.java.ClassDefinition, sun.tools.java.Identifier);
  public boolean resolveExtendsByName(long, sun.tools.java.ClassDefinition, sun.tools.java.Identifier);
  public final sun.tools.java.ClassDefinition getQualifiedClassDefinition(long, sun.tools.java.Identifier, sun.tools.java.ClassDefinition, boolean) throws sun.tools.java.ClassNotFound;
  public sun.tools.java.Type resolveNames(sun.tools.java.ClassDefinition, sun.tools.java.Type, boolean);
  public sun.tools.java.Identifier resolveName(sun.tools.java.Identifier);
  public final sun.tools.java.Identifier resolvePackageQualifiedName(sun.tools.java.Identifier);
  public sun.tools.java.Identifier resolve(sun.tools.java.Identifier) throws sun.tools.java.ClassNotFound;
  public sun.tools.java.Imports getImports();
  public sun.tools.java.ClassDefinition makeClassDefinition(sun.tools.java.Environment, long, sun.tools.java.IdentifierToken, java.lang.String, int, sun.tools.java.IdentifierToken, sun.tools.java.IdentifierToken[], sun.tools.java.ClassDefinition);
  public sun.tools.java.MemberDefinition makeMemberDefinition(sun.tools.java.Environment, long, sun.tools.java.ClassDefinition, java.lang.String, int, sun.tools.java.Type, sun.tools.java.Identifier, sun.tools.java.IdentifierToken[], sun.tools.java.IdentifierToken[], java.lang.Object);
  public boolean isApplicable(sun.tools.java.MemberDefinition, sun.tools.java.Type[]) throws sun.tools.java.ClassNotFound;
  public boolean isMoreSpecific(sun.tools.java.MemberDefinition, sun.tools.java.MemberDefinition) throws sun.tools.java.ClassNotFound;
  public boolean isMoreSpecific(sun.tools.java.Type, sun.tools.java.Type) throws sun.tools.java.ClassNotFound;
  public boolean implicitCast(sun.tools.java.Type, sun.tools.java.Type) throws sun.tools.java.ClassNotFound;
  public boolean explicitCast(sun.tools.java.Type, sun.tools.java.Type) throws sun.tools.java.ClassNotFound;
  public int getFlags();
  public final boolean debug_lines();
  public final boolean debug_vars();
  public final boolean debug_source();
  public final boolean opt();
  public final boolean opt_interclass();
  public final boolean verbose();
  public final boolean dump();
  public final boolean warnings();
  public final boolean dependencies();
  public final boolean print_dependencies();
  public final boolean deprecation();
  public final boolean version12();
  public final boolean strictdefault();
  public void shutdown();
  public void error(java.lang.Object, long, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);
  public final void error(long, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);
  public final void error(long, java.lang.String, java.lang.Object, java.lang.Object);
  public final void error(long, java.lang.String, java.lang.Object);
  public final void error(long, java.lang.String);
  public void output(java.lang.String);
  public static void debugOutput(java.lang.Object);
  public void setCharacterEncoding(java.lang.String);
  public java.lang.String getCharacterEncoding();
  public short getMajorVersion();
  public short getMinorVersion();
  public final boolean coverage();
  public final boolean covdata();
  public java.io.File getcovFile();
  public void dtEnter(java.lang.String);
  public void dtExit(java.lang.String);
  public void dtEvent(java.lang.String);
  public boolean dumpModifiers();
  static {};
}
