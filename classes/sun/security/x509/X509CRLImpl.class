Compiled from "X509CRLImpl.java"
public class sun.security.x509.X509CRLImpl extends java.security.cert.X509CRL implements sun.security.util.DerEncoder {
  public sun.security.x509.X509CRLImpl(byte[]) throws java.security.cert.CRLException;
  public sun.security.x509.X509CRLImpl(sun.security.util.DerValue) throws java.security.cert.CRLException;
  public sun.security.x509.X509CRLImpl(java.io.InputStream) throws java.security.cert.CRLException;
  public sun.security.x509.X509CRLImpl(sun.security.x509.X500Name, java.util.Date, java.util.Date);
  public sun.security.x509.X509CRLImpl(sun.security.x509.X500Name, java.util.Date, java.util.Date, java.security.cert.X509CRLEntry[]) throws java.security.cert.CRLException;
  public sun.security.x509.X509CRLImpl(sun.security.x509.X500Name, java.util.Date, java.util.Date, java.security.cert.X509CRLEntry[], sun.security.x509.CRLExtensions) throws java.security.cert.CRLException;
  public byte[] getEncodedInternal() throws java.security.cert.CRLException;
  public byte[] getEncoded() throws java.security.cert.CRLException;
  public void encodeInfo(java.io.OutputStream) throws java.security.cert.CRLException;
  public void verify(java.security.PublicKey) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
  public synchronized void verify(java.security.PublicKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
  public synchronized void verify(java.security.PublicKey, java.security.Provider) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException;
  public void sign(java.security.PrivateKey, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
  public void sign(java.security.PrivateKey, java.lang.String, java.lang.String) throws java.security.cert.CRLException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException;
  public java.lang.String toString();
  public java.lang.String toStringWithAlgName(java.lang.String);
  public boolean isRevoked(java.security.cert.Certificate);
  public int getVersion();
  public java.security.Principal getIssuerDN();
  public javax.security.auth.x500.X500Principal getIssuerX500Principal();
  public java.util.Date getThisUpdate();
  public java.util.Date getNextUpdate();
  public java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger);
  public java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate);
  public java.util.Set<java.security.cert.X509CRLEntry> getRevokedCertificates();
  public byte[] getTBSCertList() throws java.security.cert.CRLException;
  public byte[] getSignature();
  public java.lang.String getSigAlgName();
  public java.lang.String getSigAlgOID();
  public byte[] getSigAlgParams();
  public sun.security.x509.AlgorithmId getSigAlgId();
  public sun.security.x509.KeyIdentifier getAuthKeyId() throws java.io.IOException;
  public sun.security.x509.AuthorityKeyIdentifierExtension getAuthKeyIdExtension() throws java.io.IOException;
  public sun.security.x509.CRLNumberExtension getCRLNumberExtension() throws java.io.IOException;
  public java.math.BigInteger getCRLNumber() throws java.io.IOException;
  public sun.security.x509.DeltaCRLIndicatorExtension getDeltaCRLIndicatorExtension() throws java.io.IOException;
  public java.math.BigInteger getBaseCRLNumber() throws java.io.IOException;
  public sun.security.x509.IssuerAlternativeNameExtension getIssuerAltNameExtension() throws java.io.IOException;
  public sun.security.x509.IssuingDistributionPointExtension getIssuingDistributionPointExtension() throws java.io.IOException;
  public boolean hasUnsupportedCriticalExtension();
  public java.util.Set<java.lang.String> getCriticalExtensionOIDs();
  public java.util.Set<java.lang.String> getNonCriticalExtensionOIDs();
  public byte[] getExtensionValue(java.lang.String);
  public java.lang.Object getExtension(sun.security.util.ObjectIdentifier);
  public static javax.security.auth.x500.X500Principal getIssuerX500Principal(java.security.cert.X509CRL);
  public static byte[] getEncodedInternal(java.security.cert.X509CRL) throws java.security.cert.CRLException;
  public static sun.security.x509.X509CRLImpl toImpl(java.security.cert.X509CRL) throws java.security.cert.CRLException;
  public void derEncode(java.io.OutputStream) throws java.io.IOException;
}
