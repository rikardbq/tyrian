Compiled from "PKCS8Key.java"
public class sun.security.pkcs.PKCS8Key implements java.security.PrivateKey {
  protected sun.security.x509.AlgorithmId algid;
  protected byte[] key;
  protected byte[] encodedKey;
  public static final java.math.BigInteger version;
  public sun.security.pkcs.PKCS8Key();
  public static sun.security.pkcs.PKCS8Key parse(sun.security.util.DerValue) throws java.io.IOException;
  public static java.security.PrivateKey parseKey(sun.security.util.DerValue) throws java.io.IOException;
  protected void parseKeyBits() throws java.io.IOException, java.security.InvalidKeyException;
  static java.security.PrivateKey buildPKCS8Key(sun.security.x509.AlgorithmId, byte[]) throws java.io.IOException, java.security.InvalidKeyException;
  public java.lang.String getAlgorithm();
  public sun.security.x509.AlgorithmId getAlgorithmId();
  public final void encode(sun.security.util.DerOutputStream) throws java.io.IOException;
  public synchronized byte[] getEncoded();
  public java.lang.String getFormat();
  public byte[] encode() throws java.security.InvalidKeyException;
  public void decode(java.io.InputStream) throws java.security.InvalidKeyException;
  public void decode(byte[]) throws java.security.InvalidKeyException;
  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
  static void encode(sun.security.util.DerOutputStream, sun.security.x509.AlgorithmId, byte[]) throws java.io.IOException;
  public boolean equals(java.lang.Object);
  public int hashCode();
  static {};
}
