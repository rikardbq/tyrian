Compiled from "P11Key.java"
abstract class sun.security.pkcs11.P11Key implements java.security.Key,sun.security.util.Length {
  final java.lang.String type;
  final sun.security.pkcs11.Token token;
  final java.lang.String algorithm;
  final int keyLength;
  final boolean tokenObject;
  final boolean sensitive;
  final boolean extractable;
  sun.security.pkcs11.P11Key(java.lang.String, sun.security.pkcs11.Session, long, java.lang.String, int, sun.security.pkcs11.wrapper.CK_ATTRIBUTE[]);
  public long getKeyID();
  public void releaseKeyID();
  public final java.lang.String getAlgorithm();
  public final byte[] getEncoded();
  abstract byte[] getEncodedInternal();
  public boolean equals(java.lang.Object);
  public int hashCode();
  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
  public java.lang.String toString();
  public int length();
  boolean isPublic();
  boolean isPrivate();
  boolean isSecret();
  void fetchAttributes(sun.security.pkcs11.wrapper.CK_ATTRIBUTE[]);
  static javax.crypto.SecretKey secretKey(sun.security.pkcs11.Session, long, java.lang.String, int, sun.security.pkcs11.wrapper.CK_ATTRIBUTE[]);
  static javax.crypto.SecretKey masterSecretKey(sun.security.pkcs11.Session, long, java.lang.String, int, sun.security.pkcs11.wrapper.CK_ATTRIBUTE[], int, int);
  static java.security.PublicKey publicKey(sun.security.pkcs11.Session, long, java.lang.String, int, sun.security.pkcs11.wrapper.CK_ATTRIBUTE[]);
  static java.security.PrivateKey privateKey(sun.security.pkcs11.Session, long, java.lang.String, int, sun.security.pkcs11.wrapper.CK_ATTRIBUTE[]);
  static {};
}
