Compiled from "ECUtil.java"
public final class sun.security.util.ECUtil {
  public static java.security.spec.ECPoint decodePoint(byte[], java.security.spec.EllipticCurve) throws java.io.IOException;
  public static byte[] encodePoint(java.security.spec.ECPoint, java.security.spec.EllipticCurve);
  public static byte[] trimZeroes(byte[]);
  public static java.security.interfaces.ECPublicKey decodeX509ECPublicKey(byte[]) throws java.security.spec.InvalidKeySpecException;
  public static byte[] x509EncodeECPublicKey(java.security.spec.ECPoint, java.security.spec.ECParameterSpec) throws java.security.spec.InvalidKeySpecException;
  public static java.security.interfaces.ECPrivateKey decodePKCS8ECPrivateKey(byte[]) throws java.security.spec.InvalidKeySpecException;
  public static java.security.interfaces.ECPrivateKey generateECPrivateKey(java.math.BigInteger, java.security.spec.ECParameterSpec) throws java.security.spec.InvalidKeySpecException;
  public static java.security.AlgorithmParameters getECParameters(java.security.Provider);
  public static byte[] encodeECParameterSpec(java.security.Provider, java.security.spec.ECParameterSpec);
  public static java.security.spec.ECParameterSpec getECParameterSpec(java.security.Provider, java.security.spec.ECParameterSpec);
  public static java.security.spec.ECParameterSpec getECParameterSpec(java.security.Provider, byte[]) throws java.io.IOException;
  public static java.security.spec.ECParameterSpec getECParameterSpec(java.security.Provider, java.lang.String);
  public static java.security.spec.ECParameterSpec getECParameterSpec(java.security.Provider, int);
  public static java.lang.String getCurveName(java.security.Provider, java.security.spec.ECParameterSpec);
  public static boolean equals(java.security.spec.ECParameterSpec, java.security.spec.ECParameterSpec);
  public static byte[] encodeSignature(byte[]) throws java.security.SignatureException;
  public static byte[] decodeSignature(byte[]) throws java.security.SignatureException;
}
