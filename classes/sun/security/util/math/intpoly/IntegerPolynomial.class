Compiled from "IntegerPolynomial.java"
public abstract class sun.security.util.math.intpoly.IntegerPolynomial implements sun.security.util.math.IntegerFieldModuloP {
  protected static final java.math.BigInteger TWO;
  protected final int numLimbs;
  protected final int bitsPerLimb;
  protected abstract void reduce(long[]);
  protected void multByInt(long[], long);
  protected abstract void mult(long[], long[], long[]);
  protected abstract void square(long[], long[]);
  sun.security.util.math.intpoly.IntegerPolynomial(int, int, int, java.math.BigInteger);
  protected int getNumLimbs();
  public int getMaxAdds();
  public java.math.BigInteger getSize();
  public sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement get0();
  public sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement get1();
  public sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement getElement(java.math.BigInteger);
  public sun.security.util.math.SmallValue getSmallValue(int);
  protected void encode(java.nio.ByteBuffer, int, byte, long[]);
  protected void encodeSmall(java.nio.ByteBuffer, int, byte, long[]);
  protected void encode(byte[], int, int, byte, long[]);
  protected void postEncodeCarry(long[]);
  public sun.security.util.math.intpoly.IntegerPolynomial$ImmutableElement getElement(byte[], int, int, byte);
  protected java.math.BigInteger evaluate(long[]);
  protected long carryValue(long);
  protected void carry(long[], int, int);
  protected void carry(long[]);
  protected long carryOut(long[], int);
  protected void setLimbsValuePositive(java.math.BigInteger, long[]);
  protected abstract void finalCarryReduceLast(long[]);
  protected void finalReduce(long[]);
  protected void decode(long[], byte[], int, int);
  protected void addLimbs(long[], long[], long[]);
  protected static void conditionalAssign(int, long[], long[]);
  protected static void conditionalSwap(int, long[], long[]);
  protected void limbsToByteArray(long[], byte[]);
  protected void addLimbsModPowerTwo(long[], long[], byte[]);
  public sun.security.util.math.ImmutableIntegerModuloP getElement(byte[], int, int, byte);
  public sun.security.util.math.ImmutableIntegerModuloP getElement(java.math.BigInteger);
  public sun.security.util.math.ImmutableIntegerModuloP get1();
  public sun.security.util.math.ImmutableIntegerModuloP get0();
  static {};
}
