Compiled from "RSAPrivateCrtKeyImpl.java"
public final class sun.security.rsa.RSAPrivateCrtKeyImpl extends sun.security.pkcs.PKCS8Key implements java.security.interfaces.RSAPrivateCrtKey {
  public static java.security.interfaces.RSAPrivateKey newKey(byte[]) throws java.security.InvalidKeyException;
  public static java.security.interfaces.RSAPrivateKey newKey(sun.security.rsa.RSAUtil$KeyType, java.security.spec.AlgorithmParameterSpec, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger) throws java.security.InvalidKeyException;
  sun.security.rsa.RSAPrivateCrtKeyImpl(byte[]) throws java.security.InvalidKeyException;
  sun.security.rsa.RSAPrivateCrtKeyImpl(sun.security.x509.AlgorithmId, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger) throws java.security.InvalidKeyException;
  public java.lang.String getAlgorithm();
  public java.math.BigInteger getModulus();
  public java.math.BigInteger getPublicExponent();
  public java.math.BigInteger getPrivateExponent();
  public java.math.BigInteger getPrimeP();
  public java.math.BigInteger getPrimeQ();
  public java.math.BigInteger getPrimeExponentP();
  public java.math.BigInteger getPrimeExponentQ();
  public java.math.BigInteger getCrtCoefficient();
  public java.security.spec.AlgorithmParameterSpec getParams();
  public java.lang.String toString();
  protected void parseKeyBits() throws java.security.InvalidKeyException;
}
