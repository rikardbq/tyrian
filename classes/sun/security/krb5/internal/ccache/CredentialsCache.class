Compiled from "CredentialsCache.java"
public abstract class sun.security.krb5.internal.ccache.CredentialsCache {
  static sun.security.krb5.internal.ccache.CredentialsCache singleton;
  static java.lang.String cacheName;
  public sun.security.krb5.internal.ccache.CredentialsCache();
  public static sun.security.krb5.internal.ccache.CredentialsCache getInstance(sun.security.krb5.PrincipalName);
  public static sun.security.krb5.internal.ccache.CredentialsCache getInstance(java.lang.String);
  public static sun.security.krb5.internal.ccache.CredentialsCache getInstance(sun.security.krb5.PrincipalName, java.lang.String);
  public static sun.security.krb5.internal.ccache.CredentialsCache getInstance();
  public static sun.security.krb5.internal.ccache.CredentialsCache create(sun.security.krb5.PrincipalName, java.lang.String);
  public static sun.security.krb5.internal.ccache.CredentialsCache create(sun.security.krb5.PrincipalName);
  public static java.lang.String cacheName();
  public abstract sun.security.krb5.PrincipalName getPrimaryPrincipal();
  public abstract void update(sun.security.krb5.internal.ccache.Credentials);
  public abstract void save() throws java.io.IOException, sun.security.krb5.KrbException;
  public abstract sun.security.krb5.internal.ccache.Credentials[] getCredsList();
  public abstract sun.security.krb5.internal.ccache.Credentials getDefaultCreds();
  public abstract sun.security.krb5.Credentials getInitialCreds();
  public abstract sun.security.krb5.internal.ccache.Credentials getCreds(sun.security.krb5.PrincipalName);
  public abstract sun.security.krb5.internal.ccache.Credentials getCreds(sun.security.krb5.internal.LoginOptions, sun.security.krb5.PrincipalName);
  public abstract void addConfigEntry(sun.security.krb5.internal.ccache.CredentialsCache$ConfigEntry);
  public abstract java.util.List<sun.security.krb5.internal.ccache.CredentialsCache$ConfigEntry> getConfigEntries();
  public sun.security.krb5.internal.ccache.CredentialsCache$ConfigEntry getConfigEntry(java.lang.String);
  static {};
}
