Compiled from "EType.java"
public abstract class sun.security.krb5.internal.crypto.EType {
  public sun.security.krb5.internal.crypto.EType();
  public static void initStatic();
  public static sun.security.krb5.internal.crypto.EType getInstance(int) throws sun.security.krb5.internal.KdcErrException;
  public abstract int eType();
  public abstract int minimumPadSize();
  public abstract int confounderSize();
  public abstract int checksumType();
  public abstract int checksumSize();
  public abstract int blockSize();
  public abstract int keyType();
  public abstract int keySize();
  public abstract byte[] encrypt(byte[], byte[], int) throws sun.security.krb5.KrbCryptoException;
  public abstract byte[] encrypt(byte[], byte[], byte[], int) throws sun.security.krb5.KrbCryptoException;
  public abstract byte[] decrypt(byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException;
  public abstract byte[] decrypt(byte[], byte[], byte[], int) throws sun.security.krb5.internal.KrbApErrException, sun.security.krb5.KrbCryptoException;
  public int dataSize(byte[]);
  public int padSize(byte[]);
  public int startOfChecksum();
  public int startOfData();
  public int startOfPad(byte[]);
  public byte[] decryptedData(byte[]);
  public static int[] getBuiltInDefaults();
  public static int[] getDefaults(java.lang.String) throws sun.security.krb5.KrbException;
  public static int[] getDefaults(java.lang.String, sun.security.krb5.EncryptionKey[]) throws sun.security.krb5.KrbException;
  public static boolean isSupported(int, int[]);
  public static boolean isSupported(int);
  public static boolean isNewer(int);
  public static java.lang.String toString(int);
  static {};
}
