Compiled from "SSLExtension.java"
final class sun.security.ssl.SSLExtension extends java.lang.Enum<sun.security.ssl.SSLExtension> implements sun.security.ssl.SSLStringizer {
  public static final sun.security.ssl.SSLExtension CH_SERVER_NAME;
  public static final sun.security.ssl.SSLExtension SH_SERVER_NAME;
  public static final sun.security.ssl.SSLExtension EE_SERVER_NAME;
  public static final sun.security.ssl.SSLExtension CH_MAX_FRAGMENT_LENGTH;
  public static final sun.security.ssl.SSLExtension SH_MAX_FRAGMENT_LENGTH;
  public static final sun.security.ssl.SSLExtension EE_MAX_FRAGMENT_LENGTH;
  public static final sun.security.ssl.SSLExtension CLIENT_CERTIFICATE_URL;
  public static final sun.security.ssl.SSLExtension TRUSTED_CA_KEYS;
  public static final sun.security.ssl.SSLExtension TRUNCATED_HMAC;
  public static final sun.security.ssl.SSLExtension CH_STATUS_REQUEST;
  public static final sun.security.ssl.SSLExtension SH_STATUS_REQUEST;
  public static final sun.security.ssl.SSLExtension CR_STATUS_REQUEST;
  public static final sun.security.ssl.SSLExtension CT_STATUS_REQUEST;
  public static final sun.security.ssl.SSLExtension USER_MAPPING;
  public static final sun.security.ssl.SSLExtension CLIENT_AUTHZ;
  public static final sun.security.ssl.SSLExtension SERVER_AUTHZ;
  public static final sun.security.ssl.SSLExtension CERT_TYPE;
  public static final sun.security.ssl.SSLExtension CH_SUPPORTED_GROUPS;
  public static final sun.security.ssl.SSLExtension EE_SUPPORTED_GROUPS;
  public static final sun.security.ssl.SSLExtension CH_EC_POINT_FORMATS;
  public static final sun.security.ssl.SSLExtension SH_EC_POINT_FORMATS;
  public static final sun.security.ssl.SSLExtension SRP;
  public static final sun.security.ssl.SSLExtension CH_SIGNATURE_ALGORITHMS;
  public static final sun.security.ssl.SSLExtension CR_SIGNATURE_ALGORITHMS;
  public static final sun.security.ssl.SSLExtension CH_SIGNATURE_ALGORITHMS_CERT;
  public static final sun.security.ssl.SSLExtension CR_SIGNATURE_ALGORITHMS_CERT;
  public static final sun.security.ssl.SSLExtension USE_SRTP;
  public static final sun.security.ssl.SSLExtension HEARTBEAT;
  public static final sun.security.ssl.SSLExtension CH_ALPN;
  public static final sun.security.ssl.SSLExtension SH_ALPN;
  public static final sun.security.ssl.SSLExtension EE_ALPN;
  public static final sun.security.ssl.SSLExtension CH_STATUS_REQUEST_V2;
  public static final sun.security.ssl.SSLExtension SH_STATUS_REQUEST_V2;
  public static final sun.security.ssl.SSLExtension SIGNED_CERT_TIMESTAMP;
  public static final sun.security.ssl.SSLExtension CLIENT_CERT_TYPE;
  public static final sun.security.ssl.SSLExtension SERVER_CERT_TYPE;
  public static final sun.security.ssl.SSLExtension PADDING;
  public static final sun.security.ssl.SSLExtension ENCRYPT_THEN_MAC;
  public static final sun.security.ssl.SSLExtension CH_EXTENDED_MASTER_SECRET;
  public static final sun.security.ssl.SSLExtension SH_EXTENDED_MASTER_SECRET;
  public static final sun.security.ssl.SSLExtension TOKEN_BINDING;
  public static final sun.security.ssl.SSLExtension CACHED_INFO;
  public static final sun.security.ssl.SSLExtension SESSION_TICKET;
  public static final sun.security.ssl.SSLExtension CH_EARLY_DATA;
  public static final sun.security.ssl.SSLExtension EE_EARLY_DATA;
  public static final sun.security.ssl.SSLExtension NST_EARLY_DATA;
  public static final sun.security.ssl.SSLExtension CH_SUPPORTED_VERSIONS;
  public static final sun.security.ssl.SSLExtension SH_SUPPORTED_VERSIONS;
  public static final sun.security.ssl.SSLExtension HRR_SUPPORTED_VERSIONS;
  public static final sun.security.ssl.SSLExtension MH_SUPPORTED_VERSIONS;
  public static final sun.security.ssl.SSLExtension CH_COOKIE;
  public static final sun.security.ssl.SSLExtension HRR_COOKIE;
  public static final sun.security.ssl.SSLExtension MH_COOKIE;
  public static final sun.security.ssl.SSLExtension PSK_KEY_EXCHANGE_MODES;
  public static final sun.security.ssl.SSLExtension CERTIFICATE_AUTHORITIES;
  public static final sun.security.ssl.SSLExtension OID_FILTERS;
  public static final sun.security.ssl.SSLExtension POST_HANDSHAKE_AUTH;
  public static final sun.security.ssl.SSLExtension CH_KEY_SHARE;
  public static final sun.security.ssl.SSLExtension SH_KEY_SHARE;
  public static final sun.security.ssl.SSLExtension HRR_KEY_SHARE;
  public static final sun.security.ssl.SSLExtension MH_KEY_SHARE;
  public static final sun.security.ssl.SSLExtension CH_RENEGOTIATION_INFO;
  public static final sun.security.ssl.SSLExtension SH_RENEGOTIATION_INFO;
  public static final sun.security.ssl.SSLExtension CH_PRE_SHARED_KEY;
  public static final sun.security.ssl.SSLExtension SH_PRE_SHARED_KEY;
  final int id;
  final sun.security.ssl.SSLHandshake handshakeType;
  final java.lang.String name;
  final sun.security.ssl.ProtocolVersion[] supportedProtocols;
  final sun.security.ssl.HandshakeProducer networkProducer;
  final sun.security.ssl.SSLExtension$ExtensionConsumer onLoadConsumer;
  final sun.security.ssl.HandshakeAbsence onLoadAbsence;
  final sun.security.ssl.HandshakeConsumer onTradeConsumer;
  final sun.security.ssl.HandshakeAbsence onTradeAbsence;
  final sun.security.ssl.SSLStringizer stringizer;
  public static sun.security.ssl.SSLExtension[] values();
  public static sun.security.ssl.SSLExtension valueOf(java.lang.String);
  static sun.security.ssl.SSLExtension valueOf(sun.security.ssl.SSLHandshake, int);
  static java.lang.String nameOf(int);
  static boolean isConsumable(int);
  public byte[] produce(sun.security.ssl.ConnectionContext, sun.security.ssl.SSLHandshake$HandshakeMessage) throws java.io.IOException;
  public void consumeOnLoad(sun.security.ssl.ConnectionContext, sun.security.ssl.SSLHandshake$HandshakeMessage, java.nio.ByteBuffer) throws java.io.IOException;
  public void consumeOnTrade(sun.security.ssl.ConnectionContext, sun.security.ssl.SSLHandshake$HandshakeMessage) throws java.io.IOException;
  void absentOnLoad(sun.security.ssl.ConnectionContext, sun.security.ssl.SSLHandshake$HandshakeMessage) throws java.io.IOException;
  void absentOnTrade(sun.security.ssl.ConnectionContext, sun.security.ssl.SSLHandshake$HandshakeMessage) throws java.io.IOException;
  public boolean isAvailable(sun.security.ssl.ProtocolVersion);
  public java.lang.String toString();
  public java.lang.String toString(java.nio.ByteBuffer);
  static {};
}
