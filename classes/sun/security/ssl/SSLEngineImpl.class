Compiled from "SSLEngineImpl.java"
final class sun.security.ssl.SSLEngineImpl extends javax.net.ssl.SSLEngine implements sun.security.ssl.SSLTransport {
  final sun.security.ssl.TransportContext conContext;
  sun.security.ssl.SSLEngineImpl(sun.security.ssl.SSLContextImpl);
  sun.security.ssl.SSLEngineImpl(sun.security.ssl.SSLContextImpl, java.lang.String, int);
  public synchronized void beginHandshake() throws javax.net.ssl.SSLException;
  public synchronized javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer) throws javax.net.ssl.SSLException;
  public synchronized javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;
  public synchronized javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;
  public synchronized javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer[], int, int, java.nio.ByteBuffer[], int, int) throws javax.net.ssl.SSLException;
  public synchronized java.lang.Runnable getDelegatedTask();
  public synchronized void closeInbound() throws javax.net.ssl.SSLException;
  public synchronized boolean isInboundDone();
  public synchronized void closeOutbound();
  public synchronized boolean isOutboundDone();
  public java.lang.String[] getSupportedCipherSuites();
  public synchronized java.lang.String[] getEnabledCipherSuites();
  public synchronized void setEnabledCipherSuites(java.lang.String[]);
  public java.lang.String[] getSupportedProtocols();
  public synchronized java.lang.String[] getEnabledProtocols();
  public synchronized void setEnabledProtocols(java.lang.String[]);
  public synchronized javax.net.ssl.SSLSession getSession();
  public synchronized javax.net.ssl.SSLSession getHandshakeSession();
  public synchronized javax.net.ssl.SSLEngineResult$HandshakeStatus getHandshakeStatus();
  public synchronized void setUseClientMode(boolean);
  public synchronized boolean getUseClientMode();
  public synchronized void setNeedClientAuth(boolean);
  public synchronized boolean getNeedClientAuth();
  public synchronized void setWantClientAuth(boolean);
  public synchronized boolean getWantClientAuth();
  public synchronized void setEnableSessionCreation(boolean);
  public synchronized boolean getEnableSessionCreation();
  public synchronized javax.net.ssl.SSLParameters getSSLParameters();
  public synchronized void setSSLParameters(javax.net.ssl.SSLParameters);
  public synchronized java.lang.String getApplicationProtocol();
  public synchronized java.lang.String getHandshakeApplicationProtocol();
  public synchronized void setHandshakeApplicationProtocolSelector(java.util.function.BiFunction<javax.net.ssl.SSLEngine, java.util.List<java.lang.String>, java.lang.String>);
  public synchronized java.util.function.BiFunction<javax.net.ssl.SSLEngine, java.util.List<java.lang.String>, java.lang.String> getHandshakeApplicationProtocolSelector();
  public boolean useDelegatedTask();
}
