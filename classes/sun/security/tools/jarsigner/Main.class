Compiled from "Main.java"
public class sun.security.tools.jarsigner.Main {
  static final java.lang.String VERSION;
  static final int IN_KEYSTORE;
  static final int NOT_ALIAS;
  static final int SIGNED_BY_ALIAS;
  java.security.cert.X509Certificate[] certChain;
  java.security.PrivateKey privateKey;
  java.security.KeyStore store;
  java.lang.String keystore;
  boolean nullStream;
  boolean token;
  java.lang.String jarfile;
  java.lang.String alias;
  java.util.List<java.lang.String> ckaliases;
  char[] storepass;
  boolean protectedPath;
  java.lang.String storetype;
  java.lang.String providerName;
  java.util.List<java.lang.String> providers;
  java.util.List<java.lang.String> providerClasses;
  java.util.HashMap<java.lang.String, java.lang.String> providerArgs;
  char[] keypass;
  java.lang.String sigfile;
  java.lang.String sigalg;
  java.lang.String digestalg;
  java.lang.String signedjar;
  java.lang.String tsaUrl;
  java.lang.String tsaAlias;
  java.lang.String altCertChain;
  java.lang.String tSAPolicyID;
  java.lang.String tSADigestAlg;
  boolean verify;
  java.lang.String verbose;
  boolean showcerts;
  boolean debug;
  boolean signManifest;
  boolean externalSF;
  boolean strict;
  boolean hasTimestampBlock;
  java.security.cert.PKIXBuilderParameters pkixParameters;
  java.util.Set<java.security.cert.X509Certificate> trustedCerts;
  java.util.Hashtable<java.security.cert.Certificate, java.lang.String> storeHash;
  java.util.Map<java.security.CodeSigner, java.lang.String> cacheForSignerInfo;
  public sun.security.tools.jarsigner.Main();
  public static void main(java.lang.String[]) throws java.lang.Exception;
  public void run(java.lang.String[]);
  java.lang.String[] parseArgs(java.lang.String[]) throws java.lang.Exception;
  static char[] getPass(java.lang.String, java.lang.String);
  static void usageNoArg();
  static void usage();
  static void fullusage();
  void verifyJar(java.lang.String) throws java.lang.Exception;
  java.lang.String printCert(boolean, java.lang.String, java.security.cert.Certificate, java.util.Date, boolean) throws java.lang.Exception;
  int inKeyStore(java.security.CodeSigner[]);
  void signJar(java.lang.String, java.lang.String) throws java.lang.Exception;
  void loadKeyStore(java.lang.String, boolean);
  java.security.cert.X509Certificate getTsaCert(java.lang.String);
  void checkCertUsage(java.security.cert.X509Certificate, boolean[]);
  void getAliasInfo(java.lang.String) throws java.lang.Exception;
  void error(java.lang.String);
  void error(java.lang.String, java.lang.Throwable);
  void validateCertChain(java.lang.String, java.util.List<? extends java.security.cert.Certificate>, java.security.Timestamp) throws java.lang.Exception;
  char[] getPass(java.lang.String);
  static {};
}
