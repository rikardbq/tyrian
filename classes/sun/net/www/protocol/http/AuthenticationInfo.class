Compiled from "AuthenticationInfo.java"
public abstract class sun.net.www.protocol.http.AuthenticationInfo extends sun.net.www.protocol.http.AuthCacheValue implements java.lang.Cloneable {
  static final long serialVersionUID;
  public static final char SERVER_AUTHENTICATION;
  public static final char PROXY_AUTHENTICATION;
  static final boolean serializeAuth;
  protected transient java.net.PasswordAuthentication pw;
  char type;
  sun.net.www.protocol.http.AuthScheme authScheme;
  java.lang.String protocol;
  java.lang.String host;
  int port;
  java.lang.String realm;
  java.lang.String path;
  java.lang.String authenticatorKey;
  java.lang.String s1;
  java.lang.String s2;
  static final boolean $assertionsDisabled;
  public java.net.PasswordAuthentication credentials();
  public sun.net.www.protocol.http.AuthCacheValue$Type getAuthType();
  sun.net.www.protocol.http.AuthScheme getAuthScheme();
  public java.lang.String getHost();
  public int getPort();
  public java.lang.String getRealm();
  public java.lang.String getPath();
  public java.lang.String getProtocolScheme();
  protected boolean useAuthCache();
  public sun.net.www.protocol.http.AuthenticationInfo(char, sun.net.www.protocol.http.AuthScheme, java.lang.String, int, java.lang.String, java.lang.String);
  public java.lang.Object clone();
  public sun.net.www.protocol.http.AuthenticationInfo(char, sun.net.www.protocol.http.AuthScheme, java.net.URL, java.lang.String, java.lang.String);
  public final java.lang.String getAuthenticatorKey();
  static java.lang.String reducePath(java.lang.String);
  static sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.net.URL, java.lang.String);
  static java.lang.String getServerAuthKey(java.net.URL, java.lang.String, sun.net.www.protocol.http.AuthScheme, java.lang.String);
  static sun.net.www.protocol.http.AuthenticationInfo getServerAuth(java.lang.String);
  static sun.net.www.protocol.http.AuthenticationInfo getAuth(java.lang.String, java.net.URL);
  static sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String, int, java.lang.String);
  static java.lang.String getProxyAuthKey(java.lang.String, int, java.lang.String, sun.net.www.protocol.http.AuthScheme, java.lang.String);
  static sun.net.www.protocol.http.AuthenticationInfo getProxyAuth(java.lang.String);
  void addToCache();
  static void endAuthRequest(java.lang.String);
  void removeFromCache();
  public abstract boolean supportsPreemptiveAuthorization();
  public java.lang.String getHeaderName();
  public abstract java.lang.String getHeaderValue(java.net.URL, java.lang.String);
  public abstract boolean setHeaders(sun.net.www.protocol.http.HttpURLConnection, sun.net.www.HeaderParser, java.lang.String);
  public abstract boolean isAuthorizationStale(java.lang.String);
  java.lang.String cacheKey(boolean);
  static {};
}
