Compiled from "SSLStreams.java"
class sun.net.httpserver.SSLStreams {
  javax.net.ssl.SSLContext sslctx;
  java.nio.channels.SocketChannel chan;
  sun.net.httpserver.TimeSource time;
  sun.net.httpserver.ServerImpl server;
  javax.net.ssl.SSLEngine engine;
  sun.net.httpserver.SSLStreams$EngineWrapper wrapper;
  sun.net.httpserver.SSLStreams$OutputStream os;
  sun.net.httpserver.SSLStreams$InputStream is;
  java.util.concurrent.locks.Lock handshaking;
  int app_buf_size;
  int packet_buf_size;
  static final boolean $assertionsDisabled;
  sun.net.httpserver.SSLStreams(sun.net.httpserver.ServerImpl, javax.net.ssl.SSLContext, java.nio.channels.SocketChannel) throws java.io.IOException;
  void close() throws java.io.IOException;
  sun.net.httpserver.SSLStreams$InputStream getInputStream() throws java.io.IOException;
  sun.net.httpserver.SSLStreams$OutputStream getOutputStream() throws java.io.IOException;
  javax.net.ssl.SSLEngine getSSLEngine();
  void beginHandshake() throws javax.net.ssl.SSLException;
  public sun.net.httpserver.SSLStreams$WrapperResult sendData(java.nio.ByteBuffer) throws java.io.IOException;
  public sun.net.httpserver.SSLStreams$WrapperResult recvData(java.nio.ByteBuffer) throws java.io.IOException;
  void doClosure() throws java.io.IOException;
  void doHandshake(javax.net.ssl.SSLEngineResult$HandshakeStatus) throws java.io.IOException;
  static {};
}
