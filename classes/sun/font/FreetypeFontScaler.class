Compiled from "FreetypeFontScaler.java"
class sun.font.FreetypeFontScaler extends sun.font.FontScaler {
  public sun.font.FreetypeFontScaler(sun.font.Font2D, int, boolean, int);
  synchronized sun.font.StrikeMetrics getFontMetrics(long) throws sun.font.FontScalerException;
  synchronized float getGlyphAdvance(long, int) throws sun.font.FontScalerException;
  synchronized void getGlyphMetrics(long, int, java.awt.geom.Point2D$Float) throws sun.font.FontScalerException;
  synchronized long getGlyphImage(long, int) throws sun.font.FontScalerException;
  synchronized java.awt.geom.Rectangle2D$Float getGlyphOutlineBounds(long, int) throws sun.font.FontScalerException;
  synchronized java.awt.geom.GeneralPath getGlyphOutline(long, int, float, float) throws sun.font.FontScalerException;
  synchronized java.awt.geom.GeneralPath getGlyphVectorOutline(long, int[], int, float, float) throws sun.font.FontScalerException;
  public synchronized void dispose();
  public synchronized void disposeScaler();
  synchronized int getNumGlyphs() throws sun.font.FontScalerException;
  synchronized int getMissingGlyphCode() throws sun.font.FontScalerException;
  synchronized int getGlyphCode(char) throws sun.font.FontScalerException;
  synchronized java.awt.geom.Point2D$Float getGlyphPoint(long, int, int) throws sun.font.FontScalerException;
  synchronized long getUnitsPerEm();
  synchronized long createScalerContext(double[], int, int, float, float, boolean);
  void invalidateScalerContext(long);
  static {};
}
