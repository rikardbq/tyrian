Compiled from "ExtendedTextSourceLabel.java"
class sun.font.ExtendedTextSourceLabel extends sun.font.ExtendedTextLabel implements sun.font.Decoration$Label {
  sun.font.TextSource source;
  java.awt.geom.Rectangle2D lb;
  java.awt.geom.Rectangle2D ab;
  java.awt.geom.Rectangle2D vb;
  java.awt.geom.Rectangle2D ib;
  sun.font.StandardGlyphVector gv;
  float[] charinfo;
  public sun.font.ExtendedTextSourceLabel(sun.font.TextSource, sun.font.Decoration);
  public sun.font.ExtendedTextSourceLabel(sun.font.TextSource, sun.font.ExtendedTextSourceLabel, int);
  public java.awt.geom.Rectangle2D getLogicalBounds();
  public java.awt.geom.Rectangle2D getLogicalBounds(float, float);
  public float getAdvance();
  public java.awt.geom.Rectangle2D getVisualBounds(float, float);
  public java.awt.geom.Rectangle2D getAlignBounds(float, float);
  public java.awt.geom.Rectangle2D getItalicBounds(float, float);
  public java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float);
  public boolean isSimple();
  public java.awt.geom.AffineTransform getBaselineTransform();
  public java.awt.Shape handleGetOutline(float, float);
  public java.awt.Shape getOutline(float, float);
  public void handleDraw(java.awt.Graphics2D, float, float);
  public void draw(java.awt.Graphics2D, float, float);
  protected java.awt.geom.Rectangle2D createLogicalBounds();
  public java.awt.geom.Rectangle2D handleGetVisualBounds();
  protected java.awt.geom.Rectangle2D createAlignBounds();
  public java.awt.geom.Rectangle2D createItalicBounds();
  protected sun.font.StandardGlyphVector createGV();
  public int getNumCharacters();
  public sun.font.CoreMetrics getCoreMetrics();
  public float getCharX(int);
  public float getCharY(int);
  public float getCharAdvance(int);
  public java.awt.geom.Rectangle2D handleGetCharVisualBounds(int);
  public java.awt.geom.Rectangle2D getCharVisualBounds(int, float, float);
  public int logicalToVisual(int);
  public int visualToLogical(int);
  public int getLineBreakIndex(int, float);
  public float getAdvanceBetween(int, int);
  public boolean caretAtOffsetIsValid(int);
  protected float[] createCharinfo();
  protected int l2v(int);
  protected int v2l(int);
  public sun.font.TextLineComponent getSubset(int, int, int);
  public java.lang.String toString();
  public int getNumJustificationInfos();
  public void getJustificationInfos(java.awt.font.GlyphJustificationInfo[], int, int, int);
  public sun.font.TextLineComponent applyJustificationDeltas(float[], int, boolean[]);
  static {};
}
