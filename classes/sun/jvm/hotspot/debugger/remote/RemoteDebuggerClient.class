Compiled from "RemoteDebuggerClient.java"
public class sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient extends sun.jvm.hotspot.debugger.DebuggerBase implements sun.jvm.hotspot.debugger.JVMDebugger {
  public sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient(sun.jvm.hotspot.debugger.remote.RemoteDebugger) throws sun.jvm.hotspot.debugger.DebuggerException;
  public long[] getThreadIntegerRegisterSet(sun.jvm.hotspot.debugger.Address);
  public long[] getThreadIntegerRegisterSet(long);
  public boolean hasProcessList() throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.util.List getProcessList() throws sun.jvm.hotspot.debugger.DebuggerException;
  public void attach(int) throws sun.jvm.hotspot.debugger.DebuggerException;
  public void attach(java.lang.String, java.lang.String) throws sun.jvm.hotspot.debugger.DebuggerException;
  public boolean detach();
  public sun.jvm.hotspot.debugger.Address parseAddress(java.lang.String) throws java.lang.NumberFormatException;
  public java.lang.String getOS() throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.lang.String getCPU();
  public boolean hasConsole() throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.lang.String consoleExecuteCommand(java.lang.String) throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.lang.String getConsolePrompt() throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.cdbg.CDebugger getCDebugger() throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.Address lookup(java.lang.String, java.lang.String);
  public sun.jvm.hotspot.debugger.OopHandle lookupOop(java.lang.String, java.lang.String);
  public long readCInteger(long, long, boolean) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public long readJLong(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public void configureJavaPrimitiveTypeSizes(long, long, long, long, long, long, long, long);
  public void setMachineDescription(sun.jvm.hotspot.debugger.MachineDescription);
  public int getRemoteProcessAddressSize();
  public java.lang.String addressValueToString(long);
  public long getAddressValue(sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.Address newAddress(long);
  sun.jvm.hotspot.debugger.remote.RemoteAddress readAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  sun.jvm.hotspot.debugger.remote.RemoteAddress readCompOopAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  sun.jvm.hotspot.debugger.remote.RemoteAddress readCompKlassAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  sun.jvm.hotspot.debugger.remote.RemoteOopHandle readOopHandle(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException, sun.jvm.hotspot.debugger.NotInHeapException;
  sun.jvm.hotspot.debugger.remote.RemoteOopHandle readCompOopHandle(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException, sun.jvm.hotspot.debugger.NotInHeapException;
  boolean areThreadsEqual(sun.jvm.hotspot.debugger.Address, sun.jvm.hotspot.debugger.Address);
  boolean areThreadsEqual(long, long);
  boolean areThreadsEqual(sun.jvm.hotspot.debugger.Address, long);
  boolean areThreadsEqual(long, sun.jvm.hotspot.debugger.Address);
  int getThreadHashCode(sun.jvm.hotspot.debugger.Address);
  int getThreadHashCode(long);
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadForIdentifierAddress(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadForThreadId(long);
  public sun.jvm.hotspot.debugger.MachineDescription getMachineDescription() throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.ReadResult readBytesFromProcess(long, long);
  public void writeBytesToProcess(long, long, byte[]);
}
