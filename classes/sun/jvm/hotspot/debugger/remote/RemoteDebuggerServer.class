Compiled from "RemoteDebuggerServer.java"
public class sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer extends java.rmi.server.UnicastRemoteObject implements sun.jvm.hotspot.debugger.remote.RemoteDebugger {
  public sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer() throws java.rmi.RemoteException;
  public sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer(sun.jvm.hotspot.debugger.Debugger) throws java.rmi.RemoteException;
  public java.lang.String getOS() throws java.rmi.RemoteException;
  public java.lang.String getCPU() throws java.rmi.RemoteException;
  public sun.jvm.hotspot.debugger.MachineDescription getMachineDescription() throws java.rmi.RemoteException;
  public long lookupInProcess(java.lang.String, java.lang.String) throws java.rmi.RemoteException;
  public sun.jvm.hotspot.debugger.ReadResult readBytesFromProcess(long, long) throws java.rmi.RemoteException;
  public boolean hasConsole() throws java.rmi.RemoteException;
  public java.lang.String getConsolePrompt() throws java.rmi.RemoteException;
  public java.lang.String consoleExecuteCommand(java.lang.String) throws java.rmi.RemoteException;
  public long getJBooleanSize() throws java.rmi.RemoteException;
  public long getJByteSize() throws java.rmi.RemoteException;
  public long getJCharSize() throws java.rmi.RemoteException;
  public long getJDoubleSize() throws java.rmi.RemoteException;
  public long getJFloatSize() throws java.rmi.RemoteException;
  public long getJIntSize() throws java.rmi.RemoteException;
  public long getJLongSize() throws java.rmi.RemoteException;
  public long getJShortSize() throws java.rmi.RemoteException;
  public long getHeapOopSize() throws java.rmi.RemoteException;
  public long getNarrowOopBase() throws java.rmi.RemoteException;
  public int getNarrowOopShift() throws java.rmi.RemoteException;
  public long getKlassPtrSize() throws java.rmi.RemoteException;
  public long getNarrowKlassBase() throws java.rmi.RemoteException;
  public int getNarrowKlassShift() throws java.rmi.RemoteException;
  public boolean areThreadsEqual(long, boolean, long, boolean) throws java.rmi.RemoteException;
  public int getThreadHashCode(long, boolean) throws java.rmi.RemoteException;
  public long[] getThreadIntegerRegisterSet(long, boolean) throws java.rmi.RemoteException;
}
