Compiled from "DSO.java"
public abstract class sun.jvm.hotspot.debugger.posix.DSO implements sun.jvm.hotspot.debugger.cdbg.LoadObject {
  public sun.jvm.hotspot.debugger.posix.DSO(java.lang.String, long, sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.posix.elf.ELFException;
  public sun.jvm.hotspot.debugger.posix.DSO(long, sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.posix.elf.ELFException;
  public java.lang.String getName();
  public sun.jvm.hotspot.debugger.Address getBase();
  public void setBase(sun.jvm.hotspot.debugger.Address);
  public long getSize();
  public sun.jvm.hotspot.debugger.cdbg.CDebugInfoDataBase getDebugInfoDataBase() throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.cdbg.BlockSym debugInfoForPC(sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.cdbg.ClosestSymbol closestSymbolToPC(sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.DebuggerException;
  public sun.jvm.hotspot.debugger.cdbg.LineNumberInfo lineNumberForPC(sun.jvm.hotspot.debugger.Address) throws sun.jvm.hotspot.debugger.DebuggerException;
  public boolean isDSO();
  public sun.jvm.hotspot.debugger.Address lookupSymbol(java.lang.String) throws sun.jvm.hotspot.debugger.posix.elf.ELFException;
  public boolean equals(java.lang.Object);
  public int hashCode();
  protected sun.jvm.hotspot.debugger.posix.elf.ELFFile getFile();
  protected abstract sun.jvm.hotspot.debugger.Address newAddress(long);
  protected abstract long getAddressValue(sun.jvm.hotspot.debugger.Address);
  protected sun.jvm.hotspot.debugger.cdbg.ClosestSymbol createClosestSymbol(java.lang.String, long);
}
