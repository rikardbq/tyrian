Compiled from "BsdDebuggerLocal.java"
public class sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal extends sun.jvm.hotspot.debugger.DebuggerBase implements sun.jvm.hotspot.debugger.bsd.BsdDebugger {
  public static native int getAddressSize();
  public sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal(sun.jvm.hotspot.debugger.MachineDescription, boolean) throws sun.jvm.hotspot.debugger.DebuggerException;
  public boolean hasProcessList() throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.util.List getProcessList() throws sun.jvm.hotspot.debugger.DebuggerException;
  public synchronized void attach(int) throws sun.jvm.hotspot.debugger.DebuggerException;
  public synchronized void attach(java.lang.String, java.lang.String);
  public synchronized boolean detach();
  public sun.jvm.hotspot.debugger.Address parseAddress(java.lang.String) throws java.lang.NumberFormatException;
  public java.lang.String getOS();
  public java.lang.String getCPU();
  public boolean hasConsole() throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.lang.String consoleExecuteCommand(java.lang.String) throws sun.jvm.hotspot.debugger.DebuggerException;
  public java.lang.String getConsolePrompt() throws sun.jvm.hotspot.debugger.DebuggerException;
  public synchronized sun.jvm.hotspot.debugger.Address lookup(java.lang.String, java.lang.String);
  public synchronized sun.jvm.hotspot.debugger.OopHandle lookupOop(java.lang.String, java.lang.String);
  public sun.jvm.hotspot.debugger.MachineDescription getMachineDescription();
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadForIdentifierAddress(sun.jvm.hotspot.debugger.Address, sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadForIdentifierAddress(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadForThreadId(long);
  public java.lang.String addressValueToString(long);
  public sun.jvm.hotspot.debugger.bsd.BsdAddress readAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public sun.jvm.hotspot.debugger.bsd.BsdAddress readCompOopAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public sun.jvm.hotspot.debugger.bsd.BsdAddress readCompKlassAddress(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public sun.jvm.hotspot.debugger.bsd.BsdOopHandle readOopHandle(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException, sun.jvm.hotspot.debugger.NotInHeapException;
  public sun.jvm.hotspot.debugger.bsd.BsdOopHandle readCompOopHandle(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException, sun.jvm.hotspot.debugger.NotInHeapException;
  public synchronized long[] getThreadIntegerRegisterSet(long) throws sun.jvm.hotspot.debugger.DebuggerException;
  public long readCInteger(long, long, boolean) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public long readJLong(long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.UnalignedAddressException;
  public long getAddressValue(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.Address newAddress(long);
  public java.util.List getThreadList();
  public java.util.List getLoadObjectList();
  public synchronized sun.jvm.hotspot.debugger.cdbg.ClosestSymbol lookup(long);
  public sun.jvm.hotspot.debugger.cdbg.CDebugger getCDebugger();
  public synchronized sun.jvm.hotspot.debugger.ReadResult readBytesFromProcess(long, long) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.DebuggerException;
  public void writeBytesToProcess(long, long, byte[]) throws sun.jvm.hotspot.debugger.UnmappedAddressException, sun.jvm.hotspot.debugger.DebuggerException;
  public long[] getJavaThreadsInfo();
  static {};
}
