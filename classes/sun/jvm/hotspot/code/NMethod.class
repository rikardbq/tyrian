Compiled from "NMethod.java"
public class sun.jvm.hotspot.code.NMethod extends sun.jvm.hotspot.code.CompiledMethod {
  public sun.jvm.hotspot.code.NMethod(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.Address getAddress();
  public boolean isNMethod();
  public boolean isJavaMethod();
  public boolean isNativeMethod();
  public boolean isOSRMethod();
  public sun.jvm.hotspot.debugger.Address constantsBegin();
  public sun.jvm.hotspot.debugger.Address constantsEnd();
  public sun.jvm.hotspot.debugger.Address instsBegin();
  public sun.jvm.hotspot.debugger.Address instsEnd();
  public sun.jvm.hotspot.debugger.Address exceptionBegin();
  public sun.jvm.hotspot.debugger.Address stubBegin();
  public sun.jvm.hotspot.debugger.Address stubEnd();
  public sun.jvm.hotspot.debugger.Address oopsBegin();
  public sun.jvm.hotspot.debugger.Address oopsEnd();
  public sun.jvm.hotspot.debugger.Address metadataBegin();
  public sun.jvm.hotspot.debugger.Address metadataEnd();
  public sun.jvm.hotspot.debugger.Address scopesDataEnd();
  public sun.jvm.hotspot.debugger.Address scopesPCsBegin();
  public sun.jvm.hotspot.debugger.Address scopesPCsEnd();
  public sun.jvm.hotspot.debugger.Address dependenciesBegin();
  public sun.jvm.hotspot.debugger.Address dependenciesEnd();
  public sun.jvm.hotspot.debugger.Address handlerTableBegin();
  public sun.jvm.hotspot.debugger.Address handlerTableEnd();
  public sun.jvm.hotspot.debugger.Address nulChkTableBegin();
  public sun.jvm.hotspot.debugger.Address nulChkTableEnd();
  public int constantsSize();
  public int instsSize();
  public int stubSize();
  public int oopsSize();
  public int metadataSize();
  public int scopesDataSize();
  public int scopesPCsSize();
  public int dependenciesSize();
  public int handlerTableSize();
  public int nulChkTableSize();
  public int origPCOffset();
  public int totalSize();
  public boolean constantsContains(sun.jvm.hotspot.debugger.Address);
  public boolean instsContains(sun.jvm.hotspot.debugger.Address);
  public boolean stubContains(sun.jvm.hotspot.debugger.Address);
  public boolean oopsContains(sun.jvm.hotspot.debugger.Address);
  public boolean metadataContains(sun.jvm.hotspot.debugger.Address);
  public boolean scopesDataContains(sun.jvm.hotspot.debugger.Address);
  public boolean scopesPCsContains(sun.jvm.hotspot.debugger.Address);
  public boolean handlerTableContains(sun.jvm.hotspot.debugger.Address);
  public boolean nulChkTableContains(sun.jvm.hotspot.debugger.Address);
  public int getOopsLength();
  public int getMetadataLength();
  public sun.jvm.hotspot.debugger.Address getEntryPoint();
  public sun.jvm.hotspot.debugger.Address getVerifiedEntryPoint();
  public sun.jvm.hotspot.debugger.OopHandle getOopAt(int);
  public sun.jvm.hotspot.debugger.Address getMetadataAt(int);
  public sun.jvm.hotspot.oops.Method getMethodAt(int);
  public boolean isZombie();
  public int getOSREntryBCI();
  public sun.jvm.hotspot.code.NMethod getOSRLink();
  public sun.jvm.hotspot.code.NMethod getScavengeRootLink();
  public int getScavengeRootState();
  public boolean isMethodHandleReturn(sun.jvm.hotspot.debugger.Address);
  public boolean isDeoptPc(sun.jvm.hotspot.debugger.Address);
  public boolean isDeoptEntry(sun.jvm.hotspot.debugger.Address);
  public boolean isDeoptMhEntry(sun.jvm.hotspot.debugger.Address);
  public boolean canBeDeoptimized();
  public boolean isLockedByVM();
  public sun.jvm.hotspot.code.PCDesc getPCDescAt(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.code.ScopeDesc getScopeDescAt(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.code.PCDesc getPCDescNearDbg(sun.jvm.hotspot.debugger.Address);
  sun.jvm.hotspot.code.PCDesc find_pc_desc(long, boolean);
  sun.jvm.hotspot.code.PCDesc find_pc_desc_internal(long, boolean);
  sun.jvm.hotspot.code.PCDesc pc_desc_at(long);
  sun.jvm.hotspot.code.PCDesc pc_desc_near(long);
  public sun.jvm.hotspot.code.ScopeDesc scope_desc_in(long, long);
  static boolean match_desc(sun.jvm.hotspot.code.PCDesc, int, boolean);
  public sun.jvm.hotspot.code.ScopeDesc getScopeDescNearDbg(sun.jvm.hotspot.debugger.Address);
  public java.util.Map getSafepoints();
  public static int getEntryPointOffset();
  public static int getVerifiedEntryPointOffset();
  public static int getOSREntryPointOffset();
  public static int getEntryBCIOffset();
  public void print();
  protected void printComponentsOn(java.io.PrintStream);
  public java.lang.String toString();
  public java.lang.String flagsToString();
  public java.lang.String getName();
  public void dumpReplayData(java.io.PrintStream);
  static {};
}
