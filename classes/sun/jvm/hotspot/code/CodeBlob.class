Compiled from "CodeBlob.java"
public class sun.jvm.hotspot.code.CodeBlob extends sun.jvm.hotspot.runtime.VMObject {
  protected static int matcherInterpreterFramePointerReg;
  public sun.jvm.hotspot.code.CodeBlob(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.debugger.Address headerBegin();
  public sun.jvm.hotspot.debugger.Address headerEnd();
  public sun.jvm.hotspot.debugger.Address contentBegin();
  public sun.jvm.hotspot.debugger.Address contentEnd();
  public sun.jvm.hotspot.debugger.Address codeBegin();
  public sun.jvm.hotspot.debugger.Address codeEnd();
  public sun.jvm.hotspot.debugger.Address dataBegin();
  public sun.jvm.hotspot.debugger.Address dataEnd();
  public long getFrameCompleteOffset();
  public int getDataOffset();
  public int getSize();
  public int getHeaderSize();
  public long getFrameSizeWords();
  public java.lang.String getName();
  public sun.jvm.hotspot.compiler.ImmutableOopMapSet getOopMaps();
  public boolean isBufferBlob();
  public boolean isAOT();
  public boolean isCompiled();
  public boolean isNMethod();
  public boolean isRuntimeStub();
  public boolean isDeoptimizationStub();
  public boolean isUncommonTrapStub();
  public boolean isExceptionStub();
  public boolean isSafepointStub();
  public boolean isAdapterBlob();
  public boolean isJavaMethod();
  public boolean isNativeMethod();
  public boolean isOSRMethod();
  public sun.jvm.hotspot.code.NMethod asNMethodOrNull();
  public int getContentSize();
  public int getCodeSize();
  public int getDataSize();
  public boolean blobContains(sun.jvm.hotspot.debugger.Address);
  public boolean contentContains(sun.jvm.hotspot.debugger.Address);
  public boolean codeContains(sun.jvm.hotspot.debugger.Address);
  public boolean dataContains(sun.jvm.hotspot.debugger.Address);
  public boolean contains(sun.jvm.hotspot.debugger.Address);
  public boolean isFrameCompleteAt(sun.jvm.hotspot.debugger.Address);
  public boolean isZombie();
  public boolean isLockedByVM();
  public sun.jvm.hotspot.compiler.ImmutableOopMap getOopMapForReturnAddress(sun.jvm.hotspot.debugger.Address, boolean);
  public long getFrameSize();
  public boolean callerMustGCArguments();
  public void print();
  public void printOn(java.io.PrintStream);
  protected void printComponentsOn(java.io.PrintStream);
  static {};
}
