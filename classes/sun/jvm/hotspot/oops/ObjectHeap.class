Compiled from "ObjectHeap.java"
public class sun.jvm.hotspot.oops.ObjectHeap {
  public void initialize(sun.jvm.hotspot.types.TypeDataBase) throws sun.jvm.hotspot.types.WrongTypeException;
  public sun.jvm.hotspot.oops.ObjectHeap(sun.jvm.hotspot.types.TypeDataBase) throws sun.jvm.hotspot.types.WrongTypeException;
  public boolean equal(sun.jvm.hotspot.oops.Oop, sun.jvm.hotspot.oops.Oop);
  public long getOopSize();
  public long getByteSize();
  public long getCharSize();
  public long getBooleanSize();
  public long getIntSize();
  public long getShortSize();
  public long getLongSize();
  public long getFloatSize();
  public long getDoubleSize();
  public sun.jvm.hotspot.oops.TypeArrayKlass getBoolArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getByteArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getCharArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getIntArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getShortArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getLongArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getSingleArrayKlassObj();
  public sun.jvm.hotspot.oops.TypeArrayKlass getDoubleArrayKlassObj();
  public sun.jvm.hotspot.oops.Klass typeArrayKlassObj(int);
  public void iterate(sun.jvm.hotspot.oops.HeapVisitor);
  public void iterate(sun.jvm.hotspot.oops.HeapVisitor, sun.jvm.hotspot.oops.ObjectHeap$ObjectFilter);
  public void iterateObjectsOfKlass(sun.jvm.hotspot.oops.HeapVisitor, sun.jvm.hotspot.oops.Klass, boolean);
  public void iterateObjectsOfKlass(sun.jvm.hotspot.oops.HeapVisitor, sun.jvm.hotspot.oops.Klass);
  public void iterateRaw(sun.jvm.hotspot.oops.RawHeapVisitor);
  public boolean isValidMethod(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.oops.Oop newOop(sun.jvm.hotspot.debugger.OopHandle);
  public void print();
  static {};
}
