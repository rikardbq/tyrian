Compiled from "CellTypeState.java"
public class sun.jvm.hotspot.oops.CellTypeState {
  public static sun.jvm.hotspot.oops.CellTypeState bottom;
  public static sun.jvm.hotspot.oops.CellTypeState uninit;
  public static sun.jvm.hotspot.oops.CellTypeState ref;
  public static sun.jvm.hotspot.oops.CellTypeState value;
  public static sun.jvm.hotspot.oops.CellTypeState refUninit;
  public static sun.jvm.hotspot.oops.CellTypeState top;
  public static sun.jvm.hotspot.oops.CellTypeState addr;
  public sun.jvm.hotspot.oops.CellTypeState copy();
  public static sun.jvm.hotspot.oops.CellTypeState makeAny(int);
  public static sun.jvm.hotspot.oops.CellTypeState makeBottom();
  public static sun.jvm.hotspot.oops.CellTypeState makeTop();
  public static sun.jvm.hotspot.oops.CellTypeState makeAddr(int);
  public static sun.jvm.hotspot.oops.CellTypeState makeSlotRef(int);
  public static sun.jvm.hotspot.oops.CellTypeState makeLineRef(int);
  public static sun.jvm.hotspot.oops.CellTypeState makeLockRef(int);
  public boolean isBottom();
  public boolean isLive();
  public boolean isValidState();
  public boolean isAddress();
  public boolean isReference();
  public boolean isValue();
  public boolean isUninit();
  public boolean canBeAddress();
  public boolean canBeReference();
  public boolean canBeValue();
  public boolean canBeUninit();
  public boolean isInfoBottom();
  public boolean isInfoTop();
  public int getInfo();
  public int getMonitorSource();
  public boolean isGoodAddress();
  public boolean isLockReference();
  public boolean isNonlockReference();
  public boolean equal(sun.jvm.hotspot.oops.CellTypeState);
  public boolean equalKind(sun.jvm.hotspot.oops.CellTypeState);
  public char toChar();
  public void set(sun.jvm.hotspot.oops.CellTypeState);
  public sun.jvm.hotspot.oops.CellTypeState merge(sun.jvm.hotspot.oops.CellTypeState, int);
  public void print(java.io.PrintStream);
  static {};
}
