Compiled from "Frame.java"
public abstract class sun.jvm.hotspot.runtime.Frame implements java.lang.Cloneable {
  protected sun.jvm.hotspot.debugger.Address raw_sp;
  protected sun.jvm.hotspot.debugger.Address pc;
  protected boolean deoptimized;
  public sun.jvm.hotspot.runtime.Frame();
  public static int pcReturnOffset();
  protected int bcpToBci(sun.jvm.hotspot.debugger.Address, sun.jvm.hotspot.oops.ConstMethod);
  protected int bcpToBci(sun.jvm.hotspot.debugger.Address, sun.jvm.hotspot.oops.Method);
  public abstract java.lang.Object clone();
  public sun.jvm.hotspot.debugger.Address getPC();
  public void setPC(sun.jvm.hotspot.debugger.Address);
  public boolean isDeoptimized();
  public sun.jvm.hotspot.code.CodeBlob cb();
  public abstract sun.jvm.hotspot.debugger.Address getSP();
  public abstract sun.jvm.hotspot.debugger.Address getID();
  public abstract sun.jvm.hotspot.debugger.Address getFP();
  public abstract boolean equals(java.lang.Object);
  public boolean isInterpretedFrame();
  public boolean isJavaFrame();
  public boolean isEntryFrame();
  public boolean isNativeFrame();
  public boolean isCompiledFrame();
  public boolean isRuntimeFrame();
  public boolean isFirstFrame();
  public boolean isFirstJavaFrame();
  public abstract boolean isSignalHandlerFrameDbg();
  public abstract int getSignalNumberDbg();
  public abstract java.lang.String getSignalNameDbg();
  public abstract boolean isInterpretedFrameValid();
  public boolean shouldBeDeoptimized();
  public boolean canBeDeoptimized();
  public abstract sun.jvm.hotspot.runtime.Frame sender(sun.jvm.hotspot.runtime.RegisterMap, sun.jvm.hotspot.code.CodeBlob);
  public sun.jvm.hotspot.runtime.Frame sender(sun.jvm.hotspot.runtime.RegisterMap);
  public sun.jvm.hotspot.runtime.Frame realSender(sun.jvm.hotspot.runtime.RegisterMap);
  protected abstract boolean hasSenderPD();
  public sun.jvm.hotspot.debugger.Address addressOfStackSlot(int);
  public sun.jvm.hotspot.debugger.OopHandle getOopHandleAt(int);
  public int getIntAt(int);
  public abstract long frameSize();
  public abstract sun.jvm.hotspot.debugger.Address getLink();
  public abstract sun.jvm.hotspot.debugger.Address getSenderPC();
  public abstract sun.jvm.hotspot.debugger.Address getUnextendedSP();
  public abstract sun.jvm.hotspot.debugger.Address getSenderSP();
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameLocals();
  public sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameLocal(int);
  public abstract int getInterpreterFrameBCI();
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameExpressionStack();
  public abstract int getInterpreterFrameExpressionStackDirection();
  public sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameExpressionStackSlot(int);
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameTOS();
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameTOSAt(int);
  public int getInterpreterFrameExpressionStackSize();
  public abstract sun.jvm.hotspot.debugger.Address getInterpreterFrameSenderSP();
  public abstract sun.jvm.hotspot.runtime.BasicObjectLock interpreterFrameMonitorBegin();
  public abstract sun.jvm.hotspot.runtime.BasicObjectLock interpreterFrameMonitorEnd();
  public abstract int interpreterFrameMonitorSize();
  public sun.jvm.hotspot.runtime.BasicObjectLock nextMonitorInInterpreterFrame(sun.jvm.hotspot.runtime.BasicObjectLock);
  public sun.jvm.hotspot.runtime.BasicObjectLock previousMonitorInInterpreterFrame(sun.jvm.hotspot.runtime.BasicObjectLock);
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameMethod();
  public sun.jvm.hotspot.oops.Method getInterpreterFrameMethod();
  public abstract sun.jvm.hotspot.debugger.Address addressOfInterpreterFrameCPCache();
  public sun.jvm.hotspot.oops.ConstantPoolCache getInterpreterFrameCPCache();
  public abstract sun.jvm.hotspot.runtime.JavaCallWrapper getEntryFrameCallWrapper();
  public boolean entryFrameIsFirst();
  protected abstract sun.jvm.hotspot.debugger.Address addressOfSavedOopResult();
  protected abstract sun.jvm.hotspot.debugger.Address addressOfSavedReceiver();
  public sun.jvm.hotspot.debugger.OopHandle getSavedOopResult();
  public sun.jvm.hotspot.debugger.OopHandle getSavedReceiver();
  public void oopsInterpretedArgumentsDo(sun.jvm.hotspot.oops.Symbol, boolean, sun.jvm.hotspot.runtime.AddressVisitor);
  public sun.jvm.hotspot.debugger.Address oopMapRegToLocation(sun.jvm.hotspot.runtime.VMReg, sun.jvm.hotspot.runtime.RegisterMap);
  public void oopsDo(sun.jvm.hotspot.runtime.AddressVisitor, sun.jvm.hotspot.runtime.RegisterMap);
  public void printValue();
  public void printValueOn(java.io.PrintStream);
  public void print();
  public void printOn(java.io.PrintStream);
  public void interpreterFramePrintOn(java.io.PrintStream);
  static {};
}
