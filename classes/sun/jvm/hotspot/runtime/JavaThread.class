Compiled from "JavaThread.java"
public class sun.jvm.hotspot.runtime.JavaThread extends sun.jvm.hotspot.runtime.Thread {
  public sun.jvm.hotspot.runtime.JavaThread(sun.jvm.hotspot.debugger.Address);
  void setThreadPDAccess(sun.jvm.hotspot.runtime.JavaThreadPDAccess);
  public sun.jvm.hotspot.runtime.JavaThread next();
  public boolean isJavaThread();
  public boolean isExiting();
  public boolean isTerminated();
  public static sun.jvm.hotspot.types.AddressField getAnchorField();
  public sun.jvm.hotspot.debugger.Address getLastJavaSP();
  public sun.jvm.hotspot.debugger.Address getLastJavaPC();
  public sun.jvm.hotspot.debugger.Address getLastJavaFP();
  public sun.jvm.hotspot.debugger.Address getBaseOfStackPointer();
  public boolean hasLastJavaFrame();
  public sun.jvm.hotspot.runtime.Frame getLastFrame();
  protected sun.jvm.hotspot.runtime.Frame getLastFramePD();
  public sun.jvm.hotspot.runtime.JavaVFrame getLastJavaVFrame(sun.jvm.hotspot.runtime.RegisterMap);
  public sun.jvm.hotspot.runtime.JavaVFrame getLastJavaVFrameDbg();
  public sun.jvm.hotspot.runtime.RegisterMap newRegisterMap(boolean);
  public sun.jvm.hotspot.runtime.Frame getCurrentFrameGuess();
  public void printThreadIDOn(java.io.PrintStream);
  public void printThreadID();
  public sun.jvm.hotspot.debugger.ThreadProxy getThreadProxy();
  public sun.jvm.hotspot.runtime.JavaThreadState getThreadState();
  public sun.jvm.hotspot.runtime.OSThread getOSThread();
  public sun.jvm.hotspot.debugger.Address getStackBase();
  public long getStackBaseValue();
  public long getStackSize();
  public int getTerminated();
  public sun.jvm.hotspot.oops.Oop getThreadObj();
  public java.lang.String getThreadName();
  public void oopsDo(sun.jvm.hotspot.runtime.AddressVisitor);
  public boolean isInStack(sun.jvm.hotspot.debugger.Address);
  public boolean isLockOwned(sun.jvm.hotspot.debugger.Address);
  public sun.jvm.hotspot.oops.Oop getCurrentParkBlocker();
  public void printInfoOn(java.io.PrintStream);
  public void printThreadInfoOn(java.io.PrintStream);
  static {};
}
