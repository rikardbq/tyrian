Compiled from "AsynchronousServerSocketChannelImpl.java"
abstract class sun.nio.ch.AsynchronousServerSocketChannelImpl extends java.nio.channels.AsynchronousServerSocketChannel implements sun.nio.ch.Cancellable,sun.nio.ch.Groupable {
  protected final java.io.FileDescriptor fd;
  protected volatile java.net.InetSocketAddress localAddress;
  sun.nio.ch.AsynchronousServerSocketChannelImpl(sun.nio.ch.AsynchronousChannelGroupImpl);
  public final boolean isOpen();
  final void begin() throws java.io.IOException;
  final void end();
  abstract void implClose() throws java.io.IOException;
  public final void close() throws java.io.IOException;
  abstract java.util.concurrent.Future<java.nio.channels.AsynchronousSocketChannel> implAccept(java.lang.Object, java.nio.channels.CompletionHandler<java.nio.channels.AsynchronousSocketChannel, java.lang.Object>);
  public final java.util.concurrent.Future<java.nio.channels.AsynchronousSocketChannel> accept();
  public final <A> void accept(A, java.nio.channels.CompletionHandler<java.nio.channels.AsynchronousSocketChannel, ? super A>);
  final boolean isAcceptKilled();
  public final void onCancel(sun.nio.ch.PendingFuture<?, ?>);
  public final java.nio.channels.AsynchronousServerSocketChannel bind(java.net.SocketAddress, int) throws java.io.IOException;
  public final java.net.SocketAddress getLocalAddress() throws java.io.IOException;
  public final <T> java.nio.channels.AsynchronousServerSocketChannel setOption(java.net.SocketOption<T>, T) throws java.io.IOException;
  public final <T> T getOption(java.net.SocketOption<T>) throws java.io.IOException;
  public final java.util.Set<java.net.SocketOption<?>> supportedOptions();
  public final java.lang.String toString();
  public java.nio.channels.NetworkChannel setOption(java.net.SocketOption, java.lang.Object) throws java.io.IOException;
}
