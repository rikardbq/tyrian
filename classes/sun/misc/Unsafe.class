Compiled from "Unsafe.java"
public final class sun.misc.Unsafe {
  public static final int INVALID_FIELD_OFFSET;
  public static final int ARRAY_BOOLEAN_BASE_OFFSET;
  public static final int ARRAY_BYTE_BASE_OFFSET;
  public static final int ARRAY_SHORT_BASE_OFFSET;
  public static final int ARRAY_CHAR_BASE_OFFSET;
  public static final int ARRAY_INT_BASE_OFFSET;
  public static final int ARRAY_LONG_BASE_OFFSET;
  public static final int ARRAY_FLOAT_BASE_OFFSET;
  public static final int ARRAY_DOUBLE_BASE_OFFSET;
  public static final int ARRAY_OBJECT_BASE_OFFSET;
  public static final int ARRAY_BOOLEAN_INDEX_SCALE;
  public static final int ARRAY_BYTE_INDEX_SCALE;
  public static final int ARRAY_SHORT_INDEX_SCALE;
  public static final int ARRAY_CHAR_INDEX_SCALE;
  public static final int ARRAY_INT_INDEX_SCALE;
  public static final int ARRAY_LONG_INDEX_SCALE;
  public static final int ARRAY_FLOAT_INDEX_SCALE;
  public static final int ARRAY_DOUBLE_INDEX_SCALE;
  public static final int ARRAY_OBJECT_INDEX_SCALE;
  public static final int ADDRESS_SIZE;
  public static sun.misc.Unsafe getUnsafe();
  public int getInt(java.lang.Object, long);
  public void putInt(java.lang.Object, long, int);
  public java.lang.Object getObject(java.lang.Object, long);
  public void putObject(java.lang.Object, long, java.lang.Object);
  public boolean getBoolean(java.lang.Object, long);
  public void putBoolean(java.lang.Object, long, boolean);
  public byte getByte(java.lang.Object, long);
  public void putByte(java.lang.Object, long, byte);
  public short getShort(java.lang.Object, long);
  public void putShort(java.lang.Object, long, short);
  public char getChar(java.lang.Object, long);
  public void putChar(java.lang.Object, long, char);
  public long getLong(java.lang.Object, long);
  public void putLong(java.lang.Object, long, long);
  public float getFloat(java.lang.Object, long);
  public void putFloat(java.lang.Object, long, float);
  public double getDouble(java.lang.Object, long);
  public void putDouble(java.lang.Object, long, double);
  public byte getByte(long);
  public void putByte(long, byte);
  public short getShort(long);
  public void putShort(long, short);
  public char getChar(long);
  public void putChar(long, char);
  public int getInt(long);
  public void putInt(long, int);
  public long getLong(long);
  public void putLong(long, long);
  public float getFloat(long);
  public void putFloat(long, float);
  public double getDouble(long);
  public void putDouble(long, double);
  public long getAddress(long);
  public void putAddress(long, long);
  public long allocateMemory(long);
  public long reallocateMemory(long, long);
  public void setMemory(java.lang.Object, long, long, byte);
  public void setMemory(long, long, byte);
  public void copyMemory(java.lang.Object, long, java.lang.Object, long, long);
  public void copyMemory(long, long, long);
  public void freeMemory(long);
  public long objectFieldOffset(java.lang.reflect.Field);
  public long staticFieldOffset(java.lang.reflect.Field);
  public java.lang.Object staticFieldBase(java.lang.reflect.Field);
  public boolean shouldBeInitialized(java.lang.Class<?>);
  public void ensureClassInitialized(java.lang.Class<?>);
  public int arrayBaseOffset(java.lang.Class<?>);
  public int arrayIndexScale(java.lang.Class<?>);
  public int addressSize();
  public int pageSize();
  public java.lang.Class<?> defineAnonymousClass(java.lang.Class<?>, byte[], java.lang.Object[]);
  public java.lang.Object allocateInstance(java.lang.Class<?>) throws java.lang.InstantiationException;
  public void throwException(java.lang.Throwable);
  public final boolean compareAndSwapObject(java.lang.Object, long, java.lang.Object, java.lang.Object);
  public final boolean compareAndSwapInt(java.lang.Object, long, int, int);
  public final boolean compareAndSwapLong(java.lang.Object, long, long, long);
  public java.lang.Object getObjectVolatile(java.lang.Object, long);
  public void putObjectVolatile(java.lang.Object, long, java.lang.Object);
  public int getIntVolatile(java.lang.Object, long);
  public void putIntVolatile(java.lang.Object, long, int);
  public boolean getBooleanVolatile(java.lang.Object, long);
  public void putBooleanVolatile(java.lang.Object, long, boolean);
  public byte getByteVolatile(java.lang.Object, long);
  public void putByteVolatile(java.lang.Object, long, byte);
  public short getShortVolatile(java.lang.Object, long);
  public void putShortVolatile(java.lang.Object, long, short);
  public char getCharVolatile(java.lang.Object, long);
  public void putCharVolatile(java.lang.Object, long, char);
  public long getLongVolatile(java.lang.Object, long);
  public void putLongVolatile(java.lang.Object, long, long);
  public float getFloatVolatile(java.lang.Object, long);
  public void putFloatVolatile(java.lang.Object, long, float);
  public double getDoubleVolatile(java.lang.Object, long);
  public void putDoubleVolatile(java.lang.Object, long, double);
  public void putOrderedObject(java.lang.Object, long, java.lang.Object);
  public void putOrderedInt(java.lang.Object, long, int);
  public void putOrderedLong(java.lang.Object, long, long);
  public void unpark(java.lang.Object);
  public void park(boolean, long);
  public int getLoadAverage(double[], int);
  public final int getAndAddInt(java.lang.Object, long, int);
  public final long getAndAddLong(java.lang.Object, long, long);
  public final int getAndSetInt(java.lang.Object, long, int);
  public final long getAndSetLong(java.lang.Object, long, long);
  public final java.lang.Object getAndSetObject(java.lang.Object, long, java.lang.Object);
  public void loadFence();
  public void storeFence();
  public void fullFence();
  public void invokeCleaner(java.nio.ByteBuffer);
  static {};
}
