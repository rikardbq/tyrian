Compiled from "MLet.java"
public class javax.management.loading.MLet extends java.net.URLClassLoader implements javax.management.loading.MLetMBean,javax.management.MBeanRegistration,java.io.Externalizable {
  public javax.management.loading.MLet();
  public javax.management.loading.MLet(java.net.URL[]);
  public javax.management.loading.MLet(java.net.URL[], java.lang.ClassLoader);
  public javax.management.loading.MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory);
  public javax.management.loading.MLet(java.net.URL[], boolean);
  public javax.management.loading.MLet(java.net.URL[], java.lang.ClassLoader, boolean);
  public javax.management.loading.MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory, boolean);
  public void addURL(java.net.URL);
  public void addURL(java.lang.String) throws javax.management.ServiceNotFoundException;
  public java.net.URL[] getURLs();
  public java.util.Set<java.lang.Object> getMBeansFromURL(java.net.URL) throws javax.management.ServiceNotFoundException;
  public java.util.Set<java.lang.Object> getMBeansFromURL(java.lang.String) throws javax.management.ServiceNotFoundException;
  public synchronized java.lang.String getLibraryDirectory();
  public synchronized void setLibraryDirectory(java.lang.String);
  public javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) throws java.lang.Exception;
  public void postRegister(java.lang.Boolean);
  public void preDeregister() throws java.lang.Exception;
  public void postDeregister();
  public void writeExternal(java.io.ObjectOutput) throws java.io.IOException, java.lang.UnsupportedOperationException;
  public void readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException, java.lang.UnsupportedOperationException;
  public synchronized java.lang.Class<?> loadClass(java.lang.String, javax.management.loading.ClassLoaderRepository) throws java.lang.ClassNotFoundException;
  protected java.lang.Class<?> findClass(java.lang.String) throws java.lang.ClassNotFoundException;
  java.lang.Class<?> findClass(java.lang.String, javax.management.loading.ClassLoaderRepository) throws java.lang.ClassNotFoundException;
  protected java.lang.String findLibrary(java.lang.String);
  protected java.net.URL check(java.lang.String, java.net.URL, java.lang.String, javax.management.loading.MLetContent) throws java.lang.Exception;
}
