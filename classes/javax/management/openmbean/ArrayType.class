Compiled from "ArrayType.java"
public class javax.management.openmbean.ArrayType<T> extends javax.management.openmbean.OpenType<T> {
  static final long serialVersionUID;
  static boolean isPrimitiveContentType(java.lang.String);
  static java.lang.String getPrimitiveTypeKey(java.lang.String);
  static java.lang.String getPrimitiveTypeName(java.lang.String);
  static javax.management.openmbean.SimpleType<?> getPrimitiveOpenType(java.lang.String);
  public javax.management.openmbean.ArrayType(int, javax.management.openmbean.OpenType<?>) throws javax.management.openmbean.OpenDataException;
  public javax.management.openmbean.ArrayType(javax.management.openmbean.SimpleType<?>, boolean) throws javax.management.openmbean.OpenDataException;
  javax.management.openmbean.ArrayType(java.lang.String, java.lang.String, java.lang.String, int, javax.management.openmbean.OpenType<?>, boolean);
  public int getDimension();
  public javax.management.openmbean.OpenType<?> getElementOpenType();
  public boolean isPrimitiveArray();
  public boolean isValue(java.lang.Object);
  boolean isAssignableFrom(javax.management.openmbean.OpenType<?>);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  public static <E> javax.management.openmbean.ArrayType<E[]> getArrayType(javax.management.openmbean.OpenType<E>) throws javax.management.openmbean.OpenDataException;
  public static <T> javax.management.openmbean.ArrayType<T> getPrimitiveArrayType(java.lang.Class<T>);
  static {};
}
