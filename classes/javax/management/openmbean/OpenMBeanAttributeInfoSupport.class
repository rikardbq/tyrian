Compiled from "OpenMBeanAttributeInfoSupport.java"
public class javax.management.openmbean.OpenMBeanAttributeInfoSupport extends javax.management.MBeanAttributeInfo implements javax.management.openmbean.OpenMBeanAttributeInfo {
  static final long serialVersionUID;
  public javax.management.openmbean.OpenMBeanAttributeInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenType<?>, boolean, boolean, boolean);
  public javax.management.openmbean.OpenMBeanAttributeInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenType<?>, boolean, boolean, boolean, javax.management.Descriptor);
  public <T> javax.management.openmbean.OpenMBeanAttributeInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenType<T>, boolean, boolean, boolean, T) throws javax.management.openmbean.OpenDataException;
  public <T> javax.management.openmbean.OpenMBeanAttributeInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenType<T>, boolean, boolean, boolean, T, T[]) throws javax.management.openmbean.OpenDataException;
  public <T> javax.management.openmbean.OpenMBeanAttributeInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenType<T>, boolean, boolean, boolean, T, java.lang.Comparable<T>, java.lang.Comparable<T>) throws javax.management.openmbean.OpenDataException;
  static void check(javax.management.openmbean.OpenMBeanParameterInfo) throws javax.management.openmbean.OpenDataException;
  static int compare(java.lang.Object, java.lang.Object);
  static <T> javax.management.Descriptor makeDescriptor(javax.management.openmbean.OpenType<T>, T, T[], java.lang.Comparable<T>, java.lang.Comparable<T>);
  static <T> javax.management.Descriptor makeDescriptor(javax.management.openmbean.OpenType<T>, T, java.util.Set<T>, java.lang.Comparable<T>, java.lang.Comparable<T>);
  static <T> T valueFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType<T>);
  static <T> java.util.Set<T> valuesFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType<T>);
  static <T> java.lang.Comparable<?> comparableValueFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType<T>);
  static <T> T cast(java.lang.Object);
  public javax.management.openmbean.OpenType<?> getOpenType();
  public java.lang.Object getDefaultValue();
  public java.util.Set<?> getLegalValues();
  public java.lang.Comparable<?> getMinValue();
  public java.lang.Comparable<?> getMaxValue();
  public boolean hasDefaultValue();
  public boolean hasLegalValues();
  public boolean hasMinValue();
  public boolean hasMaxValue();
  public boolean isValue(java.lang.Object);
  static boolean isValue(javax.management.openmbean.OpenMBeanParameterInfo, java.lang.Object);
  public boolean equals(java.lang.Object);
  static boolean equal(javax.management.openmbean.OpenMBeanParameterInfo, javax.management.openmbean.OpenMBeanParameterInfo);
  public int hashCode();
  static int hashCode(javax.management.openmbean.OpenMBeanParameterInfo);
  public java.lang.String toString();
  static java.lang.String toString(javax.management.openmbean.OpenMBeanParameterInfo);
}
