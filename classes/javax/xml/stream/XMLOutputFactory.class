Compiled from "XMLOutputFactory.java"
public abstract class javax.xml.stream.XMLOutputFactory {
  public static final java.lang.String IS_REPAIRING_NAMESPACES;
  static final java.lang.String DEFAULIMPL;
  protected javax.xml.stream.XMLOutputFactory();
  public static javax.xml.stream.XMLOutputFactory newDefaultFactory();
  public static javax.xml.stream.XMLOutputFactory newInstance() throws javax.xml.stream.FactoryConfigurationError;
  public static javax.xml.stream.XMLOutputFactory newFactory() throws javax.xml.stream.FactoryConfigurationError;
  public static javax.xml.stream.XMLInputFactory newInstance(java.lang.String, java.lang.ClassLoader) throws javax.xml.stream.FactoryConfigurationError;
  public static javax.xml.stream.XMLOutputFactory newFactory(java.lang.String, java.lang.ClassLoader) throws javax.xml.stream.FactoryConfigurationError;
  public abstract javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream, java.lang.String) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLEventWriter createXMLEventWriter(javax.xml.transform.Result) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream, java.lang.String) throws javax.xml.stream.XMLStreamException;
  public abstract javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer) throws javax.xml.stream.XMLStreamException;
  public abstract void setProperty(java.lang.String, java.lang.Object) throws java.lang.IllegalArgumentException;
  public abstract java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException;
  public abstract boolean isPropertySupported(java.lang.String);
}
