Compiled from "ImageInputStreamImpl.java"
public abstract class javax.imageio.stream.ImageInputStreamImpl implements javax.imageio.stream.ImageInputStream {
  byte[] byteBuf;
  protected java.nio.ByteOrder byteOrder;
  protected long streamPos;
  protected int bitOffset;
  protected long flushedPos;
  public javax.imageio.stream.ImageInputStreamImpl();
  protected final void checkClosed() throws java.io.IOException;
  public void setByteOrder(java.nio.ByteOrder);
  public java.nio.ByteOrder getByteOrder();
  public abstract int read() throws java.io.IOException;
  public int read(byte[]) throws java.io.IOException;
  public abstract int read(byte[], int, int) throws java.io.IOException;
  public void readBytes(javax.imageio.stream.IIOByteBuffer, int) throws java.io.IOException;
  public boolean readBoolean() throws java.io.IOException;
  public byte readByte() throws java.io.IOException;
  public int readUnsignedByte() throws java.io.IOException;
  public short readShort() throws java.io.IOException;
  public int readUnsignedShort() throws java.io.IOException;
  public char readChar() throws java.io.IOException;
  public int readInt() throws java.io.IOException;
  public long readUnsignedInt() throws java.io.IOException;
  public long readLong() throws java.io.IOException;
  public float readFloat() throws java.io.IOException;
  public double readDouble() throws java.io.IOException;
  public java.lang.String readLine() throws java.io.IOException;
  public java.lang.String readUTF() throws java.io.IOException;
  public void readFully(byte[], int, int) throws java.io.IOException;
  public void readFully(byte[]) throws java.io.IOException;
  public void readFully(short[], int, int) throws java.io.IOException;
  public void readFully(char[], int, int) throws java.io.IOException;
  public void readFully(int[], int, int) throws java.io.IOException;
  public void readFully(long[], int, int) throws java.io.IOException;
  public void readFully(float[], int, int) throws java.io.IOException;
  public void readFully(double[], int, int) throws java.io.IOException;
  public long getStreamPosition() throws java.io.IOException;
  public int getBitOffset() throws java.io.IOException;
  public void setBitOffset(int) throws java.io.IOException;
  public int readBit() throws java.io.IOException;
  public long readBits(int) throws java.io.IOException;
  public long length();
  public int skipBytes(int) throws java.io.IOException;
  public long skipBytes(long) throws java.io.IOException;
  public void seek(long) throws java.io.IOException;
  public void mark();
  public void reset() throws java.io.IOException;
  public void flushBefore(long) throws java.io.IOException;
  public void flush() throws java.io.IOException;
  public long getFlushedPosition();
  public boolean isCached();
  public boolean isCachedMemory();
  public boolean isCachedFile();
  public void close() throws java.io.IOException;
  protected void finalize() throws java.lang.Throwable;
}
