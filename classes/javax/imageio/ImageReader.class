Compiled from "ImageReader.java"
public abstract class javax.imageio.ImageReader {
  protected javax.imageio.spi.ImageReaderSpi originatingProvider;
  protected java.lang.Object input;
  protected boolean seekForwardOnly;
  protected boolean ignoreMetadata;
  protected int minIndex;
  protected java.util.Locale[] availableLocales;
  protected java.util.Locale locale;
  protected java.util.List<javax.imageio.event.IIOReadWarningListener> warningListeners;
  protected java.util.List<java.util.Locale> warningLocales;
  protected java.util.List<javax.imageio.event.IIOReadProgressListener> progressListeners;
  protected java.util.List<javax.imageio.event.IIOReadUpdateListener> updateListeners;
  protected javax.imageio.ImageReader(javax.imageio.spi.ImageReaderSpi);
  public java.lang.String getFormatName() throws java.io.IOException;
  public javax.imageio.spi.ImageReaderSpi getOriginatingProvider();
  public void setInput(java.lang.Object, boolean, boolean);
  public void setInput(java.lang.Object, boolean);
  public void setInput(java.lang.Object);
  public java.lang.Object getInput();
  public boolean isSeekForwardOnly();
  public boolean isIgnoringMetadata();
  public int getMinIndex();
  public java.util.Locale[] getAvailableLocales();
  public void setLocale(java.util.Locale);
  public java.util.Locale getLocale();
  public abstract int getNumImages(boolean) throws java.io.IOException;
  public abstract int getWidth(int) throws java.io.IOException;
  public abstract int getHeight(int) throws java.io.IOException;
  public boolean isRandomAccessEasy(int) throws java.io.IOException;
  public float getAspectRatio(int) throws java.io.IOException;
  public javax.imageio.ImageTypeSpecifier getRawImageType(int) throws java.io.IOException;
  public abstract java.util.Iterator<javax.imageio.ImageTypeSpecifier> getImageTypes(int) throws java.io.IOException;
  public javax.imageio.ImageReadParam getDefaultReadParam();
  public abstract javax.imageio.metadata.IIOMetadata getStreamMetadata() throws java.io.IOException;
  public javax.imageio.metadata.IIOMetadata getStreamMetadata(java.lang.String, java.util.Set<java.lang.String>) throws java.io.IOException;
  public abstract javax.imageio.metadata.IIOMetadata getImageMetadata(int) throws java.io.IOException;
  public javax.imageio.metadata.IIOMetadata getImageMetadata(int, java.lang.String, java.util.Set<java.lang.String>) throws java.io.IOException;
  public java.awt.image.BufferedImage read(int) throws java.io.IOException;
  public abstract java.awt.image.BufferedImage read(int, javax.imageio.ImageReadParam) throws java.io.IOException;
  public javax.imageio.IIOImage readAll(int, javax.imageio.ImageReadParam) throws java.io.IOException;
  public java.util.Iterator<javax.imageio.IIOImage> readAll(java.util.Iterator<? extends javax.imageio.ImageReadParam>) throws java.io.IOException;
  public boolean canReadRaster();
  public java.awt.image.Raster readRaster(int, javax.imageio.ImageReadParam) throws java.io.IOException;
  public boolean isImageTiled(int) throws java.io.IOException;
  public int getTileWidth(int) throws java.io.IOException;
  public int getTileHeight(int) throws java.io.IOException;
  public int getTileGridXOffset(int) throws java.io.IOException;
  public int getTileGridYOffset(int) throws java.io.IOException;
  public java.awt.image.BufferedImage readTile(int, int, int) throws java.io.IOException;
  public java.awt.image.Raster readTileRaster(int, int, int) throws java.io.IOException;
  public java.awt.image.RenderedImage readAsRenderedImage(int, javax.imageio.ImageReadParam) throws java.io.IOException;
  public boolean readerSupportsThumbnails();
  public boolean hasThumbnails(int) throws java.io.IOException;
  public int getNumThumbnails(int) throws java.io.IOException;
  public int getThumbnailWidth(int, int) throws java.io.IOException;
  public int getThumbnailHeight(int, int) throws java.io.IOException;
  public java.awt.image.BufferedImage readThumbnail(int, int) throws java.io.IOException;
  public synchronized void abort();
  protected synchronized boolean abortRequested();
  protected synchronized void clearAbortRequest();
  static <T> java.util.List<T> addToList(java.util.List<T>, T);
  static <T> java.util.List<T> removeFromList(java.util.List<T>, T);
  public void addIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener);
  public void removeIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener);
  public void removeAllIIOReadWarningListeners();
  public void addIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener);
  public void removeIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener);
  public void removeAllIIOReadProgressListeners();
  public void addIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener);
  public void removeIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener);
  public void removeAllIIOReadUpdateListeners();
  protected void processSequenceStarted(int);
  protected void processSequenceComplete();
  protected void processImageStarted(int);
  protected void processImageProgress(float);
  protected void processImageComplete();
  protected void processThumbnailStarted(int, int);
  protected void processThumbnailProgress(float);
  protected void processThumbnailComplete();
  protected void processReadAborted();
  protected void processPassStarted(java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]);
  protected void processImageUpdate(java.awt.image.BufferedImage, int, int, int, int, int, int, int[]);
  protected void processPassComplete(java.awt.image.BufferedImage);
  protected void processThumbnailPassStarted(java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]);
  protected void processThumbnailUpdate(java.awt.image.BufferedImage, int, int, int, int, int, int, int[]);
  protected void processThumbnailPassComplete(java.awt.image.BufferedImage);
  protected void processWarningOccurred(java.lang.String);
  protected void processWarningOccurred(java.lang.String, java.lang.String);
  public void reset();
  public void dispose();
  protected static java.awt.Rectangle getSourceRegion(javax.imageio.ImageReadParam, int, int);
  protected static void computeRegions(javax.imageio.ImageReadParam, int, int, java.awt.image.BufferedImage, java.awt.Rectangle, java.awt.Rectangle);
  protected static void checkReadParamBandSettings(javax.imageio.ImageReadParam, int, int);
  protected static java.awt.image.BufferedImage getDestination(javax.imageio.ImageReadParam, java.util.Iterator<javax.imageio.ImageTypeSpecifier>, int, int) throws javax.imageio.IIOException;
}
