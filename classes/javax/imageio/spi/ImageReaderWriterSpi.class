Compiled from "ImageReaderWriterSpi.java"
public abstract class javax.imageio.spi.ImageReaderWriterSpi extends javax.imageio.spi.IIOServiceProvider {
  protected java.lang.String[] names;
  protected java.lang.String[] suffixes;
  protected java.lang.String[] MIMETypes;
  protected java.lang.String pluginClassName;
  protected boolean supportsStandardStreamMetadataFormat;
  protected java.lang.String nativeStreamMetadataFormatName;
  protected java.lang.String nativeStreamMetadataFormatClassName;
  protected java.lang.String[] extraStreamMetadataFormatNames;
  protected java.lang.String[] extraStreamMetadataFormatClassNames;
  protected boolean supportsStandardImageMetadataFormat;
  protected java.lang.String nativeImageMetadataFormatName;
  protected java.lang.String nativeImageMetadataFormatClassName;
  protected java.lang.String[] extraImageMetadataFormatNames;
  protected java.lang.String[] extraImageMetadataFormatClassNames;
  public javax.imageio.spi.ImageReaderWriterSpi(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], java.lang.String[]);
  public javax.imageio.spi.ImageReaderWriterSpi();
  public java.lang.String[] getFormatNames();
  public java.lang.String[] getFileSuffixes();
  public java.lang.String[] getMIMETypes();
  public java.lang.String getPluginClassName();
  public boolean isStandardStreamMetadataFormatSupported();
  public java.lang.String getNativeStreamMetadataFormatName();
  public java.lang.String[] getExtraStreamMetadataFormatNames();
  public boolean isStandardImageMetadataFormatSupported();
  public java.lang.String getNativeImageMetadataFormatName();
  public java.lang.String[] getExtraImageMetadataFormatNames();
  public javax.imageio.metadata.IIOMetadataFormat getStreamMetadataFormat(java.lang.String);
  public javax.imageio.metadata.IIOMetadataFormat getImageMetadataFormat(java.lang.String);
}
