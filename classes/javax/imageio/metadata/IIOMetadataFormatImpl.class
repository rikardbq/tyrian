Compiled from "IIOMetadataFormatImpl.java"
public abstract class javax.imageio.metadata.IIOMetadataFormatImpl implements javax.imageio.metadata.IIOMetadataFormat {
  public static final java.lang.String standardMetadataFormatName;
  public javax.imageio.metadata.IIOMetadataFormatImpl(java.lang.String, int);
  public javax.imageio.metadata.IIOMetadataFormatImpl(java.lang.String, int, int);
  protected void setResourceBaseName(java.lang.String);
  protected java.lang.String getResourceBaseName();
  protected void addElement(java.lang.String, java.lang.String, int);
  protected void addElement(java.lang.String, java.lang.String, int, int);
  protected void addChildElement(java.lang.String, java.lang.String);
  protected void removeElement(java.lang.String);
  protected void addAttribute(java.lang.String, java.lang.String, int, boolean, java.lang.String);
  protected void addAttribute(java.lang.String, java.lang.String, int, boolean, java.lang.String, java.util.List<java.lang.String>);
  protected void addAttribute(java.lang.String, java.lang.String, int, boolean, java.lang.String, java.lang.String, java.lang.String, boolean, boolean);
  protected void addAttribute(java.lang.String, java.lang.String, int, boolean, int, int);
  protected void addBooleanAttribute(java.lang.String, java.lang.String, boolean, boolean);
  protected void removeAttribute(java.lang.String, java.lang.String);
  protected <T> void addObjectValue(java.lang.String, java.lang.Class<T>, boolean, T);
  protected <T> void addObjectValue(java.lang.String, java.lang.Class<T>, boolean, T, java.util.List<? extends T>);
  protected <T extends java.lang.Comparable<? super T>> void addObjectValue(java.lang.String, java.lang.Class<T>, T, java.lang.Comparable<? super T>, java.lang.Comparable<? super T>, boolean, boolean);
  protected void addObjectValue(java.lang.String, java.lang.Class<?>, int, int);
  protected void removeObjectValue(java.lang.String);
  public java.lang.String getRootName();
  public abstract boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier);
  public int getElementMinChildren(java.lang.String);
  public int getElementMaxChildren(java.lang.String);
  public java.lang.String getElementDescription(java.lang.String, java.util.Locale);
  public int getChildPolicy(java.lang.String);
  public java.lang.String[] getChildNames(java.lang.String);
  public java.lang.String[] getAttributeNames(java.lang.String);
  public int getAttributeValueType(java.lang.String, java.lang.String);
  public int getAttributeDataType(java.lang.String, java.lang.String);
  public boolean isAttributeRequired(java.lang.String, java.lang.String);
  public java.lang.String getAttributeDefaultValue(java.lang.String, java.lang.String);
  public java.lang.String[] getAttributeEnumerations(java.lang.String, java.lang.String);
  public java.lang.String getAttributeMinValue(java.lang.String, java.lang.String);
  public java.lang.String getAttributeMaxValue(java.lang.String, java.lang.String);
  public int getAttributeListMinLength(java.lang.String, java.lang.String);
  public int getAttributeListMaxLength(java.lang.String, java.lang.String);
  public java.lang.String getAttributeDescription(java.lang.String, java.lang.String, java.util.Locale);
  public int getObjectValueType(java.lang.String);
  public java.lang.Class<?> getObjectClass(java.lang.String);
  public java.lang.Object getObjectDefaultValue(java.lang.String);
  public java.lang.Object[] getObjectEnumerations(java.lang.String);
  public java.lang.Comparable<?> getObjectMinValue(java.lang.String);
  public java.lang.Comparable<?> getObjectMaxValue(java.lang.String);
  public int getObjectArrayMinLength(java.lang.String);
  public int getObjectArrayMaxLength(java.lang.String);
  public static javax.imageio.metadata.IIOMetadataFormat getStandardFormatInstance();
  static {};
}
