Compiled from "Types.java"
public interface javax.lang.model.util.Types {
  public abstract javax.lang.model.element.Element asElement(javax.lang.model.type.TypeMirror);
  public abstract boolean isSameType(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror);
  public abstract boolean isSubtype(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror);
  public abstract boolean isAssignable(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror);
  public abstract boolean contains(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror);
  public abstract boolean isSubsignature(javax.lang.model.type.ExecutableType, javax.lang.model.type.ExecutableType);
  public abstract java.util.List<? extends javax.lang.model.type.TypeMirror> directSupertypes(javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.type.TypeMirror erasure(javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.element.TypeElement boxedClass(javax.lang.model.type.PrimitiveType);
  public abstract javax.lang.model.type.PrimitiveType unboxedType(javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.type.TypeMirror capture(javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.type.PrimitiveType getPrimitiveType(javax.lang.model.type.TypeKind);
  public abstract javax.lang.model.type.NullType getNullType();
  public abstract javax.lang.model.type.NoType getNoType(javax.lang.model.type.TypeKind);
  public abstract javax.lang.model.type.ArrayType getArrayType(javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.type.WildcardType getWildcardType(javax.lang.model.type.TypeMirror, javax.lang.model.type.TypeMirror);
  public abstract javax.lang.model.type.DeclaredType getDeclaredType(javax.lang.model.element.TypeElement, javax.lang.model.type.TypeMirror...);
  public abstract javax.lang.model.type.DeclaredType getDeclaredType(javax.lang.model.type.DeclaredType, javax.lang.model.element.TypeElement, javax.lang.model.type.TypeMirror...);
  public abstract javax.lang.model.type.TypeMirror asMemberOf(javax.lang.model.type.DeclaredType, javax.lang.model.element.Element);
}
