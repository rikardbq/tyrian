Compiled from "ElementFilter.java"
public class javax.lang.model.util.ElementFilter {
  public static java.util.List<javax.lang.model.element.VariableElement> fieldsIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.VariableElement> fieldsIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.ExecutableElement> constructorsIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.ExecutableElement> constructorsIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.ExecutableElement> methodsIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.ExecutableElement> methodsIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.TypeElement> typesIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.TypeElement> typesIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.PackageElement> packagesIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.PackageElement> packagesIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.ModuleElement> modulesIn(java.lang.Iterable<? extends javax.lang.model.element.Element>);
  public static java.util.Set<javax.lang.model.element.ModuleElement> modulesIn(java.util.Set<? extends javax.lang.model.element.Element>);
  public static java.util.List<javax.lang.model.element.ModuleElement$ExportsDirective> exportsIn(java.lang.Iterable<? extends javax.lang.model.element.ModuleElement$Directive>);
  public static java.util.List<javax.lang.model.element.ModuleElement$OpensDirective> opensIn(java.lang.Iterable<? extends javax.lang.model.element.ModuleElement$Directive>);
  public static java.util.List<javax.lang.model.element.ModuleElement$ProvidesDirective> providesIn(java.lang.Iterable<? extends javax.lang.model.element.ModuleElement$Directive>);
  public static java.util.List<javax.lang.model.element.ModuleElement$RequiresDirective> requiresIn(java.lang.Iterable<? extends javax.lang.model.element.ModuleElement$Directive>);
  public static java.util.List<javax.lang.model.element.ModuleElement$UsesDirective> usesIn(java.lang.Iterable<? extends javax.lang.model.element.ModuleElement$Directive>);
  static {};
}
