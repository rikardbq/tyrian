Compiled from "HTMLDocument.java"
public class javax.swing.text.html.HTMLDocument extends javax.swing.text.DefaultStyledDocument {
  static final java.lang.String TokenThreshold;
  public static final java.lang.String AdditionalComments;
  static final java.lang.String StyleType;
  java.net.URL base;
  boolean hasBaseTag;
  static java.lang.String MAP_PROPERTY;
  public javax.swing.text.html.HTMLDocument();
  public javax.swing.text.html.HTMLDocument(javax.swing.text.html.StyleSheet);
  public javax.swing.text.html.HTMLDocument(javax.swing.text.AbstractDocument$Content, javax.swing.text.html.StyleSheet);
  public javax.swing.text.html.HTMLEditorKit$ParserCallback getReader(int);
  public javax.swing.text.html.HTMLEditorKit$ParserCallback getReader(int, int, int, javax.swing.text.html.HTML$Tag);
  javax.swing.text.html.HTMLEditorKit$ParserCallback getReader(int, int, int, javax.swing.text.html.HTML$Tag, boolean);
  public java.net.URL getBase();
  public void setBase(java.net.URL);
  protected void insert(int, javax.swing.text.DefaultStyledDocument$ElementSpec[]) throws javax.swing.text.BadLocationException;
  protected void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent, javax.swing.text.AttributeSet);
  protected void create(javax.swing.text.DefaultStyledDocument$ElementSpec[]);
  public void setParagraphAttributes(int, int, javax.swing.text.AttributeSet, boolean);
  public javax.swing.text.html.StyleSheet getStyleSheet();
  public javax.swing.text.html.HTMLDocument$Iterator getIterator(javax.swing.text.html.HTML$Tag);
  protected javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int);
  protected javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet);
  protected javax.swing.text.AbstractDocument$AbstractElement createDefaultRoot();
  public void setTokenThreshold(int);
  public int getTokenThreshold();
  public void setPreservesUnknownTags(boolean);
  public boolean getPreservesUnknownTags();
  public void processHTMLFrameHyperlinkEvent(javax.swing.text.html.HTMLFrameHyperlinkEvent);
  static boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML$Tag);
  boolean isFrameDocument();
  void setFrameDocumentState(boolean);
  void addMap(javax.swing.text.html.Map);
  void removeMap(javax.swing.text.html.Map);
  javax.swing.text.html.Map getMap(java.lang.String);
  java.util.Enumeration<java.lang.Object> getMaps();
  void setDefaultStyleSheetType(java.lang.String);
  java.lang.String getDefaultStyleSheetType();
  public void setParser(javax.swing.text.html.HTMLEditorKit$Parser);
  public javax.swing.text.html.HTMLEditorKit$Parser getParser();
  public void setInnerHTML(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public void setOuterHTML(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public void insertAfterStart(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public void insertBeforeEnd(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public void insertBeforeStart(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public void insertAfterEnd(javax.swing.text.Element, java.lang.String) throws javax.swing.text.BadLocationException, java.io.IOException;
  public javax.swing.text.Element getElement(java.lang.String);
  public javax.swing.text.Element getElement(javax.swing.text.Element, java.lang.Object, java.lang.Object);
  void obtainLock();
  void releaseLock();
  protected void fireChangedUpdate(javax.swing.event.DocumentEvent);
  protected void fireUndoableEditUpdate(javax.swing.event.UndoableEditEvent);
  boolean hasBaseTag();
  java.lang.String getBaseTarget();
  static void access$000(javax.swing.text.html.HTMLDocument, javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  static javax.swing.text.AbstractDocument$Content access$100(javax.swing.text.html.HTMLDocument);
  static void access$200(javax.swing.text.html.HTMLDocument, javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  static void access$300(javax.swing.text.html.HTMLDocument, javax.swing.event.DocumentEvent);
  static {};
}
