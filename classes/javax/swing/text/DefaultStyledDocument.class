Compiled from "DefaultStyledDocument.java"
public class javax.swing.text.DefaultStyledDocument extends javax.swing.text.AbstractDocument implements javax.swing.text.StyledDocument {
  public static final int BUFFER_SIZE_DEFAULT;
  protected javax.swing.text.DefaultStyledDocument$ElementBuffer buffer;
  public javax.swing.text.DefaultStyledDocument(javax.swing.text.AbstractDocument$Content, javax.swing.text.StyleContext);
  public javax.swing.text.DefaultStyledDocument(javax.swing.text.StyleContext);
  public javax.swing.text.DefaultStyledDocument();
  public javax.swing.text.Element getDefaultRootElement();
  protected void create(javax.swing.text.DefaultStyledDocument$ElementSpec[]);
  protected void insert(int, javax.swing.text.DefaultStyledDocument$ElementSpec[]) throws javax.swing.text.BadLocationException;
  public void removeElement(javax.swing.text.Element);
  public javax.swing.text.Style addStyle(java.lang.String, javax.swing.text.Style);
  public void removeStyle(java.lang.String);
  public javax.swing.text.Style getStyle(java.lang.String);
  public java.util.Enumeration<?> getStyleNames();
  public void setLogicalStyle(int, javax.swing.text.Style);
  public javax.swing.text.Style getLogicalStyle(int);
  public void setCharacterAttributes(int, int, javax.swing.text.AttributeSet, boolean);
  public void setParagraphAttributes(int, int, javax.swing.text.AttributeSet, boolean);
  public javax.swing.text.Element getParagraphElement(int);
  public javax.swing.text.Element getCharacterElement(int);
  protected void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent, javax.swing.text.AttributeSet);
  short createSpecsForInsertAfterNewline(javax.swing.text.Element, javax.swing.text.Element, javax.swing.text.AttributeSet, java.util.Vector<javax.swing.text.DefaultStyledDocument$ElementSpec>, int, int);
  protected void removeUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  protected javax.swing.text.AbstractDocument$AbstractElement createDefaultRoot();
  public java.awt.Color getForeground(javax.swing.text.AttributeSet);
  public java.awt.Color getBackground(javax.swing.text.AttributeSet);
  public java.awt.Font getFont(javax.swing.text.AttributeSet);
  protected void styleChanged(javax.swing.text.Style);
  public void addDocumentListener(javax.swing.event.DocumentListener);
  public void removeDocumentListener(javax.swing.event.DocumentListener);
  javax.swing.event.ChangeListener createStyleChangeListener();
  javax.swing.event.ChangeListener createStyleContextChangeListener();
  void updateStylesListeningTo();
}
