Compiled from "View.java"
public abstract class javax.swing.text.View implements javax.swing.SwingConstants {
  public static final int BadBreakWeight;
  public static final int GoodBreakWeight;
  public static final int ExcellentBreakWeight;
  public static final int ForcedBreakWeight;
  public static final int X_AXIS;
  public static final int Y_AXIS;
  static final javax.swing.text.Position$Bias[] sharedBiasReturn;
  int firstUpdateIndex;
  int lastUpdateIndex;
  public javax.swing.text.View(javax.swing.text.Element);
  public javax.swing.text.View getParent();
  public boolean isVisible();
  public abstract float getPreferredSpan(int);
  public float getMinimumSpan(int);
  public float getMaximumSpan(int);
  public void preferenceChanged(javax.swing.text.View, boolean, boolean);
  public float getAlignment(int);
  public abstract void paint(java.awt.Graphics, java.awt.Shape);
  public void setParent(javax.swing.text.View);
  public int getViewCount();
  public javax.swing.text.View getView(int);
  public void removeAll();
  public void remove(int);
  public void insert(int, javax.swing.text.View);
  public void append(javax.swing.text.View);
  public void replace(int, int, javax.swing.text.View[]);
  public int getViewIndex(int, javax.swing.text.Position$Bias);
  public java.awt.Shape getChildAllocation(int, java.awt.Shape);
  public int getNextVisualPositionFrom(int, javax.swing.text.Position$Bias, java.awt.Shape, int, javax.swing.text.Position$Bias[]) throws javax.swing.text.BadLocationException;
  public abstract java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException;
  public java.awt.Shape modelToView(int, javax.swing.text.Position$Bias, int, javax.swing.text.Position$Bias, java.awt.Shape) throws javax.swing.text.BadLocationException;
  public abstract int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position$Bias[]);
  public void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory);
  public void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory);
  public void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory);
  public javax.swing.text.Document getDocument();
  public int getStartOffset();
  public int getEndOffset();
  public javax.swing.text.Element getElement();
  public java.awt.Graphics getGraphics();
  public javax.swing.text.AttributeSet getAttributes();
  public javax.swing.text.View breakView(int, int, float, float);
  public javax.swing.text.View createFragment(int, int);
  public int getBreakWeight(int, float, float);
  public int getResizeWeight(int);
  public void setSize(float, float);
  public java.awt.Container getContainer();
  public javax.swing.text.ViewFactory getViewFactory();
  public java.lang.String getToolTipText(float, float, java.awt.Shape);
  public int getViewIndex(float, float, java.awt.Shape);
  protected boolean updateChildren(javax.swing.event.DocumentEvent$ElementChange, javax.swing.event.DocumentEvent, javax.swing.text.ViewFactory);
  protected void forwardUpdate(javax.swing.event.DocumentEvent$ElementChange, javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory);
  void calculateUpdateIndexes(javax.swing.event.DocumentEvent);
  void updateAfterChange();
  protected void forwardUpdateToView(javax.swing.text.View, javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory);
  protected void updateLayout(javax.swing.event.DocumentEvent$ElementChange, javax.swing.event.DocumentEvent, java.awt.Shape);
  public java.awt.Shape modelToView(int, java.awt.Shape) throws javax.swing.text.BadLocationException;
  public int viewToModel(float, float, java.awt.Shape);
  static {};
}
