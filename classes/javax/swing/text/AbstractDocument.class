Compiled from "AbstractDocument.java"
public abstract class javax.swing.text.AbstractDocument implements javax.swing.text.Document,java.io.Serializable {
  protected javax.swing.event.EventListenerList listenerList;
  protected static final java.lang.String BAD_LOCATION;
  public static final java.lang.String ParagraphElementName;
  public static final java.lang.String ContentElementName;
  public static final java.lang.String SectionElementName;
  public static final java.lang.String BidiElementName;
  public static final java.lang.String ElementNameAttribute;
  static final java.lang.String I18NProperty;
  static final java.lang.Object MultiByteProperty;
  static final java.lang.String AsyncLoadPriority;
  protected javax.swing.text.AbstractDocument(javax.swing.text.AbstractDocument$Content);
  protected javax.swing.text.AbstractDocument(javax.swing.text.AbstractDocument$Content, javax.swing.text.AbstractDocument$AttributeContext);
  public java.util.Dictionary<java.lang.Object, java.lang.Object> getDocumentProperties();
  public void setDocumentProperties(java.util.Dictionary<java.lang.Object, java.lang.Object>);
  protected void fireInsertUpdate(javax.swing.event.DocumentEvent);
  protected void fireChangedUpdate(javax.swing.event.DocumentEvent);
  protected void fireRemoveUpdate(javax.swing.event.DocumentEvent);
  protected void fireUndoableEditUpdate(javax.swing.event.UndoableEditEvent);
  public <T extends java.util.EventListener> T[] getListeners(java.lang.Class<T>);
  public int getAsynchronousLoadPriority();
  public void setAsynchronousLoadPriority(int);
  public void setDocumentFilter(javax.swing.text.DocumentFilter);
  public javax.swing.text.DocumentFilter getDocumentFilter();
  public void render(java.lang.Runnable);
  public int getLength();
  public void addDocumentListener(javax.swing.event.DocumentListener);
  public void removeDocumentListener(javax.swing.event.DocumentListener);
  public javax.swing.event.DocumentListener[] getDocumentListeners();
  public void addUndoableEditListener(javax.swing.event.UndoableEditListener);
  public void removeUndoableEditListener(javax.swing.event.UndoableEditListener);
  public javax.swing.event.UndoableEditListener[] getUndoableEditListeners();
  public final java.lang.Object getProperty(java.lang.Object);
  public final void putProperty(java.lang.Object, java.lang.Object);
  public void remove(int, int) throws javax.swing.text.BadLocationException;
  void handleRemove(int, int) throws javax.swing.text.BadLocationException;
  public void replace(int, int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException;
  public void insertString(int, java.lang.String, javax.swing.text.AttributeSet) throws javax.swing.text.BadLocationException;
  public java.lang.String getText(int, int) throws javax.swing.text.BadLocationException;
  public void getText(int, int, javax.swing.text.Segment) throws javax.swing.text.BadLocationException;
  public synchronized javax.swing.text.Position createPosition(int) throws javax.swing.text.BadLocationException;
  public final javax.swing.text.Position getStartPosition();
  public final javax.swing.text.Position getEndPosition();
  public javax.swing.text.Element[] getRootElements();
  public abstract javax.swing.text.Element getDefaultRootElement();
  public javax.swing.text.Element getBidiRootElement();
  static boolean isLeftToRight(javax.swing.text.Document, int, int);
  public abstract javax.swing.text.Element getParagraphElement(int);
  protected final javax.swing.text.AbstractDocument$AttributeContext getAttributeContext();
  protected void insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent, javax.swing.text.AttributeSet);
  protected void removeUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  protected void postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  void updateBidi(javax.swing.text.AbstractDocument$DefaultDocumentEvent);
  public void dump(java.io.PrintStream);
  protected final javax.swing.text.AbstractDocument$Content getContent();
  protected javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int);
  protected javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet);
  protected final synchronized java.lang.Thread getCurrentWriter();
  protected final synchronized void writeLock();
  protected final synchronized void writeUnlock();
  public final synchronized void readLock();
  public final synchronized void readUnlock();
  static {};
}
