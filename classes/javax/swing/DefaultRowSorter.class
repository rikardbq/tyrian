Compiled from "DefaultRowSorter.java"
public abstract class javax.swing.DefaultRowSorter<M, I> extends javax.swing.RowSorter<M> {
  public javax.swing.DefaultRowSorter();
  protected final void setModelWrapper(javax.swing.DefaultRowSorter$ModelWrapper<M, I>);
  protected final javax.swing.DefaultRowSorter$ModelWrapper<M, I> getModelWrapper();
  public final M getModel();
  public void setSortable(int, boolean);
  public boolean isSortable(int);
  public void setSortKeys(java.util.List<? extends javax.swing.RowSorter$SortKey>);
  public java.util.List<? extends javax.swing.RowSorter$SortKey> getSortKeys();
  public void setMaxSortKeys(int);
  public int getMaxSortKeys();
  public void setSortsOnUpdates(boolean);
  public boolean getSortsOnUpdates();
  public void setRowFilter(javax.swing.RowFilter<? super M, ? super I>);
  public javax.swing.RowFilter<? super M, ? super I> getRowFilter();
  public void toggleSortOrder(int);
  public int convertRowIndexToView(int);
  public int convertRowIndexToModel(int);
  public void sort();
  protected boolean useToString(int);
  public void setComparator(int, java.util.Comparator<?>);
  public java.util.Comparator<?> getComparator(int);
  public int getViewRowCount();
  public int getModelRowCount();
  public void modelStructureChanged();
  public void allRowsChanged();
  public void rowsInserted(int, int);
  public void rowsDeleted(int, int);
  public void rowsUpdated(int, int);
  public void rowsUpdated(int, int, int);
  static {};
}
