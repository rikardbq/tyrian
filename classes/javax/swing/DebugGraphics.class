Compiled from "DebugGraphics.java"
public class javax.swing.DebugGraphics extends java.awt.Graphics {
  java.awt.Graphics graphics;
  java.awt.Image buffer;
  int debugOptions;
  int graphicsID;
  int xOffset;
  int yOffset;
  public static final int LOG_OPTION;
  public static final int FLASH_OPTION;
  public static final int BUFFERED_OPTION;
  public static final int NONE_OPTION;
  public javax.swing.DebugGraphics();
  public javax.swing.DebugGraphics(java.awt.Graphics, javax.swing.JComponent);
  public javax.swing.DebugGraphics(java.awt.Graphics);
  public java.awt.Graphics create();
  public java.awt.Graphics create(int, int, int, int);
  public static void setFlashColor(java.awt.Color);
  public static java.awt.Color flashColor();
  public static void setFlashTime(int);
  public static int flashTime();
  public static void setFlashCount(int);
  public static int flashCount();
  public static void setLogStream(java.io.PrintStream);
  public static java.io.PrintStream logStream();
  public void setFont(java.awt.Font);
  public java.awt.Font getFont();
  public void setColor(java.awt.Color);
  public java.awt.Color getColor();
  public java.awt.FontMetrics getFontMetrics();
  public java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public void translate(int, int);
  public void setPaintMode();
  public void setXORMode(java.awt.Color);
  public java.awt.Rectangle getClipBounds();
  public void clipRect(int, int, int, int);
  public void setClip(int, int, int, int);
  public java.awt.Shape getClip();
  public void setClip(java.awt.Shape);
  public void drawRect(int, int, int, int);
  public void fillRect(int, int, int, int);
  public void clearRect(int, int, int, int);
  public void drawRoundRect(int, int, int, int, int, int);
  public void fillRoundRect(int, int, int, int, int, int);
  public void drawLine(int, int, int, int);
  public void draw3DRect(int, int, int, int, boolean);
  public void fill3DRect(int, int, int, int, boolean);
  public void drawOval(int, int, int, int);
  public void fillOval(int, int, int, int);
  public void drawArc(int, int, int, int, int, int);
  public void fillArc(int, int, int, int, int, int);
  public void drawPolyline(int[], int[], int);
  public void drawPolygon(int[], int[], int);
  public void fillPolygon(int[], int[], int);
  public void drawString(java.lang.String, int, int);
  public void drawString(java.text.AttributedCharacterIterator, int, int);
  public void drawBytes(byte[], int, int, int, int);
  public void drawChars(char[], int, int, int, int);
  public boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver);
  public boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver);
  static void loadImage(java.awt.Image);
  public void copyArea(int, int, int, int, int, int);
  final void sleep(int);
  public void dispose();
  public boolean isDrawingBuffer();
  java.lang.String toShortString();
  java.lang.String pointToString(int, int);
  public void setDebugOptions(int);
  public int getDebugOptions();
  static void setDebugOptions(javax.swing.JComponent, int);
  static int getDebugOptions(javax.swing.JComponent);
  static int shouldComponentDebug(javax.swing.JComponent);
  static int debugComponentCount();
  boolean debugLog();
  boolean debugFlash();
  boolean debugBuffered();
  static javax.swing.DebugGraphicsInfo info();
  static {};
}
