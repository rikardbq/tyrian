Compiled from "TransferHandler.java"
public class javax.swing.TransferHandler implements java.io.Serializable {
  public static final int NONE;
  public static final int COPY;
  public static final int MOVE;
  public static final int COPY_OR_MOVE;
  public static final int LINK;
  static final javax.swing.Action cutAction;
  static final javax.swing.Action copyAction;
  static final javax.swing.Action pasteAction;
  public static javax.swing.Action getCutAction();
  public static javax.swing.Action getCopyAction();
  public static javax.swing.Action getPasteAction();
  public javax.swing.TransferHandler(java.lang.String);
  protected javax.swing.TransferHandler();
  public void setDragImage(java.awt.Image);
  public java.awt.Image getDragImage();
  public void setDragImageOffset(java.awt.Point);
  public java.awt.Point getDragImageOffset();
  public void exportAsDrag(javax.swing.JComponent, java.awt.event.InputEvent, int);
  public void exportToClipboard(javax.swing.JComponent, java.awt.datatransfer.Clipboard, int) throws java.lang.IllegalStateException;
  public boolean importData(javax.swing.TransferHandler$TransferSupport);
  public boolean importData(javax.swing.JComponent, java.awt.datatransfer.Transferable);
  public boolean canImport(javax.swing.TransferHandler$TransferSupport);
  public boolean canImport(javax.swing.JComponent, java.awt.datatransfer.DataFlavor[]);
  public int getSourceActions(javax.swing.JComponent);
  public javax.swing.Icon getVisualRepresentation(java.awt.datatransfer.Transferable);
  protected java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent);
  protected void exportDone(javax.swing.JComponent, java.awt.datatransfer.Transferable, int);
  static {};
}
