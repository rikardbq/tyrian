Compiled from "SynthLookAndFeel.java"
public class javax.swing.plaf.synth.SynthLookAndFeel extends javax.swing.plaf.basic.BasicLookAndFeel {
  static final java.awt.Insets EMPTY_UIRESOURCE_INSETS;
  static javax.swing.plaf.ComponentUI getSelectedUI();
  static void setSelectedUI(javax.swing.plaf.ComponentUI, boolean, boolean, boolean, boolean);
  static int getSelectedUIState();
  static void resetSelectedUI();
  public static void setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory);
  public static javax.swing.plaf.synth.SynthStyleFactory getStyleFactory();
  static int getComponentState(java.awt.Component);
  public static javax.swing.plaf.synth.SynthStyle getStyle(javax.swing.JComponent, javax.swing.plaf.synth.Region);
  static boolean shouldUpdateStyle(java.beans.PropertyChangeEvent);
  static javax.swing.plaf.synth.SynthStyle updateStyle(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthUI);
  public static void updateStyles(java.awt.Component);
  public static javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent);
  static java.awt.Insets getPaintingInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets);
  static void update(javax.swing.plaf.synth.SynthContext, java.awt.Graphics);
  static void updateSubregion(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle);
  static boolean isLeftToRight(java.awt.Component);
  static java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class<?>);
  public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent);
  public javax.swing.plaf.synth.SynthLookAndFeel();
  public void load(java.io.InputStream, java.lang.Class<?>) throws java.text.ParseException;
  public void load(java.net.URL) throws java.text.ParseException, java.io.IOException;
  public void initialize();
  public void uninitialize();
  public javax.swing.UIDefaults getDefaults();
  public boolean isSupportedLookAndFeel();
  public boolean isNativeLookAndFeel();
  public java.lang.String getDescription();
  public java.lang.String getName();
  public java.lang.String getID();
  public boolean shouldUpdateStyleOnAncestorChanged();
  protected boolean shouldUpdateStyleOnEvent(java.beans.PropertyChangeEvent);
  static {};
}
