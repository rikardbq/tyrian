Compiled from "SynthParser.java"
class javax.swing.plaf.synth.SynthParser extends org.xml.sax.helpers.DefaultHandler {
  static final boolean $assertionsDisabled;
  javax.swing.plaf.synth.SynthParser();
  public void parse(java.io.InputStream, javax.swing.plaf.synth.DefaultSynthStyleFactory, java.net.URL, java.lang.Class<?>, java.util.Map<java.lang.String, java.lang.Object>) throws java.text.ParseException, java.lang.IllegalArgumentException;
  public org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException;
  public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void setDocumentLocator(org.xml.sax.Locator);
  public void startDocument() throws org.xml.sax.SAXException;
  public void endDocument() throws org.xml.sax.SAXException;
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void characters(char[], int, int) throws org.xml.sax.SAXException;
  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  static {};
}
