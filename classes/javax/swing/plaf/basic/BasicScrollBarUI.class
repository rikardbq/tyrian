Compiled from "BasicScrollBarUI.java"
public class javax.swing.plaf.basic.BasicScrollBarUI extends javax.swing.plaf.ScrollBarUI implements java.awt.LayoutManager,javax.swing.SwingConstants {
  protected java.awt.Dimension minimumThumbSize;
  protected java.awt.Dimension maximumThumbSize;
  protected java.awt.Color thumbHighlightColor;
  protected java.awt.Color thumbLightShadowColor;
  protected java.awt.Color thumbDarkShadowColor;
  protected java.awt.Color thumbColor;
  protected java.awt.Color trackColor;
  protected java.awt.Color trackHighlightColor;
  protected javax.swing.JScrollBar scrollbar;
  protected javax.swing.JButton incrButton;
  protected javax.swing.JButton decrButton;
  protected boolean isDragging;
  protected javax.swing.plaf.basic.BasicScrollBarUI$TrackListener trackListener;
  protected javax.swing.plaf.basic.BasicScrollBarUI$ArrowButtonListener buttonListener;
  protected javax.swing.plaf.basic.BasicScrollBarUI$ModelListener modelListener;
  protected java.awt.Rectangle thumbRect;
  protected java.awt.Rectangle trackRect;
  protected int trackHighlight;
  protected static final int NO_HIGHLIGHT;
  protected static final int DECREASE_HIGHLIGHT;
  protected static final int INCREASE_HIGHLIGHT;
  protected javax.swing.plaf.basic.BasicScrollBarUI$ScrollListener scrollListener;
  protected java.beans.PropertyChangeListener propertyChangeListener;
  protected javax.swing.Timer scrollTimer;
  protected int scrollBarWidth;
  protected int incrGap;
  protected int decrGap;
  static final boolean $assertionsDisabled;
  public javax.swing.plaf.basic.BasicScrollBarUI();
  static void loadActionMap(javax.swing.plaf.basic.LazyActionMap);
  public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent);
  protected void configureScrollBarColors();
  public void installUI(javax.swing.JComponent);
  public void uninstallUI(javax.swing.JComponent);
  protected void installDefaults();
  protected void installComponents();
  protected void uninstallComponents();
  protected void installListeners();
  protected void installKeyboardActions();
  protected void uninstallKeyboardActions();
  protected void uninstallListeners();
  protected void uninstallDefaults();
  protected javax.swing.plaf.basic.BasicScrollBarUI$TrackListener createTrackListener();
  protected javax.swing.plaf.basic.BasicScrollBarUI$ArrowButtonListener createArrowButtonListener();
  protected javax.swing.plaf.basic.BasicScrollBarUI$ModelListener createModelListener();
  protected javax.swing.plaf.basic.BasicScrollBarUI$ScrollListener createScrollListener();
  protected java.beans.PropertyChangeListener createPropertyChangeListener();
  protected void setThumbRollover(boolean);
  public boolean isThumbRollover();
  public void paint(java.awt.Graphics, javax.swing.JComponent);
  public java.awt.Dimension getPreferredSize(javax.swing.JComponent);
  public java.awt.Dimension getMaximumSize(javax.swing.JComponent);
  protected javax.swing.JButton createDecreaseButton(int);
  protected javax.swing.JButton createIncreaseButton(int);
  protected void paintDecreaseHighlight(java.awt.Graphics);
  protected void paintIncreaseHighlight(java.awt.Graphics);
  protected void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle);
  protected void paintThumb(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle);
  protected java.awt.Dimension getMinimumThumbSize();
  protected java.awt.Dimension getMaximumThumbSize();
  public void addLayoutComponent(java.lang.String, java.awt.Component);
  public void removeLayoutComponent(java.awt.Component);
  public java.awt.Dimension preferredLayoutSize(java.awt.Container);
  public java.awt.Dimension minimumLayoutSize(java.awt.Container);
  protected void layoutVScrollbar(javax.swing.JScrollBar);
  protected void layoutHScrollbar(javax.swing.JScrollBar);
  public void layoutContainer(java.awt.Container);
  protected void setThumbBounds(int, int, int, int);
  protected java.awt.Rectangle getThumbBounds();
  protected java.awt.Rectangle getTrackBounds();
  static void scrollByBlock(javax.swing.JScrollBar, int);
  protected void scrollByBlock(int);
  static void scrollByUnits(javax.swing.JScrollBar, int, int, boolean);
  protected void scrollByUnit(int);
  public boolean getSupportsAbsolutePositioning();
  static {};
}
