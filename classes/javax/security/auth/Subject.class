Compiled from "Subject.java"
public final class javax.security.auth.Subject implements java.io.Serializable {
  java.util.Set<java.security.Principal> principals;
  transient java.util.Set<java.lang.Object> pubCredentials;
  transient java.util.Set<java.lang.Object> privCredentials;
  public javax.security.auth.Subject();
  public javax.security.auth.Subject(boolean, java.util.Set<? extends java.security.Principal>, java.util.Set<?>, java.util.Set<?>);
  public void setReadOnly();
  public boolean isReadOnly();
  public static javax.security.auth.Subject getSubject(java.security.AccessControlContext);
  public static <T> T doAs(javax.security.auth.Subject, java.security.PrivilegedAction<T>);
  public static <T> T doAs(javax.security.auth.Subject, java.security.PrivilegedExceptionAction<T>) throws java.security.PrivilegedActionException;
  public static <T> T doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedAction<T>, java.security.AccessControlContext);
  public static <T> T doAsPrivileged(javax.security.auth.Subject, java.security.PrivilegedExceptionAction<T>, java.security.AccessControlContext) throws java.security.PrivilegedActionException;
  public java.util.Set<java.security.Principal> getPrincipals();
  public <T extends java.security.Principal> java.util.Set<T> getPrincipals(java.lang.Class<T>);
  public java.util.Set<java.lang.Object> getPublicCredentials();
  public java.util.Set<java.lang.Object> getPrivateCredentials();
  public <T> java.util.Set<T> getPublicCredentials(java.lang.Class<T>);
  public <T> java.util.Set<T> getPrivateCredentials(java.lang.Class<T>);
  public boolean equals(java.lang.Object);
  public java.lang.String toString();
  java.lang.String toString(boolean);
  public int hashCode();
  static {};
}
