Compiled from "AbstractProcessor.java"
public abstract class javax.annotation.processing.AbstractProcessor implements javax.annotation.processing.Processor {
  protected javax.annotation.processing.ProcessingEnvironment processingEnv;
  static final boolean $assertionsDisabled;
  protected javax.annotation.processing.AbstractProcessor();
  public java.util.Set<java.lang.String> getSupportedOptions();
  public java.util.Set<java.lang.String> getSupportedAnnotationTypes();
  public javax.lang.model.SourceVersion getSupportedSourceVersion();
  public synchronized void init(javax.annotation.processing.ProcessingEnvironment);
  public abstract boolean process(java.util.Set<? extends javax.lang.model.element.TypeElement>, javax.annotation.processing.RoundEnvironment);
  public java.lang.Iterable<? extends javax.annotation.processing.Completion> getCompletions(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.ExecutableElement, java.lang.String);
  protected synchronized boolean isInitialized();
  static {};
}
