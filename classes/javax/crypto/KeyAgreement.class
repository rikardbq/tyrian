Compiled from "KeyAgreement.java"
public class javax.crypto.KeyAgreement {
  protected javax.crypto.KeyAgreement(javax.crypto.KeyAgreementSpi, java.security.Provider, java.lang.String);
  public final java.lang.String getAlgorithm();
  public static final javax.crypto.KeyAgreement getInstance(java.lang.String) throws java.security.NoSuchAlgorithmException;
  public static final javax.crypto.KeyAgreement getInstance(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException;
  public static final javax.crypto.KeyAgreement getInstance(java.lang.String, java.security.Provider) throws java.security.NoSuchAlgorithmException;
  void chooseFirstProvider();
  public final java.security.Provider getProvider();
  public final void init(java.security.Key) throws java.security.InvalidKeyException;
  public final void init(java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException;
  public final void init(java.security.Key, java.security.spec.AlgorithmParameterSpec) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
  public final void init(java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
  public final java.security.Key doPhase(java.security.Key, boolean) throws java.security.InvalidKeyException, java.lang.IllegalStateException;
  public final byte[] generateSecret() throws java.lang.IllegalStateException;
  public final int generateSecret(byte[], int) throws java.lang.IllegalStateException, javax.crypto.ShortBufferException;
  public final javax.crypto.SecretKey generateSecret(java.lang.String) throws java.lang.IllegalStateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException;
  static {};
}
