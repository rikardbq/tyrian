Compiled from "AudioSystem.java"
public class javax.sound.sampled.AudioSystem {
  public static final int NOT_SPECIFIED;
  public static javax.sound.sampled.Mixer$Info[] getMixerInfo();
  public static javax.sound.sampled.Mixer getMixer(javax.sound.sampled.Mixer$Info);
  public static javax.sound.sampled.Line$Info[] getSourceLineInfo(javax.sound.sampled.Line$Info);
  public static javax.sound.sampled.Line$Info[] getTargetLineInfo(javax.sound.sampled.Line$Info);
  public static boolean isLineSupported(javax.sound.sampled.Line$Info);
  public static javax.sound.sampled.Line getLine(javax.sound.sampled.Line$Info) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.Clip getClip() throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.Clip getClip(javax.sound.sampled.Mixer$Info) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.SourceDataLine getSourceDataLine(javax.sound.sampled.AudioFormat) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.SourceDataLine getSourceDataLine(javax.sound.sampled.AudioFormat, javax.sound.sampled.Mixer$Info) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.TargetDataLine getTargetDataLine(javax.sound.sampled.AudioFormat) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.TargetDataLine getTargetDataLine(javax.sound.sampled.AudioFormat, javax.sound.sampled.Mixer$Info) throws javax.sound.sampled.LineUnavailableException;
  public static javax.sound.sampled.AudioFormat$Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat$Encoding);
  public static javax.sound.sampled.AudioFormat$Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat);
  public static boolean isConversionSupported(javax.sound.sampled.AudioFormat$Encoding, javax.sound.sampled.AudioFormat);
  public static javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat$Encoding, javax.sound.sampled.AudioInputStream);
  public static javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat$Encoding, javax.sound.sampled.AudioFormat);
  public static boolean isConversionSupported(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioFormat);
  public static javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream);
  public static javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) throws javax.sound.sampled.UnsupportedAudioFileException, java.io.IOException;
  public static javax.sound.sampled.AudioFileFormat$Type[] getAudioFileTypes();
  public static boolean isFileTypeSupported(javax.sound.sampled.AudioFileFormat$Type);
  public static javax.sound.sampled.AudioFileFormat$Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream);
  public static boolean isFileTypeSupported(javax.sound.sampled.AudioFileFormat$Type, javax.sound.sampled.AudioInputStream);
  public static int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat$Type, java.io.OutputStream) throws java.io.IOException;
  public static int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat$Type, java.io.File) throws java.io.IOException;
}
