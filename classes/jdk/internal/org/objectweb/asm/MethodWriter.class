Compiled from "MethodWriter.java"
class jdk.internal.org.objectweb.asm.MethodWriter extends jdk.internal.org.objectweb.asm.MethodVisitor {
  static final int ACC_CONSTRUCTOR;
  static final int SAME_FRAME;
  static final int SAME_LOCALS_1_STACK_ITEM_FRAME;
  static final int RESERVED;
  static final int SAME_LOCALS_1_STACK_ITEM_FRAME_EXTENDED;
  static final int CHOP_FRAME;
  static final int SAME_FRAME_EXTENDED;
  static final int APPEND_FRAME;
  static final int FULL_FRAME;
  static final int FRAMES;
  static final int INSERTED_FRAMES;
  static final int MAXS;
  static final int NOTHING;
  final jdk.internal.org.objectweb.asm.ClassWriter cw;
  java.lang.String signature;
  int classReaderOffset;
  int classReaderLength;
  int exceptionCount;
  int[] exceptions;
  int frameCount;
  jdk.internal.org.objectweb.asm.MethodWriter(jdk.internal.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], int);
  public void visitParameter(java.lang.String, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault();
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean);
  public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute);
  public void visitCode();
  public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[]);
  public void visitInsn(int);
  public void visitIntInsn(int, int);
  public void visitVarInsn(int, int);
  public void visitTypeInsn(int, java.lang.String);
  public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String);
  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
  public void visitInvokeDynamicInsn(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object...);
  public void visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label);
  public void visitLabel(jdk.internal.org.objectweb.asm.Label);
  public void visitLdcInsn(java.lang.Object);
  public void visitIincInsn(int, int);
  public void visitTableSwitchInsn(int, int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label...);
  public void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label, int[], jdk.internal.org.objectweb.asm.Label[]);
  public void visitMultiANewArrayInsn(java.lang.String, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, java.lang.String);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.Label[], jdk.internal.org.objectweb.asm.Label[], int[], java.lang.String, boolean);
  public void visitLineNumber(int, jdk.internal.org.objectweb.asm.Label);
  public void visitMaxs(int, int);
  public void visitEnd();
  final int getSize();
  final void put(jdk.internal.org.objectweb.asm.ByteVector);
}
