Compiled from "MethodNode.java"
public class jdk.internal.org.objectweb.asm.tree.MethodNode extends jdk.internal.org.objectweb.asm.MethodVisitor {
  public int access;
  public java.lang.String name;
  public java.lang.String desc;
  public java.lang.String signature;
  public java.util.List<java.lang.String> exceptions;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.ParameterNode> parameters;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.AnnotationNode> visibleAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.AnnotationNode> invisibleAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode> visibleTypeAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.TypeAnnotationNode> invisibleTypeAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.Attribute> attrs;
  public java.lang.Object annotationDefault;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.AnnotationNode>[] visibleParameterAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.AnnotationNode>[] invisibleParameterAnnotations;
  public jdk.internal.org.objectweb.asm.tree.InsnList instructions;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.TryCatchBlockNode> tryCatchBlocks;
  public int maxStack;
  public int maxLocals;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.LocalVariableNode> localVariables;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.LocalVariableAnnotationNode> visibleLocalVariableAnnotations;
  public java.util.List<jdk.internal.org.objectweb.asm.tree.LocalVariableAnnotationNode> invisibleLocalVariableAnnotations;
  public jdk.internal.org.objectweb.asm.tree.MethodNode();
  public jdk.internal.org.objectweb.asm.tree.MethodNode(int);
  public jdk.internal.org.objectweb.asm.tree.MethodNode(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
  public jdk.internal.org.objectweb.asm.tree.MethodNode(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]);
  public void visitParameter(java.lang.String, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault();
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTypeAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean);
  public void visitAttribute(jdk.internal.org.objectweb.asm.Attribute);
  public void visitCode();
  public void visitFrame(int, int, java.lang.Object[], int, java.lang.Object[]);
  public void visitInsn(int);
  public void visitIntInsn(int, int);
  public void visitVarInsn(int, int);
  public void visitTypeInsn(int, java.lang.String);
  public void visitFieldInsn(int, java.lang.String, java.lang.String, java.lang.String);
  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String);
  public void visitMethodInsn(int, java.lang.String, java.lang.String, java.lang.String, boolean);
  public void visitInvokeDynamicInsn(java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Handle, java.lang.Object...);
  public void visitJumpInsn(int, jdk.internal.org.objectweb.asm.Label);
  public void visitLabel(jdk.internal.org.objectweb.asm.Label);
  public void visitLdcInsn(java.lang.Object);
  public void visitIincInsn(int, int);
  public void visitTableSwitchInsn(int, int, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label...);
  public void visitLookupSwitchInsn(jdk.internal.org.objectweb.asm.Label, int[], jdk.internal.org.objectweb.asm.Label[]);
  public void visitMultiANewArrayInsn(java.lang.String, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitInsnAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public void visitTryCatchBlock(jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, java.lang.String);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitTryCatchAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, java.lang.String, boolean);
  public void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, jdk.internal.org.objectweb.asm.Label, jdk.internal.org.objectweb.asm.Label, int);
  public jdk.internal.org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, jdk.internal.org.objectweb.asm.TypePath, jdk.internal.org.objectweb.asm.Label[], jdk.internal.org.objectweb.asm.Label[], int[], java.lang.String, boolean);
  public void visitLineNumber(int, jdk.internal.org.objectweb.asm.Label);
  public void visitMaxs(int, int);
  public void visitEnd();
  protected jdk.internal.org.objectweb.asm.tree.LabelNode getLabelNode(jdk.internal.org.objectweb.asm.Label);
  public void check(int);
  public void accept(jdk.internal.org.objectweb.asm.ClassVisitor);
  public void accept(jdk.internal.org.objectweb.asm.MethodVisitor);
}
