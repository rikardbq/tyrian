Compiled from "HttpClientImpl.java"
final class jdk.internal.net.http.HttpClientImpl extends java.net.http.HttpClient implements jdk.internal.net.http.common.OperationTrackers$Trackable {
  static final boolean DEBUGELAPSED;
  static final boolean DEBUGTIMEOUT;
  final jdk.internal.net.http.common.Logger debug;
  final jdk.internal.net.http.common.Logger debugelapsed;
  final jdk.internal.net.http.common.Logger debugtimeout;
  static final java.util.concurrent.atomic.AtomicLong CLIENT_IDS;
  static final boolean $assertionsDisabled;
  static jdk.internal.net.http.HttpClientFacade create(jdk.internal.net.http.HttpClientBuilderImpl);
  final jdk.internal.net.http.HttpClientFacade facade();
  final long reference();
  final long unreference();
  final long streamReference();
  final long streamUnreference();
  final long webSocketOpen();
  final long webSocketClose();
  final long referenceCount();
  public jdk.internal.net.http.common.OperationTrackers$Tracker getOperationsTracker();
  final boolean isReferenced();
  void registerEvent(jdk.internal.net.http.AsyncEvent) throws java.io.IOException;
  void eventUpdated(jdk.internal.net.http.AsyncEvent) throws java.nio.channels.ClosedChannelException;
  boolean isSelectorThread();
  jdk.internal.net.http.Http2ClientImpl client2();
  public <T> java.net.http.HttpResponse<T> send(java.net.http.HttpRequest, java.net.http.HttpResponse$BodyHandler<T>) throws java.io.IOException, java.lang.InterruptedException;
  public <T> java.util.concurrent.CompletableFuture<java.net.http.HttpResponse<T>> sendAsync(java.net.http.HttpRequest, java.net.http.HttpResponse$BodyHandler<T>);
  public <T> java.util.concurrent.CompletableFuture<java.net.http.HttpResponse<T>> sendAsync(java.net.http.HttpRequest, java.net.http.HttpResponse$BodyHandler<T>, java.net.http.HttpResponse$PushPromiseHandler<T>);
  final java.lang.String debugInterestOps(java.nio.channels.SelectableChannel);
  javax.net.ssl.SSLContext theSSLContext();
  public javax.net.ssl.SSLContext sslContext();
  public javax.net.ssl.SSLParameters sslParameters();
  public java.util.Optional<java.net.Authenticator> authenticator();
  final jdk.internal.net.http.HttpClientImpl$DelegatingExecutor theExecutor();
  public final java.util.Optional<java.util.concurrent.Executor> executor();
  jdk.internal.net.http.ConnectionPool connectionPool();
  public java.net.http.HttpClient$Redirect followRedirects();
  public java.util.Optional<java.net.CookieHandler> cookieHandler();
  public java.util.Optional<java.time.Duration> connectTimeout();
  public java.util.Optional<java.net.ProxySelector> proxy();
  java.net.ProxySelector proxySelector();
  public java.net.http.WebSocket$Builder newWebSocketBuilder();
  public java.net.http.HttpClient$Version version();
  java.lang.String dbgString();
  public java.lang.String toString();
  final java.util.LinkedList<jdk.internal.net.http.HeaderFilter> filterChain();
  synchronized void registerTimer(jdk.internal.net.http.TimeoutEvent);
  synchronized void cancelTimer(jdk.internal.net.http.TimeoutEvent);
  int getReceiveBufferSize();
  jdk.internal.net.http.common.BufferSupplier getSSLBufferSupplier();
  static {};
}
