Compiled from "PlainTunnelingConnection.java"
final class jdk.internal.net.http.PlainTunnelingConnection extends jdk.internal.net.http.HttpConnection {
  final jdk.internal.net.http.PlainHttpConnection delegate;
  final java.net.http.HttpHeaders proxyHeaders;
  final java.net.InetSocketAddress proxyAddr;
  static final boolean $assertionsDisabled;
  protected jdk.internal.net.http.PlainTunnelingConnection(java.net.InetSocketAddress, java.net.InetSocketAddress, jdk.internal.net.http.HttpClientImpl, java.net.http.HttpHeaders);
  public java.util.concurrent.CompletableFuture<java.lang.Void> connectAsync(jdk.internal.net.http.Exchange<?>);
  public java.util.concurrent.CompletableFuture<java.lang.Void> finishConnect();
  boolean isTunnel();
  jdk.internal.net.http.HttpConnection$HttpPublisher publisher();
  boolean connected();
  java.nio.channels.SocketChannel channel();
  jdk.internal.net.http.common.FlowTube getConnectionFlow();
  jdk.internal.net.http.ConnectionPool$CacheKey cacheKey();
  public void close();
  boolean isSecure();
  boolean isProxied();
  static {};
}
