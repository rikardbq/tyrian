Compiled from "MessageQueue.java"
public class jdk.internal.net.http.websocket.MessageQueue {
  static final boolean $assertionsDisabled;
  public jdk.internal.net.http.websocket.MessageQueue(int);
  protected static int effectiveCapacityOf(int);
  public <T> void addText(java.nio.CharBuffer, boolean, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<T>) throws java.io.IOException;
  public <T> void addBinary(java.nio.ByteBuffer, boolean, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<? super T>) throws java.io.IOException;
  public <T> void addPing(java.nio.ByteBuffer, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<? super T>) throws java.io.IOException;
  public <T> void addPong(java.nio.ByteBuffer, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<? super T>) throws java.io.IOException;
  public <T> void addPong(java.util.function.Supplier<? extends java.nio.ByteBuffer>, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<? super T>) throws java.io.IOException;
  public <T> void addClose(int, java.nio.CharBuffer, T, java.util.function.BiConsumer<? super T, ? super java.lang.Throwable>, java.util.concurrent.CompletableFuture<? super T>) throws java.io.IOException;
  public <R, E extends java.lang.Throwable> R peek(jdk.internal.net.http.websocket.MessageQueue$QueueCallback<R, E>) throws E;
  public boolean isEmpty();
  public void remove();
  static {};
}
