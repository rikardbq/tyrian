Compiled from "HttpRequestImpl.java"
public class jdk.internal.net.http.HttpRequestImpl extends java.net.http.HttpRequest implements jdk.internal.net.http.websocket.WebSocketRequest {
  final java.net.http.HttpRequest$BodyPublisher requestPublisher;
  final boolean secure;
  final boolean expectContinue;
  public static final java.lang.String USER_AGENT;
  static final boolean $assertionsDisabled;
  public jdk.internal.net.http.HttpRequestImpl(jdk.internal.net.http.HttpRequestBuilderImpl);
  public jdk.internal.net.http.HttpRequestImpl(java.net.http.HttpRequest, java.net.ProxySelector);
  public static jdk.internal.net.http.HttpRequestImpl newInstanceForRedirection(java.net.URI, java.lang.String, jdk.internal.net.http.HttpRequestImpl);
  public static jdk.internal.net.http.HttpRequestImpl newInstanceForAuthentication(jdk.internal.net.http.HttpRequestImpl);
  jdk.internal.net.http.HttpRequestImpl(java.lang.String, java.net.InetSocketAddress, java.net.http.HttpHeaders);
  final boolean isConnect();
  static jdk.internal.net.http.HttpRequestImpl createPushRequest(jdk.internal.net.http.HttpRequestImpl, java.net.http.HttpHeaders) throws java.io.IOException;
  public java.lang.String toString();
  public java.net.http.HttpHeaders headers();
  java.net.InetSocketAddress authority();
  void setH2Upgrade(jdk.internal.net.http.Http2ClientImpl);
  public boolean expectContinue();
  java.net.InetSocketAddress proxy();
  boolean secure();
  public void setProxy(java.net.Proxy);
  public void isWebSocket(boolean);
  boolean isWebSocket();
  public java.util.Optional<java.net.http.HttpRequest$BodyPublisher> bodyPublisher();
  public java.lang.String method();
  public java.net.URI uri();
  public java.util.Optional<java.time.Duration> timeout();
  java.net.http.HttpHeaders getUserHeaders();
  jdk.internal.net.http.common.HttpHeadersBuilder getSystemHeadersBuilder();
  public java.util.Optional<java.net.http.HttpClient$Version> version();
  void addSystemHeader(java.lang.String, java.lang.String);
  public void setSystemHeader(java.lang.String, java.lang.String);
  java.net.InetSocketAddress getAddress();
  static {};
}
