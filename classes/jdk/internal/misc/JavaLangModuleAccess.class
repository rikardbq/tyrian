Compiled from "JavaLangModuleAccess.java"
public interface jdk.internal.misc.JavaLangModuleAccess {
  public abstract java.lang.module.ModuleDescriptor$Builder newModuleBuilder(java.lang.String, boolean, java.util.Set<java.lang.module.ModuleDescriptor$Modifier>);
  public abstract java.util.Set<java.lang.String> packages(java.lang.module.ModuleDescriptor$Builder);
  public abstract void requires(java.lang.module.ModuleDescriptor$Builder, java.util.Set<java.lang.module.ModuleDescriptor$Requires$Modifier>, java.lang.String, java.lang.String);
  public abstract java.lang.module.ModuleDescriptor$Requires newRequires(java.util.Set<java.lang.module.ModuleDescriptor$Requires$Modifier>, java.lang.String, java.lang.module.ModuleDescriptor$Version);
  public abstract java.lang.module.ModuleDescriptor$Exports newExports(java.util.Set<java.lang.module.ModuleDescriptor$Exports$Modifier>, java.lang.String);
  public abstract java.lang.module.ModuleDescriptor$Exports newExports(java.util.Set<java.lang.module.ModuleDescriptor$Exports$Modifier>, java.lang.String, java.util.Set<java.lang.String>);
  public abstract java.lang.module.ModuleDescriptor$Opens newOpens(java.util.Set<java.lang.module.ModuleDescriptor$Opens$Modifier>, java.lang.String);
  public abstract java.lang.module.ModuleDescriptor$Opens newOpens(java.util.Set<java.lang.module.ModuleDescriptor$Opens$Modifier>, java.lang.String, java.util.Set<java.lang.String>);
  public abstract java.lang.module.ModuleDescriptor$Provides newProvides(java.lang.String, java.util.List<java.lang.String>);
  public abstract java.lang.module.ModuleDescriptor newModuleDescriptor(java.lang.String, java.lang.module.ModuleDescriptor$Version, java.util.Set<java.lang.module.ModuleDescriptor$Modifier>, java.util.Set<java.lang.module.ModuleDescriptor$Requires>, java.util.Set<java.lang.module.ModuleDescriptor$Exports>, java.util.Set<java.lang.module.ModuleDescriptor$Opens>, java.util.Set<java.lang.String>, java.util.Set<java.lang.module.ModuleDescriptor$Provides>, java.util.Set<java.lang.String>, java.lang.String, int);
  public abstract java.lang.module.Configuration resolveAndBind(java.lang.module.ModuleFinder, java.util.Collection<java.lang.String>, java.io.PrintStream);
  public abstract java.lang.module.Configuration newConfiguration(java.lang.module.ModuleFinder, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);
}
