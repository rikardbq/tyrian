Compiled from "AbstractLoggerWrapper.java"
abstract class jdk.internal.logger.AbstractLoggerWrapper<L extends java.lang.System$Logger> implements java.lang.System$Logger, sun.util.logging.PlatformLogger$Bridge, sun.util.logging.PlatformLogger$ConfigurableBridge {
  jdk.internal.logger.AbstractLoggerWrapper();
  abstract L wrapped();
  abstract sun.util.logging.PlatformLogger$Bridge platformProxy();
  L getWrapped();
  public final java.lang.String getName();
  public boolean isLoggable(java.lang.System$Logger$Level);
  public void log(java.lang.System$Logger$Level, java.lang.String);
  public void log(java.lang.System$Logger$Level, java.util.function.Supplier<java.lang.String>);
  public void log(java.lang.System$Logger$Level, java.lang.Object);
  public void log(java.lang.System$Logger$Level, java.lang.String, java.lang.Throwable);
  public void log(java.lang.System$Logger$Level, java.util.function.Supplier<java.lang.String>, java.lang.Throwable);
  public void log(java.lang.System$Logger$Level, java.lang.String, java.lang.Object...);
  public void log(java.lang.System$Logger$Level, java.util.ResourceBundle, java.lang.String, java.lang.Throwable);
  public void log(java.lang.System$Logger$Level, java.util.ResourceBundle, java.lang.String, java.lang.Object...);
  public boolean isLoggable(sun.util.logging.PlatformLogger$Level);
  public boolean isEnabled();
  public void log(sun.util.logging.PlatformLogger$Level, java.lang.String);
  public void log(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.Throwable);
  public void log(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.Object...);
  public void log(sun.util.logging.PlatformLogger$Level, java.util.function.Supplier<java.lang.String>);
  public void log(sun.util.logging.PlatformLogger$Level, java.lang.Throwable, java.util.function.Supplier<java.lang.String>);
  public void logp(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.lang.String);
  public void logp(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.util.function.Supplier<java.lang.String>);
  public void logp(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object...);
  public void logp(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
  public void logp(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.lang.Throwable, java.util.function.Supplier<java.lang.String>);
  public void logrb(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...);
  public void logrb(sun.util.logging.PlatformLogger$Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Throwable);
  public void logrb(sun.util.logging.PlatformLogger$Level, java.util.ResourceBundle, java.lang.String, java.lang.Throwable);
  public void logrb(sun.util.logging.PlatformLogger$Level, java.util.ResourceBundle, java.lang.String, java.lang.Object...);
  public sun.util.logging.PlatformLogger$ConfigurableBridge$LoggerConfiguration getLoggerConfiguration();
}
