Compiled from "ImageReader.java"
public final class jdk.internal.jimage.ImageReader implements java.lang.AutoCloseable {
  public static jdk.internal.jimage.ImageReader open(java.nio.file.Path, java.nio.ByteOrder) throws java.io.IOException;
  public static jdk.internal.jimage.ImageReader open(java.nio.file.Path) throws java.io.IOException;
  public void close() throws java.io.IOException;
  public jdk.internal.jimage.ImageReader$Directory getRootDirectory() throws java.io.IOException;
  public jdk.internal.jimage.ImageReader$Node findNode(java.lang.String) throws java.io.IOException;
  public byte[] getResource(jdk.internal.jimage.ImageReader$Node) throws java.io.IOException;
  public byte[] getResource(jdk.internal.jimage.ImageReader$Resource) throws java.io.IOException;
  public jdk.internal.jimage.ImageHeader getHeader();
  public static void releaseByteBuffer(java.nio.ByteBuffer);
  public java.lang.String getName();
  public java.nio.ByteOrder getByteOrder();
  public java.nio.file.Path getImagePath();
  public jdk.internal.jimage.ImageStringsReader getStrings();
  public jdk.internal.jimage.ImageLocation findLocation(java.lang.String, java.lang.String);
  public jdk.internal.jimage.ImageLocation findLocation(java.lang.String);
  public java.lang.String[] getEntryNames();
  public java.lang.String[] getModuleNames();
  public long[] getAttributes(int);
  public java.lang.String getString(int);
  public byte[] getResource(java.lang.String);
  public byte[] getResource(jdk.internal.jimage.ImageLocation);
  public java.nio.ByteBuffer getResourceBuffer(jdk.internal.jimage.ImageLocation);
  public java.io.InputStream getResourceStream(jdk.internal.jimage.ImageLocation);
}
