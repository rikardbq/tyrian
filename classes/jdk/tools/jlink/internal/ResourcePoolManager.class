Compiled from "ResourcePoolManager.java"
public class jdk.tools.jlink.internal.ResourcePoolManager {
  static jdk.internal.module.ModuleInfo$Attributes readModuleAttributes(jdk.tools.jlink.plugin.ResourcePoolModule);
  public static boolean isNamedPackageResource(java.lang.String);
  public jdk.tools.jlink.internal.ResourcePoolManager();
  public jdk.tools.jlink.internal.ResourcePoolManager(java.nio.ByteOrder);
  public jdk.tools.jlink.internal.ResourcePoolManager(java.nio.ByteOrder, jdk.tools.jlink.internal.StringTable);
  public jdk.tools.jlink.plugin.ResourcePool resourcePool();
  public jdk.tools.jlink.plugin.ResourcePoolBuilder resourcePoolBuilder();
  public jdk.tools.jlink.plugin.ResourcePoolModuleView moduleView();
  public void add(jdk.tools.jlink.plugin.ResourcePoolEntry);
  public java.util.Optional<jdk.tools.jlink.plugin.ResourcePoolModule> findModule(java.lang.String);
  public java.util.stream.Stream<jdk.tools.jlink.plugin.ResourcePoolModule> modules();
  public int moduleCount();
  public java.util.stream.Stream<jdk.tools.jlink.plugin.ResourcePoolEntry> entries();
  public int entryCount();
  public java.util.Optional<jdk.tools.jlink.plugin.ResourcePoolEntry> findEntry(java.lang.String);
  public java.util.Optional<jdk.tools.jlink.plugin.ResourcePoolEntry> findEntryInContext(java.lang.String, jdk.tools.jlink.plugin.ResourcePoolEntry);
  public boolean contains(jdk.tools.jlink.plugin.ResourcePoolEntry);
  public boolean isEmpty();
  public java.nio.ByteOrder byteOrder();
  public jdk.tools.jlink.internal.StringTable getStringTable();
  public static jdk.tools.jlink.internal.ResourcePoolManager$CompressedModuleData newCompressedResource(jdk.tools.jlink.plugin.ResourcePoolEntry, java.nio.ByteBuffer, java.lang.String, java.lang.String, jdk.tools.jlink.internal.StringTable, java.nio.ByteOrder);
}
