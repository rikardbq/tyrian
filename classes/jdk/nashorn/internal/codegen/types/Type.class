Compiled from "Type.java"
public abstract class jdk.nashorn.internal.codegen.types.Type implements java.lang.Comparable<jdk.nashorn.internal.codegen.types.Type>, jdk.nashorn.internal.codegen.types.BytecodeOps, java.io.Serializable {
  protected static final int MIN_WEIGHT;
  protected static final int MAX_WEIGHT;
  public static final jdk.nashorn.internal.codegen.types.Type BOOLEAN;
  public static final jdk.nashorn.internal.codegen.types.BitwiseType INT;
  public static final jdk.nashorn.internal.codegen.types.NumericType NUMBER;
  public static final jdk.nashorn.internal.codegen.types.Type LONG;
  public static final jdk.nashorn.internal.codegen.types.Type STRING;
  public static final jdk.nashorn.internal.codegen.types.Type CHARSEQUENCE;
  public static final jdk.nashorn.internal.codegen.types.Type OBJECT;
  public static final jdk.nashorn.internal.codegen.types.Type UNDEFINED;
  public static final jdk.nashorn.internal.codegen.types.Type SCRIPT_OBJECT;
  public static final jdk.nashorn.internal.codegen.types.ArrayType INT_ARRAY;
  public static final jdk.nashorn.internal.codegen.types.ArrayType LONG_ARRAY;
  public static final jdk.nashorn.internal.codegen.types.ArrayType NUMBER_ARRAY;
  public static final jdk.nashorn.internal.codegen.types.ArrayType OBJECT_ARRAY;
  public static final jdk.nashorn.internal.codegen.types.Type THIS;
  public static final jdk.nashorn.internal.codegen.types.Type SCOPE;
  public static final jdk.nashorn.internal.codegen.types.Type UNKNOWN;
  public static final jdk.nashorn.internal.codegen.types.Type SLOT_2;
  static final boolean $assertionsDisabled;
  jdk.nashorn.internal.codegen.types.Type(java.lang.String, java.lang.Class<?>, int, int);
  public int getWeight();
  public java.lang.Class<?> getTypeClass();
  public jdk.nashorn.internal.codegen.types.Type nextWider();
  public java.lang.Class<?> getBoxedType();
  public abstract char getBytecodeStackType();
  public static java.lang.String getMethodDescriptor(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type...);
  public static java.lang.String getMethodDescriptor(java.lang.Class<?>, java.lang.Class<?>...);
  public static char getShortSignatureDescriptor(jdk.nashorn.internal.codegen.types.Type);
  public static jdk.nashorn.internal.codegen.types.Type getMethodReturnType(java.lang.String);
  public static jdk.nashorn.internal.codegen.types.Type[] getMethodArguments(java.lang.String);
  public static void writeTypeMap(java.util.Map<java.lang.Integer, jdk.nashorn.internal.codegen.types.Type>, java.io.DataOutput) throws java.io.IOException;
  public static java.util.Map<java.lang.Integer, jdk.nashorn.internal.codegen.types.Type> readTypeMap(java.io.DataInput) throws java.io.IOException;
  static jdk.internal.org.objectweb.asm.Type getInternalType(java.lang.String);
  static void invokestatic(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.nashorn.internal.codegen.CompilerConstants$Call);
  public java.lang.String getInternalName();
  public static java.lang.String getInternalName(java.lang.Class<?>);
  public boolean isUnknown();
  public boolean isJSPrimitive();
  public boolean isBoolean();
  public boolean isInteger();
  public boolean isLong();
  public boolean isNumber();
  public boolean isNumeric();
  public boolean isArray();
  public boolean isCategory2();
  public boolean isObject();
  public boolean isPrimitive();
  public boolean isString();
  public boolean isCharSequence();
  public boolean isEquivalentTo(jdk.nashorn.internal.codegen.types.Type);
  public static boolean isAssignableFrom(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public boolean isAssignableFrom(jdk.nashorn.internal.codegen.types.Type);
  public static boolean areEquivalent(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public int getSlots();
  public static jdk.nashorn.internal.codegen.types.Type widest(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public static java.lang.Class<?> widest(java.lang.Class<?>, java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.types.Type widestReturnType(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public static jdk.nashorn.internal.codegen.types.Type generic(jdk.nashorn.internal.codegen.types.Type);
  public static jdk.nashorn.internal.codegen.types.Type narrowest(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public boolean narrowerThan(jdk.nashorn.internal.codegen.types.Type);
  public boolean widerThan(jdk.nashorn.internal.codegen.types.Type);
  public static jdk.nashorn.internal.codegen.types.Type widest(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public static jdk.nashorn.internal.codegen.types.Type narrowest(jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type, jdk.nashorn.internal.codegen.types.Type);
  public jdk.nashorn.internal.codegen.types.Type narrowest(jdk.nashorn.internal.codegen.types.Type);
  public jdk.nashorn.internal.codegen.types.Type widest(jdk.nashorn.internal.codegen.types.Type);
  int weight();
  public java.lang.String getDescriptor();
  public java.lang.String getShortDescriptor();
  public java.lang.String toString();
  public static jdk.nashorn.internal.codegen.types.Type typeFor(java.lang.Class<?>);
  public int compareTo(jdk.nashorn.internal.codegen.types.Type);
  public jdk.nashorn.internal.codegen.types.Type dup(jdk.internal.org.objectweb.asm.MethodVisitor, int);
  public jdk.nashorn.internal.codegen.types.Type swap(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.nashorn.internal.codegen.types.Type);
  public jdk.nashorn.internal.codegen.types.Type pop(jdk.internal.org.objectweb.asm.MethodVisitor);
  public jdk.nashorn.internal.codegen.types.Type loadEmpty(jdk.internal.org.objectweb.asm.MethodVisitor);
  protected static void pop(jdk.internal.org.objectweb.asm.MethodVisitor, jdk.nashorn.internal.codegen.types.Type);
  protected final java.lang.Object readResolve();
  public int compareTo(java.lang.Object);
  static {};
}
