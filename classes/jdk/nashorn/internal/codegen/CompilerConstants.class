Compiled from "CompilerConstants.java"
public final class jdk.nashorn.internal.codegen.CompilerConstants extends java.lang.Enum<jdk.nashorn.internal.codegen.CompilerConstants> {
  public static final jdk.nashorn.internal.codegen.CompilerConstants __FILE__;
  public static final jdk.nashorn.internal.codegen.CompilerConstants __DIR__;
  public static final jdk.nashorn.internal.codegen.CompilerConstants __LINE__;
  public static final jdk.nashorn.internal.codegen.CompilerConstants INIT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants CLINIT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants EVAL;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SOURCE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants CONSTANTS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants STRICT_MODE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants DEFAULT_SCRIPT_NAME;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ANON_FUNCTION_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants NESTED_FUNCTION_SEPARATOR;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ID_FUNCTION_SEPARATOR;
  public static final jdk.nashorn.internal.codegen.CompilerConstants PROGRAM;
  public static final jdk.nashorn.internal.codegen.CompilerConstants CREATE_PROGRAM_FUNCTION;
  public static final jdk.nashorn.internal.codegen.CompilerConstants THIS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants THIS_DEBUGGER;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SCOPE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants RETURN;
  public static final jdk.nashorn.internal.codegen.CompilerConstants CALLEE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants VARARGS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ARGUMENTS_VAR;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ARGUMENTS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants EXPLODED_ARGUMENT_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ITERATOR_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SWITCH_TAG_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants EXCEPTION_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants QUICK_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants TEMP_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants LITERAL_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants REGEX_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants JAVA_THIS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants INIT_MAP;
  public static final jdk.nashorn.internal.codegen.CompilerConstants INIT_SCOPE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants INIT_ARGUMENTS;
  public static final jdk.nashorn.internal.codegen.CompilerConstants JS_OBJECT_DUAL_FIELD_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants JS_OBJECT_SINGLE_FIELD_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants ALLOCATE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SPLIT_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SPLIT_ARRAY_ARG;
  public static final jdk.nashorn.internal.codegen.CompilerConstants GET_STRING;
  public static final jdk.nashorn.internal.codegen.CompilerConstants GET_MAP;
  public static final jdk.nashorn.internal.codegen.CompilerConstants SET_MAP;
  public static final jdk.nashorn.internal.codegen.CompilerConstants GET_ARRAY_PREFIX;
  public static final jdk.nashorn.internal.codegen.CompilerConstants GET_ARRAY_SUFFIX;
  static final boolean $assertionsDisabled;
  public static jdk.nashorn.internal.codegen.CompilerConstants[] values();
  public static jdk.nashorn.internal.codegen.CompilerConstants valueOf(java.lang.String);
  public static boolean isCompilerConstant(java.lang.String);
  public final java.lang.String symbolName();
  public final java.lang.Class<?> type();
  public final int slot();
  public final java.lang.String descriptor();
  public static java.lang.String className(java.lang.Class<?>);
  public static java.lang.String methodDescriptor(java.lang.Class<?>, java.lang.Class<?>...);
  public static java.lang.String typeDescriptor(java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call constructorNoLookup(java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call constructorNoLookup(java.lang.String, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call constructorNoLookup(java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call specialCallNoLookup(java.lang.String, java.lang.String, java.lang.String);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call specialCallNoLookup(java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call staticCallNoLookup(java.lang.String, java.lang.String, java.lang.String);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call staticCallNoLookup(java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call virtualCallNoLookup(java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call interfaceCallNoLookup(java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess virtualField(java.lang.String, java.lang.String, java.lang.String);
  public static jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess virtualField(java.lang.Class<?>, java.lang.String, java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess staticField(java.lang.String, java.lang.String, java.lang.String);
  public static jdk.nashorn.internal.codegen.CompilerConstants$FieldAccess staticField(java.lang.Class<?>, java.lang.String, java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call staticCall(java.lang.invoke.MethodHandles$Lookup, java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call virtualCall(java.lang.invoke.MethodHandles$Lookup, java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static jdk.nashorn.internal.codegen.CompilerConstants$Call specialCall(java.lang.invoke.MethodHandles$Lookup, java.lang.Class<?>, java.lang.String, java.lang.Class<?>, java.lang.Class<?>...);
  public static boolean isInternalMethodName(java.lang.String);
  static {};
}
