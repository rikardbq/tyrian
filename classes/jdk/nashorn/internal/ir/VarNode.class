Compiled from "VarNode.java"
public final class jdk.nashorn.internal.ir.VarNode extends jdk.nashorn.internal.ir.Statement implements jdk.nashorn.internal.ir.Assignment<jdk.nashorn.internal.ir.IdentNode> {
  public static final int IS_LET;
  public static final int IS_CONST;
  public static final int IS_LAST_FUNCTION_DECLARATION;
  public jdk.nashorn.internal.ir.VarNode(int, long, int, jdk.nashorn.internal.ir.IdentNode, jdk.nashorn.internal.ir.Expression);
  public jdk.nashorn.internal.ir.VarNode(int, long, int, jdk.nashorn.internal.ir.IdentNode, jdk.nashorn.internal.ir.Expression, int);
  public jdk.nashorn.internal.ir.VarNode(int, long, int, int, jdk.nashorn.internal.ir.IdentNode, jdk.nashorn.internal.ir.Expression, int);
  public int getSourceOrder();
  public boolean isAssignment();
  public jdk.nashorn.internal.ir.IdentNode getAssignmentDest();
  public jdk.nashorn.internal.ir.VarNode setAssignmentDest(jdk.nashorn.internal.ir.IdentNode);
  public jdk.nashorn.internal.ir.Expression getAssignmentSource();
  public boolean isBlockScoped();
  public boolean isLet();
  public boolean isConst();
  public int getSymbolFlags();
  public boolean hasInit();
  public jdk.nashorn.internal.ir.Node accept(jdk.nashorn.internal.ir.visitor.NodeVisitor<? extends jdk.nashorn.internal.ir.LexicalContext>);
  public void toString(java.lang.StringBuilder, boolean);
  public jdk.nashorn.internal.ir.Expression getInit();
  public jdk.nashorn.internal.ir.VarNode setInit(jdk.nashorn.internal.ir.Expression);
  public jdk.nashorn.internal.ir.IdentNode getName();
  public jdk.nashorn.internal.ir.VarNode setName(jdk.nashorn.internal.ir.IdentNode);
  public boolean getFlag(int);
  public jdk.nashorn.internal.ir.VarNode setFlag(int);
  public boolean isFunctionDeclaration();
  public jdk.nashorn.internal.ir.Node setAssignmentDest(jdk.nashorn.internal.ir.Expression);
  public jdk.nashorn.internal.ir.Expression getAssignmentDest();
}
