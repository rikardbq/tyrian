Compiled from "NodeOperatorVisitor.java"
public abstract class jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor<T extends jdk.nashorn.internal.ir.LexicalContext> extends jdk.nashorn.internal.ir.visitor.NodeVisitor<T> {
  public jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor(T);
  public boolean enterUnaryNode(jdk.nashorn.internal.ir.UnaryNode);
  public final jdk.nashorn.internal.ir.Node leaveUnaryNode(jdk.nashorn.internal.ir.UnaryNode);
  public final boolean enterBinaryNode(jdk.nashorn.internal.ir.BinaryNode);
  public final jdk.nashorn.internal.ir.Node leaveBinaryNode(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterPOS(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leavePOS(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterBIT_NOT(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveBIT_NOT(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterDECINC(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveDECINC(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterDELETE(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveDELETE(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterNEW(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveNEW(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterNOT(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveNOT(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterNEG(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveNEG(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterTYPEOF(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveTYPEOF(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterVOID(jdk.nashorn.internal.ir.UnaryNode);
  public jdk.nashorn.internal.ir.Node leaveVOID(jdk.nashorn.internal.ir.UnaryNode);
  public boolean enterADD(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveADD(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterAND(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveAND(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_ADD(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_ADD(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_BIT_AND(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_BIT_AND(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_BIT_OR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_BIT_OR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_BIT_XOR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_BIT_XOR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_DIV(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_DIV(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_MOD(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_MOD(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_MUL(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_MUL(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_SAR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_SAR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_SHL(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_SHL(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_SHR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_SHR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterASSIGN_SUB(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveASSIGN_SUB(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterARROW(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveARROW(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterBIT_AND(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveBIT_AND(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterBIT_OR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveBIT_OR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterBIT_XOR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveBIT_XOR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterCOMMARIGHT(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveCOMMARIGHT(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterDIV(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveDIV(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterEQ(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveEQ(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterEQ_STRICT(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveEQ_STRICT(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterGE(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveGE(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterGT(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveGT(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterIN(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveIN(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterINSTANCEOF(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveINSTANCEOF(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterLE(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveLE(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterLT(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveLT(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterMOD(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveMOD(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterMUL(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveMUL(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterNE(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveNE(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterNE_STRICT(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveNE_STRICT(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterOR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveOR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterSAR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveSAR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterSHL(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveSHL(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterSHR(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveSHR(jdk.nashorn.internal.ir.BinaryNode);
  public boolean enterSUB(jdk.nashorn.internal.ir.BinaryNode);
  public jdk.nashorn.internal.ir.Node leaveSUB(jdk.nashorn.internal.ir.BinaryNode);
}
