Compiled from "JumpStatement.java"
public abstract class jdk.nashorn.internal.ir.JumpStatement extends jdk.nashorn.internal.ir.Statement implements jdk.nashorn.internal.ir.JoinPredecessor {
  protected jdk.nashorn.internal.ir.JumpStatement(int, long, int, java.lang.String);
  protected jdk.nashorn.internal.ir.JumpStatement(jdk.nashorn.internal.ir.JumpStatement, jdk.nashorn.internal.ir.LocalVariableConversion);
  public boolean hasGoto();
  public java.lang.String getLabelName();
  public void toString(java.lang.StringBuilder, boolean);
  abstract java.lang.String getStatementName();
  public abstract jdk.nashorn.internal.ir.BreakableNode getTarget(jdk.nashorn.internal.ir.LexicalContext);
  abstract jdk.nashorn.internal.codegen.Label getTargetLabel(jdk.nashorn.internal.ir.BreakableNode);
  public jdk.nashorn.internal.codegen.Label getTargetLabel(jdk.nashorn.internal.ir.LexicalContext);
  public jdk.nashorn.internal.ir.LexicalContextNode getPopScopeLimit(jdk.nashorn.internal.ir.LexicalContext);
  public jdk.nashorn.internal.ir.JumpStatement setLocalVariableConversion(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.LocalVariableConversion);
  abstract jdk.nashorn.internal.ir.JumpStatement createNewJumpStatement(jdk.nashorn.internal.ir.LocalVariableConversion);
  public jdk.nashorn.internal.ir.LocalVariableConversion getLocalVariableConversion();
  public jdk.nashorn.internal.ir.JoinPredecessor setLocalVariableConversion(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.LocalVariableConversion);
}
