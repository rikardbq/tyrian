Compiled from "IdentNode.java"
public final class jdk.nashorn.internal.ir.IdentNode extends jdk.nashorn.internal.ir.Expression implements jdk.nashorn.internal.ir.PropertyKey,jdk.nashorn.internal.ir.FunctionCall,jdk.nashorn.internal.ir.Optimistic,jdk.nashorn.internal.ir.JoinPredecessor {
  static final boolean $assertionsDisabled;
  public jdk.nashorn.internal.ir.IdentNode(long, int, java.lang.String);
  public jdk.nashorn.internal.ir.IdentNode(jdk.nashorn.internal.ir.IdentNode);
  public static jdk.nashorn.internal.ir.IdentNode createInternalIdentifier(jdk.nashorn.internal.ir.Symbol);
  public jdk.nashorn.internal.codegen.types.Type getType();
  public jdk.nashorn.internal.ir.Node accept(jdk.nashorn.internal.ir.visitor.NodeVisitor<? extends jdk.nashorn.internal.ir.LexicalContext>);
  public void toString(java.lang.StringBuilder, boolean);
  public java.lang.String getName();
  public java.lang.String getPropertyName();
  public boolean isLocal();
  public jdk.nashorn.internal.ir.Symbol getSymbol();
  public jdk.nashorn.internal.ir.IdentNode setSymbol(jdk.nashorn.internal.ir.Symbol);
  public boolean isPropertyName();
  public jdk.nashorn.internal.ir.IdentNode setIsPropertyName();
  public boolean isFutureStrictName();
  public jdk.nashorn.internal.ir.IdentNode setIsFutureStrictName();
  public boolean isInitializedHere();
  public jdk.nashorn.internal.ir.IdentNode setIsInitializedHere();
  public boolean isDead();
  public jdk.nashorn.internal.ir.IdentNode markDead();
  public boolean isDeclaredHere();
  public jdk.nashorn.internal.ir.IdentNode setIsDeclaredHere();
  public boolean isCompileTimePropertyName();
  public boolean isFunction();
  public jdk.nashorn.internal.ir.IdentNode setType(jdk.nashorn.internal.codegen.types.Type);
  public jdk.nashorn.internal.ir.IdentNode setIsFunction();
  public jdk.nashorn.internal.ir.IdentNode setIsNotFunction();
  public int getProgramPoint();
  public jdk.nashorn.internal.ir.Optimistic setProgramPoint(int);
  public jdk.nashorn.internal.codegen.types.Type getMostOptimisticType();
  public jdk.nashorn.internal.codegen.types.Type getMostPessimisticType();
  public boolean canBeOptimistic();
  public jdk.nashorn.internal.ir.JoinPredecessor setLocalVariableConversion(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.LocalVariableConversion);
  public boolean isInternal();
  public jdk.nashorn.internal.ir.LocalVariableConversion getLocalVariableConversion();
  public boolean isDirectSuper();
  public jdk.nashorn.internal.ir.IdentNode setIsDirectSuper();
  public boolean isRestParameter();
  public jdk.nashorn.internal.ir.IdentNode setIsRestParameter();
  public boolean isProtoPropertyName();
  public jdk.nashorn.internal.ir.IdentNode setIsProtoPropertyName();
  public boolean isDefaultParameter();
  public jdk.nashorn.internal.ir.IdentNode setIsDefaultParameter();
  public boolean isDestructuredParameter();
  public jdk.nashorn.internal.ir.IdentNode setIsDestructuredParameter();
  public boolean containsEscapes();
  public jdk.nashorn.internal.ir.Optimistic setType(jdk.nashorn.internal.codegen.types.Type);
  static {};
}
