Compiled from "Node.java"
public abstract class jdk.nashorn.internal.ir.Node implements java.lang.Cloneable,java.io.Serializable {
  public static final int NO_LINE_NUMBER;
  public static final long NO_TOKEN;
  public static final int NO_FINISH;
  protected final int start;
  protected final int finish;
  public jdk.nashorn.internal.ir.Node(long, int);
  protected jdk.nashorn.internal.ir.Node(long, int, int);
  protected jdk.nashorn.internal.ir.Node(jdk.nashorn.internal.ir.Node);
  protected jdk.nashorn.internal.ir.Node(jdk.nashorn.internal.ir.Node, int);
  public boolean isLoop();
  public boolean isAssignment();
  public jdk.nashorn.internal.ir.Node ensureUniqueLabels(jdk.nashorn.internal.ir.LexicalContext);
  public abstract jdk.nashorn.internal.ir.Node accept(jdk.nashorn.internal.ir.visitor.NodeVisitor<? extends jdk.nashorn.internal.ir.LexicalContext>);
  public final java.lang.String toString();
  public final java.lang.String toString(boolean);
  public void toString(java.lang.StringBuilder);
  public abstract void toString(java.lang.StringBuilder, boolean);
  public int getFinish();
  public int getStart();
  public int getSourceOrder();
  protected java.lang.Object clone();
  public final boolean equals(java.lang.Object);
  public final int hashCode();
  public int position();
  public int length();
  public jdk.nashorn.internal.parser.TokenType tokenType();
  public boolean isTokenType(jdk.nashorn.internal.parser.TokenType);
  public long getToken();
  static <T extends jdk.nashorn.internal.ir.Node> java.util.List<T> accept(jdk.nashorn.internal.ir.visitor.NodeVisitor<? extends jdk.nashorn.internal.ir.LexicalContext>, java.util.List<T>);
  static <T extends jdk.nashorn.internal.ir.LexicalContextNode> T replaceInLexicalContext(jdk.nashorn.internal.ir.LexicalContext, T, T);
}
