Compiled from "Symbol.java"
public final class jdk.nashorn.internal.ir.Symbol implements java.lang.Comparable<jdk.nashorn.internal.ir.Symbol>, java.lang.Cloneable, java.io.Serializable {
  public static final int IS_GLOBAL;
  public static final int IS_VAR;
  public static final int IS_PARAM;
  public static final int KINDMASK;
  public static final int IS_SCOPE;
  public static final int IS_THIS;
  public static final int IS_LET;
  public static final int IS_CONST;
  public static final int IS_INTERNAL;
  public static final int IS_FUNCTION_SELF;
  public static final int IS_FUNCTION_DECLARATION;
  public static final int IS_PROGRAM_LEVEL;
  public static final int HAS_SLOT;
  public static final int HAS_INT_VALUE;
  public static final int HAS_DOUBLE_VALUE;
  public static final int HAS_OBJECT_VALUE;
  public static final int HAS_BEEN_DECLARED;
  static final boolean $assertionsDisabled;
  public jdk.nashorn.internal.ir.Symbol(java.lang.String, int);
  public jdk.nashorn.internal.ir.Symbol clone();
  void print(java.io.PrintWriter);
  public boolean less(int);
  public jdk.nashorn.internal.ir.Symbol setNeedsSlot(boolean);
  public int slotCount();
  public java.lang.String toString();
  public int compareTo(jdk.nashorn.internal.ir.Symbol);
  public boolean hasSlot();
  public boolean isBytecodeLocal();
  public boolean isDead();
  public boolean isScope();
  public boolean isFunctionDeclaration();
  public jdk.nashorn.internal.ir.Symbol setIsScope();
  public void setIsFunctionDeclaration();
  public boolean isVar();
  public boolean isGlobal();
  public boolean isParam();
  public boolean isProgramLevel();
  public boolean isConst();
  public boolean isInternal();
  public boolean isThis();
  public boolean isLet();
  public boolean isFunctionSelf();
  public boolean isBlockScoped();
  public boolean hasBeenDeclared();
  public void setHasBeenDeclared();
  public int getFieldIndex();
  public jdk.nashorn.internal.ir.Symbol setFieldIndex(int);
  public int getFlags();
  public jdk.nashorn.internal.ir.Symbol setFlags(int);
  public jdk.nashorn.internal.ir.Symbol setFlag(int);
  public jdk.nashorn.internal.ir.Symbol clearFlag(int);
  public java.lang.String getName();
  public int getFirstSlot();
  public int getSlot(jdk.nashorn.internal.codegen.types.Type);
  public boolean hasSlotFor(jdk.nashorn.internal.codegen.types.Type);
  public void setHasSlotFor(jdk.nashorn.internal.codegen.types.Type);
  public void increaseUseCount();
  public int getUseCount();
  public jdk.nashorn.internal.ir.Symbol setFirstSlot(int);
  public static jdk.nashorn.internal.ir.Symbol setSymbolIsScope(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.Symbol);
  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
  public int compareTo(java.lang.Object);
  static {};
}
