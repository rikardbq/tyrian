Compiled from "WhileNode.java"
public final class jdk.nashorn.internal.ir.WhileNode extends jdk.nashorn.internal.ir.LoopNode {
  public jdk.nashorn.internal.ir.WhileNode(int, long, int, boolean, jdk.nashorn.internal.ir.JoinPredecessorExpression, jdk.nashorn.internal.ir.Block);
  public jdk.nashorn.internal.ir.Node ensureUniqueLabels(jdk.nashorn.internal.ir.LexicalContext);
  public boolean hasGoto();
  public jdk.nashorn.internal.ir.Node accept(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.visitor.NodeVisitor<? extends jdk.nashorn.internal.ir.LexicalContext>);
  public jdk.nashorn.internal.ir.WhileNode setTest(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.JoinPredecessorExpression);
  public jdk.nashorn.internal.ir.Block getBody();
  public jdk.nashorn.internal.ir.WhileNode setBody(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.Block);
  public jdk.nashorn.internal.ir.WhileNode setControlFlowEscapes(jdk.nashorn.internal.ir.LexicalContext, boolean);
  jdk.nashorn.internal.ir.JoinPredecessor setLocalVariableConversionChanged(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.LocalVariableConversion);
  public boolean isDoWhile();
  public void toString(java.lang.StringBuilder, boolean);
  public boolean mustEnter();
  public boolean hasPerIterationScope();
  public jdk.nashorn.internal.ir.LoopNode setControlFlowEscapes(jdk.nashorn.internal.ir.LexicalContext, boolean);
  public jdk.nashorn.internal.ir.LoopNode setTest(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.JoinPredecessorExpression);
  public jdk.nashorn.internal.ir.LoopNode setBody(jdk.nashorn.internal.ir.LexicalContext, jdk.nashorn.internal.ir.Block);
}
