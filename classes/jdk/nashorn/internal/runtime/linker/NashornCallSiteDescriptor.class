Compiled from "NashornCallSiteDescriptor.java"
public final class jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor extends jdk.dynalink.CallSiteDescriptor {
  public static final int GET_PROPERTY;
  public static final int GET_ELEMENT;
  public static final int GET_METHOD_PROPERTY;
  public static final int GET_METHOD_ELEMENT;
  public static final int SET_PROPERTY;
  public static final int SET_ELEMENT;
  public static final int REMOVE_PROPERTY;
  public static final int REMOVE_ELEMENT;
  public static final int CALL;
  public static final int NEW;
  public static final int CALLSITE_SCOPE;
  public static final int CALLSITE_STRICT;
  public static final int CALLSITE_FAST_SCOPE;
  public static final int CALLSITE_OPTIMISTIC;
  public static final int CALLSITE_APPLY_TO_CALL;
  public static final int CALLSITE_DECLARE;
  public static final int CALLSITE_PROFILE;
  public static final int CALLSITE_TRACE;
  public static final int CALLSITE_TRACE_MISSES;
  public static final int CALLSITE_TRACE_ENTEREXIT;
  public static final int CALLSITE_TRACE_VALUES;
  public static final int CALLSITE_PROGRAM_POINT_SHIFT;
  public static final int MAX_PROGRAM_POINT_VALUE;
  public static final int FLAGS_MASK;
  static final boolean $assertionsDisabled;
  public static void appendFlags(int, java.lang.StringBuilder);
  public static java.lang.String getOperationName(int);
  public static jdk.nashorn.internal.runtime.linker.NashornCallSiteDescriptor get(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, int);
  static java.lang.invoke.MethodHandles$Lookup getLookupInternal(jdk.dynalink.CallSiteDescriptor);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public static java.lang.String getOperand(jdk.dynalink.CallSiteDescriptor);
  public static boolean isMethodFirstOperation(jdk.dynalink.CallSiteDescriptor);
  public static boolean hasStandardNamespace(jdk.dynalink.CallSiteDescriptor);
  public static jdk.dynalink.Operation getBaseOperation(jdk.dynalink.CallSiteDescriptor);
  public static jdk.dynalink.StandardOperation getStandardOperation(jdk.dynalink.CallSiteDescriptor);
  public static boolean contains(jdk.dynalink.CallSiteDescriptor, jdk.dynalink.StandardOperation, jdk.dynalink.StandardNamespace);
  public static java.lang.String getFunctionErrorMessage(jdk.dynalink.CallSiteDescriptor, java.lang.Object);
  public static int getFlags(jdk.dynalink.CallSiteDescriptor);
  public static boolean isScope(jdk.dynalink.CallSiteDescriptor);
  public static boolean isFastScope(jdk.dynalink.CallSiteDescriptor);
  public static boolean isStrict(jdk.dynalink.CallSiteDescriptor);
  public static boolean isApplyToCall(jdk.dynalink.CallSiteDescriptor);
  public static boolean isOptimistic(jdk.dynalink.CallSiteDescriptor);
  public static boolean isDeclaration(jdk.dynalink.CallSiteDescriptor);
  public static boolean isStrictFlag(int);
  public static boolean isScopeFlag(int);
  public static boolean isDeclaration(int);
  public static int getProgramPoint(jdk.dynalink.CallSiteDescriptor);
  boolean isProfile();
  boolean isTrace();
  boolean isTraceMisses();
  boolean isTraceEnterExit();
  boolean isTraceObjects();
  boolean isOptimistic();
  public jdk.dynalink.CallSiteDescriptor changeMethodTypeInternal(java.lang.invoke.MethodType);
  protected jdk.dynalink.CallSiteDescriptor changeOperationInternal(jdk.dynalink.Operation);
  static {};
}
