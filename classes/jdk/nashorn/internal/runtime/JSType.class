Compiled from "JSType.java"
public final class jdk.nashorn.internal.runtime.JSType extends java.lang.Enum<jdk.nashorn.internal.runtime.JSType> {
  public static final jdk.nashorn.internal.runtime.JSType UNDEFINED;
  public static final jdk.nashorn.internal.runtime.JSType NULL;
  public static final jdk.nashorn.internal.runtime.JSType BOOLEAN;
  public static final jdk.nashorn.internal.runtime.JSType NUMBER;
  public static final jdk.nashorn.internal.runtime.JSType STRING;
  public static final jdk.nashorn.internal.runtime.JSType OBJECT;
  public static final jdk.nashorn.internal.runtime.JSType FUNCTION;
  public static final jdk.nashorn.internal.runtime.JSType SYMBOL;
  public static final long MAX_UINT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_BOOLEAN;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_BOOLEAN_D;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_BOOLEAN_I;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_INTEGER;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_LONG;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_LONG_D;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_NUMBER;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_NUMBER_OPTIMISTIC;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_STRING;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_INT32;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_INT32_L;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_INT32_OPTIMISTIC;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_INT32_D;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_UINT32_OPTIMISTIC;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_UINT32_DOUBLE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_UINT32;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_UINT32_D;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_STRING_D;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_PRIMITIVE_TO_STRING;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_PRIMITIVE_TO_CHARSEQUENCE;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call THROW_UNWARRANTED;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call ADD_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call SUB_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call MUL_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call DIV_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call DIV_ZERO;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call REM_ZERO;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call REM_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call DECREMENT_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call INCREMENT_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call NEGATE_EXACT;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_JAVA_ARRAY;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call TO_JAVA_ARRAY_WITH_LOOKUP;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call VOID_RETURN;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call IS_STRING;
  public static final jdk.nashorn.internal.codegen.CompilerConstants$Call IS_NUMBER;
  public static final int TYPE_UNDEFINED_INDEX;
  public static final int TYPE_INT_INDEX;
  public static final int TYPE_DOUBLE_INDEX;
  public static final int TYPE_OBJECT_INDEX;
  public static final java.util.List<java.lang.invoke.MethodHandle> CONVERT_OBJECT;
  public static final java.util.List<java.lang.invoke.MethodHandle> CONVERT_OBJECT_OPTIMISTIC;
  public static final int UNDEFINED_INT;
  public static final long UNDEFINED_LONG;
  public static final double UNDEFINED_DOUBLE;
  public static final java.util.List<java.lang.invoke.MethodHandle> GET_UNDEFINED;
  static final boolean $assertionsDisabled;
  public static jdk.nashorn.internal.runtime.JSType[] values();
  public static jdk.nashorn.internal.runtime.JSType valueOf(java.lang.String);
  public final java.lang.String typeName();
  public static jdk.nashorn.internal.runtime.JSType of(java.lang.Object);
  public static jdk.nashorn.internal.runtime.JSType ofNoFunction(java.lang.Object);
  public static void voidReturn();
  public static boolean isRepresentableAsInt(long);
  public static boolean isRepresentableAsInt(double);
  public static boolean isStrictlyRepresentableAsInt(double);
  public static boolean isRepresentableAsInt(java.lang.Object);
  public static boolean isRepresentableAsLong(double);
  public static boolean isRepresentableAsDouble(long);
  public static boolean isPrimitive(java.lang.Object);
  public static java.lang.Object toPrimitive(java.lang.Object);
  public static java.lang.Object toPrimitive(java.lang.Object, java.lang.Class<?>);
  public static java.lang.Object toPrimitive(jdk.nashorn.api.scripting.JSObject, java.lang.Class<?>);
  public static java.lang.String toPrimitiveToString(java.lang.Object);
  public static java.lang.CharSequence toPrimitiveToCharSequence(java.lang.Object);
  public static boolean toBoolean(double);
  public static boolean toBoolean(int);
  public static boolean toBoolean(java.lang.Object);
  public static java.lang.String toString(java.lang.Object);
  public static java.lang.Object toPropertyKey(java.lang.Object);
  public static java.lang.CharSequence toCharSequence(java.lang.Object);
  public static boolean isString(java.lang.Object);
  public static boolean isNumber(java.lang.Object);
  public static java.lang.String toString(int);
  public static java.lang.String toString(double);
  public static java.lang.String toString(double, int);
  public static double toNumber(java.lang.Object);
  public static double toNumberForEq(java.lang.Object);
  public static double toNumberForStrictEq(java.lang.Object);
  public static java.lang.Number toNarrowestNumber(long);
  public static double toNumber(java.lang.Boolean);
  public static double toNumber(jdk.nashorn.internal.runtime.ScriptObject);
  public static double toNumberOptimistic(java.lang.Object, int);
  public static double toNumberMaybeOptimistic(java.lang.Object, int);
  public static int digit(char, int);
  public static int digit(char, int, boolean);
  public static double toNumber(java.lang.String);
  public static int toInteger(java.lang.Object);
  public static long toLong(java.lang.Object);
  public static long toLong(double);
  public static int toInt32(java.lang.Object);
  public static int toInt32Optimistic(java.lang.Object, int);
  public static int toInt32MaybeOptimistic(java.lang.Object, int);
  public static int toInt32(long);
  public static int toInt32(double);
  public static long toUint32(java.lang.Object);
  public static long toUint32(double);
  public static long toUint32(int);
  public static int toUint32Optimistic(int, int);
  public static double toUint32Double(int);
  public static int toUint16(java.lang.Object);
  public static int toUint16(int);
  public static int toUint16(long);
  public static int toUint16(double);
  public static boolean isFinite(double);
  public static java.lang.Double toDouble(double);
  public static java.lang.Double toDouble(long);
  public static java.lang.Double toDouble(int);
  public static java.lang.Object toObject(boolean);
  public static java.lang.Object toObject(int);
  public static java.lang.Object toObject(long);
  public static java.lang.Object toObject(double);
  public static java.lang.Object toObject(java.lang.Object);
  public static java.lang.Object toScriptObject(java.lang.Object);
  public static java.lang.Object toScriptObject(jdk.nashorn.internal.objects.Global, java.lang.Object);
  public static java.lang.Object toJavaArray(java.lang.Object, java.lang.Class<?>);
  public static java.lang.Object toJavaArrayWithLookup(java.lang.Object, java.lang.Class<?>, jdk.dynalink.SecureLookupSupplier);
  public static java.lang.Object convertArray(java.lang.Object[], java.lang.Class<?>);
  public static boolean nullOrUndefined(java.lang.Object);
  static java.lang.String toStringImpl(java.lang.Object, boolean);
  static java.lang.String trimLeft(java.lang.String);
  public static int addExact(int, int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int subExact(int, int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int mulExact(int, int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int divExact(int, int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int divZero(int, int);
  public static int remZero(int, int);
  public static int remExact(int, int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int decrementExact(int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int incrementExact(int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int negateExact(int, int) throws jdk.nashorn.internal.runtime.UnwarrantedOptimismException;
  public static int getAccessorTypeIndex(jdk.nashorn.internal.codegen.types.Type);
  public static int getAccessorTypeIndex(java.lang.Class<?>);
  public static jdk.nashorn.internal.codegen.types.Type getAccessorType(int);
  public static int getNumberOfAccessorTypes();
  public static java.lang.invoke.MethodHandle unboxConstant(java.lang.Object);
  public static java.lang.Class<?> unboxedFieldType(java.lang.Object);
  static {};
}
