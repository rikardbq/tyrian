Compiled from "Compiler.java"
abstract class jdk.nashorn.internal.runtime.regexp.joni.Compiler implements jdk.nashorn.internal.runtime.regexp.joni.exception.ErrorMessages {
  protected final jdk.nashorn.internal.runtime.regexp.joni.Analyser analyser;
  protected final jdk.nashorn.internal.runtime.regexp.joni.Regex regex;
  protected jdk.nashorn.internal.runtime.regexp.joni.Compiler(jdk.nashorn.internal.runtime.regexp.joni.Analyser);
  final void compile();
  protected abstract void prepare();
  protected abstract void finish();
  protected abstract void compileAltNode(jdk.nashorn.internal.runtime.regexp.joni.ast.ConsAltNode);
  protected abstract void addCompileString(char[], int, int, boolean);
  protected abstract void compileCClassNode(jdk.nashorn.internal.runtime.regexp.joni.ast.CClassNode);
  protected abstract void compileAnyCharNode();
  protected abstract void compileBackrefNode(jdk.nashorn.internal.runtime.regexp.joni.ast.BackRefNode);
  protected abstract void compileNonCECQuantifierNode(jdk.nashorn.internal.runtime.regexp.joni.ast.QuantifierNode);
  protected abstract void compileOptionNode(jdk.nashorn.internal.runtime.regexp.joni.ast.EncloseNode);
  protected abstract void compileEncloseNode(jdk.nashorn.internal.runtime.regexp.joni.ast.EncloseNode);
  protected abstract void compileAnchorNode(jdk.nashorn.internal.runtime.regexp.joni.ast.AnchorNode);
  protected final void compileTree(jdk.nashorn.internal.runtime.regexp.joni.ast.Node);
  protected final void compileTreeNTimes(jdk.nashorn.internal.runtime.regexp.joni.ast.Node, int);
  protected void newSyntaxException(java.lang.String);
  protected void newInternalException(java.lang.String);
}
