Compiled from "Syntax.java"
public final class jdk.nashorn.internal.runtime.regexp.joni.Syntax implements jdk.nashorn.internal.runtime.regexp.joni.constants.SyntaxProperties {
  public final int options;
  public final jdk.nashorn.internal.runtime.regexp.joni.Syntax$MetaCharTable metaCharTable;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax RUBY;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax DEFAULT;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax ASIS;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax PosixBasic;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax PosixExtended;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax Emacs;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax Grep;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax GnuRegex;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax Java;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax Perl;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax PerlNG;
  public static final jdk.nashorn.internal.runtime.regexp.joni.Syntax JAVASCRIPT;
  public jdk.nashorn.internal.runtime.regexp.joni.Syntax(int, int, int, int, jdk.nashorn.internal.runtime.regexp.joni.Syntax$MetaCharTable);
  protected boolean isOp(int);
  public boolean opVariableMetaCharacters();
  public boolean opDotAnyChar();
  public boolean opAsteriskZeroInf();
  public boolean opEscAsteriskZeroInf();
  public boolean opPlusOneInf();
  public boolean opEscPlusOneInf();
  public boolean opQMarkZeroOne();
  public boolean opEscQMarkZeroOne();
  public boolean opBraceInterval();
  public boolean opEscBraceInterval();
  public boolean opVBarAlt();
  public boolean opEscVBarAlt();
  public boolean opLParenSubexp();
  public boolean opEscLParenSubexp();
  public boolean opEscAZBufAnchor();
  public boolean opEscCapitalGBeginAnchor();
  public boolean opDecimalBackref();
  public boolean opBracketCC();
  public boolean opEscWWord();
  public boolean opEscLtGtWordBeginEnd();
  public boolean opEscBWordBound();
  public boolean opEscSWhiteSpace();
  public boolean opEscDDigit();
  public boolean opLineAnchor();
  public boolean opPosixBracket();
  public boolean opQMarkNonGreedy();
  public boolean opEscControlChars();
  public boolean opEscCControl();
  public boolean opEscOctal3();
  public boolean opEscXHex2();
  public boolean opEscXBraceHex8();
  protected boolean isOp2(int);
  public boolean op2EscCapitalQQuote();
  public boolean op2QMarkGroupEffect();
  public boolean op2OptionPerl();
  public boolean op2OptionRuby();
  public boolean op2PlusPossessiveRepeat();
  public boolean op2PlusPossessiveInterval();
  public boolean op2CClassSetOp();
  public boolean op2QMarkLtNamedGroup();
  public boolean op2EscKNamedBackref();
  public boolean op2EscGSubexpCall();
  public boolean op2AtMarkCaptureHistory();
  public boolean op2EscCapitalCBarControl();
  public boolean op2EscCapitalMBarMeta();
  public boolean op2EscVVtab();
  public boolean op2EscUHex4();
  public boolean op2EscGnuBufAnchor();
  public boolean op2EscPBraceCharProperty();
  public boolean op2EscPBraceCircumflexNot();
  public boolean op2EscHXDigit();
  public boolean op2IneffectiveEscape();
  protected boolean isBehavior(int);
  public boolean contextIndepRepeatOps();
  public boolean contextInvalidRepeatOps();
  public boolean allowUnmatchedCloseSubexp();
  public boolean allowInvalidInterval();
  public boolean allowIntervalLowAbbrev();
  public boolean strictCheckBackref();
  public boolean differentLengthAltLookBehind();
  public boolean captureOnlyNamedGroup();
  public boolean allowMultiplexDefinitionName();
  public boolean fixedIntervalIsGreedyOnly();
  public boolean notNewlineInNegativeCC();
  public boolean backSlashEscapeInCC();
  public boolean allowEmptyRangeInCC();
  public boolean allowDoubleRangeOpInCC();
  public boolean warnCCOpNotEscaped();
  public boolean warnReduntantNestedRepeat();
  static {};
}
