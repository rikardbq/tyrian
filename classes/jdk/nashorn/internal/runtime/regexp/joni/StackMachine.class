Compiled from "StackMachine.java"
abstract class jdk.nashorn.internal.runtime.regexp.joni.StackMachine extends jdk.nashorn.internal.runtime.regexp.joni.Matcher implements jdk.nashorn.internal.runtime.regexp.joni.constants.StackType {
  protected static final int INVALID_INDEX;
  protected jdk.nashorn.internal.runtime.regexp.joni.StackEntry[] stack;
  protected int stk;
  protected final int[] repeatStk;
  protected final int memStartStk;
  protected final int memEndStk;
  static final java.lang.ThreadLocal<java.lang.ref.WeakReference<jdk.nashorn.internal.runtime.regexp.joni.StackEntry[]>> stacks;
  protected jdk.nashorn.internal.runtime.regexp.joni.StackMachine(jdk.nashorn.internal.runtime.regexp.joni.Regex, char[], int, int);
  protected final void init();
  protected final jdk.nashorn.internal.runtime.regexp.joni.StackEntry ensure1();
  protected final void pushType(int);
  protected final void pushEnsured(int, int);
  protected final void pushAlt(int, int, int);
  protected final void pushPos(int, int);
  protected final void pushPosNot(int, int, int);
  protected final void pushStopBT();
  protected final void pushLookBehindNot(int, int, int);
  protected final void pushRepeat(int, int);
  protected final void pushRepeatInc(int);
  protected final void pushMemStart(int, int);
  protected final void pushMemEnd(int, int);
  protected final void pushMemEndMark(int);
  protected final int getMemStart(int);
  protected final void pushNullCheckStart(int, int);
  protected final void pushNullCheckEnd(int);
  protected final void popOne();
  protected final jdk.nashorn.internal.runtime.regexp.joni.StackEntry pop();
  protected final void popTilPosNot();
  protected final void popTilLookBehindNot();
  protected final int posEnd();
  protected final void stopBtEnd();
  protected final int nullCheck(int, int);
  protected final int nullCheckMemSt(int, int);
  protected final int getRepeat(int);
  protected final int sreturn();
  static {};
}
