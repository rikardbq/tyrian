Compiled from "ArrayData.java"
public abstract class jdk.nashorn.internal.runtime.arrays.ArrayData {
  protected static final int CHUNK_SIZE;
  public static final jdk.nashorn.internal.runtime.arrays.ArrayData EMPTY_ARRAY;
  protected static final jdk.nashorn.internal.codegen.CompilerConstants$Call THROW_UNWARRANTED;
  static final boolean $assertionsDisabled;
  protected jdk.nashorn.internal.runtime.arrays.ArrayData(long);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData initialArray();
  protected static void throwUnwarranted(jdk.nashorn.internal.runtime.arrays.ArrayData, int, int);
  protected static int alignUp(int);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(long);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(java.lang.Object);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(int[]);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(double[]);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(java.lang.Object[]);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData allocate(java.nio.ByteBuffer);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData freeze(jdk.nashorn.internal.runtime.arrays.ArrayData);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData seal(jdk.nashorn.internal.runtime.arrays.ArrayData);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData preventExtension(jdk.nashorn.internal.runtime.arrays.ArrayData);
  public static jdk.nashorn.internal.runtime.arrays.ArrayData setIsLengthNotWritable(jdk.nashorn.internal.runtime.arrays.ArrayData);
  public final long length();
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData copy();
  public abstract java.lang.Object[] asObjectArray();
  public java.lang.Object asArrayOfType(java.lang.Class<?>);
  public void setLength(long);
  protected final long increaseLength();
  protected final long decreaseLength();
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData shiftLeft(int);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData shiftRight(int);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData ensure(long);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData shrink(long);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData set(int, java.lang.Object, boolean);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData set(int, int, boolean);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData set(int, double, boolean);
  public jdk.nashorn.internal.runtime.arrays.ArrayData setEmpty(int);
  public jdk.nashorn.internal.runtime.arrays.ArrayData setEmpty(long, long);
  public abstract int getInt(int);
  public jdk.nashorn.internal.codegen.types.Type getOptimisticType();
  public int getIntOptimistic(int, int);
  public abstract double getDouble(int);
  public double getDoubleOptimistic(int, int);
  public abstract java.lang.Object getObject(int);
  public abstract boolean has(int);
  public boolean canDelete(int, boolean);
  public boolean canDelete(long, boolean);
  public final jdk.nashorn.internal.runtime.arrays.ArrayData safeDelete(long, long, boolean);
  public jdk.nashorn.internal.runtime.PropertyDescriptor getDescriptor(jdk.nashorn.internal.objects.Global, int);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData delete(int);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData delete(long, long);
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData convert(java.lang.Class<?>);
  public jdk.nashorn.internal.runtime.arrays.ArrayData push(boolean, java.lang.Object...);
  public jdk.nashorn.internal.runtime.arrays.ArrayData push(boolean, java.lang.Object);
  public abstract java.lang.Object pop();
  public abstract jdk.nashorn.internal.runtime.arrays.ArrayData slice(long, long);
  public jdk.nashorn.internal.runtime.arrays.ArrayData fastSplice(int, int, int) throws java.lang.UnsupportedOperationException;
  static java.lang.Class<?> widestType(java.lang.Object...);
  protected java.util.List<java.lang.Long> computeIteratorKeys();
  public java.util.Iterator<java.lang.Long> indexIterator();
  public static int nextSize(int);
  long nextIndex(long);
  static java.lang.Object invoke(java.lang.invoke.MethodHandle, java.lang.Object);
  public jdk.dynalink.linker.GuardedInvocation findFastCallMethod(java.lang.Class<? extends jdk.nashorn.internal.runtime.arrays.ArrayData>, jdk.dynalink.CallSiteDescriptor, jdk.dynalink.linker.LinkRequest);
  public jdk.dynalink.linker.GuardedInvocation findFastGetIndexMethod(java.lang.Class<? extends jdk.nashorn.internal.runtime.arrays.ArrayData>, jdk.dynalink.CallSiteDescriptor, jdk.dynalink.linker.LinkRequest);
  public jdk.dynalink.linker.GuardedInvocation findFastSetIndexMethod(java.lang.Class<? extends jdk.nashorn.internal.runtime.arrays.ArrayData>, jdk.dynalink.CallSiteDescriptor, jdk.dynalink.linker.LinkRequest);
  static {};
}
