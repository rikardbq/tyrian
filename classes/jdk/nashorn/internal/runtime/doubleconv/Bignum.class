Compiled from "Bignum.java"
class jdk.nashorn.internal.runtime.doubleconv.Bignum {
  static final int kMaxSignificantBits;
  static final int kChunkSize;
  static final int kDoubleChunkSize;
  static final int kBigitSize;
  static final int kBigitMask;
  static final int kBigitCapacity;
  static final boolean $assertionsDisabled;
  jdk.nashorn.internal.runtime.doubleconv.Bignum();
  void times10();
  static boolean equal(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static boolean lessEqual(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static boolean less(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static boolean plusEqual(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static boolean plusLessEqual(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static boolean plusLess(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  int bigitLength();
  void assignUInt16(char);
  void assignUInt64(long);
  void assignBignum(jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static long readUInt64(java.lang.String, int, int);
  void assignDecimalString(java.lang.String);
  static int hexCharValue(char);
  void assignHexString(java.lang.String);
  void addUInt64(long);
  void addBignum(jdk.nashorn.internal.runtime.doubleconv.Bignum);
  void subtractBignum(jdk.nashorn.internal.runtime.doubleconv.Bignum);
  void shiftLeft(int);
  void multiplyByUInt32(int);
  void multiplyByUInt64(long);
  void multiplyByPowerOfTen(int);
  void square();
  void assignPowerUInt16(int, int);
  char divideModuloIntBignum(jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static int sizeInHexChars(int);
  static char hexCharOfValue(int);
  java.lang.String toHexString();
  int bigitOrZero(int);
  static int compare(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  static int plusCompare(jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum, jdk.nashorn.internal.runtime.doubleconv.Bignum);
  void clamp();
  boolean isClamped();
  void zero();
  void align(jdk.nashorn.internal.runtime.doubleconv.Bignum);
  void bigitsShiftLeft(int);
  void subtractTimes(jdk.nashorn.internal.runtime.doubleconv.Bignum, int);
  public java.lang.String toString();
  static {};
}
