Compiled from "NativeRegExp.java"
public final class jdk.nashorn.internal.objects.NativeRegExp extends jdk.nashorn.internal.runtime.ScriptObject {
  public java.lang.Object lastIndex;
  static final boolean $assertionsDisabled;
  jdk.nashorn.internal.objects.NativeRegExp(java.lang.String, java.lang.String, jdk.nashorn.internal.objects.Global, jdk.nashorn.internal.runtime.ScriptObject);
  jdk.nashorn.internal.objects.NativeRegExp(java.lang.String, java.lang.String, jdk.nashorn.internal.objects.Global);
  jdk.nashorn.internal.objects.NativeRegExp(java.lang.String, java.lang.String);
  jdk.nashorn.internal.objects.NativeRegExp(java.lang.String, jdk.nashorn.internal.objects.Global);
  jdk.nashorn.internal.objects.NativeRegExp(java.lang.String);
  jdk.nashorn.internal.objects.NativeRegExp(jdk.nashorn.internal.objects.NativeRegExp);
  public java.lang.String getClassName();
  public static jdk.nashorn.internal.objects.NativeRegExp constructor(boolean, java.lang.Object, java.lang.Object...);
  public static jdk.nashorn.internal.objects.NativeRegExp constructor(boolean, java.lang.Object);
  public static jdk.nashorn.internal.objects.NativeRegExp constructor(boolean, java.lang.Object, java.lang.Object);
  public static jdk.nashorn.internal.objects.NativeRegExp constructor(boolean, java.lang.Object, java.lang.Object, java.lang.Object);
  public static jdk.nashorn.internal.objects.NativeRegExp newRegExp(java.lang.Object, java.lang.Object);
  static jdk.nashorn.internal.objects.NativeRegExp flatRegExp(java.lang.String);
  public java.lang.String safeToString();
  public java.lang.String toString();
  public static jdk.nashorn.internal.runtime.ScriptObject compile(java.lang.Object, java.lang.Object, java.lang.Object);
  public static jdk.nashorn.internal.runtime.ScriptObject exec(java.lang.Object, java.lang.Object);
  public static boolean test(java.lang.Object, java.lang.Object);
  public static java.lang.String toString(java.lang.Object);
  public static java.lang.Object source(java.lang.Object);
  public static java.lang.Object global(java.lang.Object);
  public static java.lang.Object ignoreCase(java.lang.Object);
  public static java.lang.Object multiline(java.lang.Object);
  public static java.lang.Object getLastInput(java.lang.Object);
  public static java.lang.Object getLastMultiline(java.lang.Object);
  public static java.lang.Object getLastMatch(java.lang.Object);
  public static java.lang.Object getLastParen(java.lang.Object);
  public static java.lang.Object getLeftContext(java.lang.Object);
  public static java.lang.Object getRightContext(java.lang.Object);
  public static java.lang.Object getGroup1(java.lang.Object);
  public static java.lang.Object getGroup2(java.lang.Object);
  public static java.lang.Object getGroup3(java.lang.Object);
  public static java.lang.Object getGroup4(java.lang.Object);
  public static java.lang.Object getGroup5(java.lang.Object);
  public static java.lang.Object getGroup6(java.lang.Object);
  public static java.lang.Object getGroup7(java.lang.Object);
  public static java.lang.Object getGroup8(java.lang.Object);
  public static java.lang.Object getGroup9(java.lang.Object);
  public jdk.nashorn.internal.objects.NativeRegExpExecResult exec(java.lang.String);
  public boolean test(java.lang.String);
  java.lang.String replace(java.lang.String, java.lang.String, java.lang.Object) throws java.lang.Throwable;
  jdk.nashorn.internal.objects.NativeArray split(java.lang.String, long);
  int search(java.lang.String);
  public int getLastIndex();
  public java.lang.Object getLastIndexObject();
  public void setLastIndex(int);
  boolean getGlobal();
  static {};
  public static void $clinit$();
  public java.lang.Object G$lastIndex();
  public void S$lastIndex(java.lang.Object);
}
