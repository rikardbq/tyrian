Compiled from "NativeString.java"
public final class jdk.nashorn.internal.objects.NativeString extends jdk.nashorn.internal.runtime.ScriptObject implements jdk.nashorn.internal.runtime.OptimisticBuiltins {
  static final java.lang.invoke.MethodHandle WRAPFILTER;
  static final boolean $assertionsDisabled;
  jdk.nashorn.internal.objects.NativeString(java.lang.CharSequence, jdk.nashorn.internal.objects.Global);
  public java.lang.String safeToString();
  public java.lang.String toString();
  public java.lang.String getClassName();
  public java.lang.Object getLength();
  protected jdk.dynalink.linker.GuardedInvocation findGetMethod(jdk.dynalink.CallSiteDescriptor, jdk.dynalink.linker.LinkRequest);
  protected jdk.dynalink.linker.GuardedInvocation findGetIndexMethod(jdk.dynalink.CallSiteDescriptor, jdk.dynalink.linker.LinkRequest);
  public java.lang.Object get(java.lang.Object);
  public java.lang.Object get(double);
  public java.lang.Object get(int);
  public int getInt(java.lang.Object, int);
  public int getInt(double, int);
  public int getInt(int, int);
  public double getDouble(java.lang.Object, int);
  public double getDouble(double, int);
  public double getDouble(int, int);
  public boolean has(java.lang.Object);
  public boolean has(int);
  public boolean has(double);
  public boolean hasOwnProperty(java.lang.Object);
  public boolean hasOwnProperty(int);
  public boolean hasOwnProperty(double);
  public boolean delete(int, boolean);
  public boolean delete(double, boolean);
  public boolean delete(java.lang.Object, boolean);
  public java.lang.Object getOwnPropertyDescriptor(java.lang.Object);
  protected <T> T[] getOwnKeys(java.lang.Class<T>, boolean, java.util.Set<T>);
  public static java.lang.Object length(java.lang.Object);
  public static java.lang.String fromCharCode(java.lang.Object, java.lang.Object...);
  public static java.lang.Object fromCharCode(java.lang.Object, java.lang.Object);
  public static java.lang.String fromCharCode(java.lang.Object, int);
  public static java.lang.Object fromCharCode(java.lang.Object, int, int);
  public static java.lang.Object fromCharCode(java.lang.Object, int, int, int);
  public static java.lang.String fromCharCode(java.lang.Object, int, int, int, int);
  public static java.lang.String fromCharCode(java.lang.Object, double);
  public static java.lang.String toString(java.lang.Object);
  public static java.lang.String valueOf(java.lang.Object);
  public static java.lang.String charAt(java.lang.Object, java.lang.Object);
  public static java.lang.String charAt(java.lang.Object, double);
  public static java.lang.String charAt(java.lang.Object, int);
  public static double charCodeAt(java.lang.Object, java.lang.Object);
  public static int charCodeAt(java.lang.Object, double);
  public static int charCodeAt(java.lang.Object, int);
  public static java.lang.Object concat(java.lang.Object, java.lang.Object...);
  public static int indexOf(java.lang.Object, java.lang.Object, java.lang.Object);
  public static int indexOf(java.lang.Object, java.lang.Object);
  public static int indexOf(java.lang.Object, java.lang.Object, double);
  public static int indexOf(java.lang.Object, java.lang.Object, int);
  public static int lastIndexOf(java.lang.Object, java.lang.Object, java.lang.Object);
  public static double localeCompare(java.lang.Object, java.lang.Object);
  public static jdk.nashorn.internal.runtime.ScriptObject match(java.lang.Object, java.lang.Object);
  public static java.lang.String replace(java.lang.Object, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
  public static int search(java.lang.Object, java.lang.Object);
  public static java.lang.String slice(java.lang.Object, java.lang.Object, java.lang.Object);
  public static java.lang.String slice(java.lang.Object, int);
  public static java.lang.String slice(java.lang.Object, double);
  public static java.lang.String slice(java.lang.Object, int, int);
  public static java.lang.String slice(java.lang.Object, double, double);
  public static jdk.nashorn.internal.runtime.ScriptObject split(java.lang.Object, java.lang.Object, java.lang.Object);
  public static java.lang.String substr(java.lang.Object, java.lang.Object, java.lang.Object);
  public static java.lang.String substring(java.lang.Object, java.lang.Object, java.lang.Object);
  public static java.lang.String substring(java.lang.Object, int);
  public static java.lang.String substring(java.lang.Object, double);
  public static java.lang.String substring(java.lang.Object, int, int);
  public static java.lang.String substring(java.lang.Object, double, double);
  public static java.lang.String toLowerCase(java.lang.Object);
  public static java.lang.String toLocaleLowerCase(java.lang.Object);
  public static java.lang.String toUpperCase(java.lang.Object);
  public static java.lang.String toLocaleUpperCase(java.lang.Object);
  public static java.lang.String trim(java.lang.Object);
  public static java.lang.String trimLeft(java.lang.Object);
  public static java.lang.String trimRight(java.lang.Object);
  public static java.lang.Object constructor(boolean, java.lang.Object, java.lang.Object...);
  public static java.lang.Object constructor(boolean, java.lang.Object);
  public static java.lang.Object constructor(boolean, java.lang.Object, java.lang.Object);
  public static java.lang.Object constructor(boolean, java.lang.Object, int);
  public static java.lang.Object constructor(boolean, java.lang.Object, double);
  public static java.lang.Object constructor(boolean, java.lang.Object, boolean);
  public static java.lang.Object getIterator(java.lang.Object);
  public static jdk.dynalink.linker.GuardedInvocation lookupPrimitive(jdk.dynalink.linker.LinkRequest, java.lang.Object);
  public jdk.nashorn.internal.objects.annotations.SpecializedFunction$LinkLogic getLinkLogic(java.lang.Class<? extends jdk.nashorn.internal.objects.annotations.SpecializedFunction$LinkLogic>);
  public boolean hasPerInstanceAssumptions();
  static {};
  public static void $clinit$();
}
