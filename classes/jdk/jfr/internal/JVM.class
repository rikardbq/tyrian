Compiled from "JVM.java"
public final class jdk.jfr.internal.JVM {
  static final java.lang.Object FILE_DELTA_CHANGE;
  static final long RESERVED_CLASS_ID_LIMIT;
  public static jdk.jfr.internal.JVM getJVM();
  public native void beginRecording();
  public static native long counterTime();
  public native boolean emitEvent(long, long, long);
  public native void endRecording();
  public native java.util.List<java.lang.Class<? extends jdk.internal.event.Event>> getAllEventClasses();
  public native long getUnloadedEventClassCount();
  public static native long getClassId(java.lang.Class<?>);
  public static native long getClassIdNonIntrinsic(java.lang.Class<?>);
  public native java.lang.String getPid();
  public native long getStackTraceId(int);
  public native long getThreadId(java.lang.Thread);
  public native long getTicksFrequency();
  public static native void log(int, int, java.lang.String);
  public static native void subscribeLogLevel(jdk.jfr.internal.LogTag, int);
  public synchronized native void retransformClasses(java.lang.Class<?>[]);
  public native void setEnabled(long, boolean);
  public native void setFileNotification(long);
  public native void setGlobalBufferCount(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
  public native void setGlobalBufferSize(long) throws java.lang.IllegalArgumentException;
  public native void setMemorySize(long) throws java.lang.IllegalArgumentException;
  public native void setMethodSamplingInterval(long, long);
  public native void setOutput(java.lang.String);
  public native void setForceInstrumentation(boolean);
  public native void setSampleThreads(boolean) throws java.lang.IllegalStateException;
  public native void setCompressedIntegers(boolean) throws java.lang.IllegalStateException;
  public native void setStackDepth(int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
  public native void setStackTraceEnabled(long, boolean);
  public native void setThreadBufferSize(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
  public native boolean setThreshold(long, long);
  public native void storeMetadataDescriptor(byte[]);
  public void endRecording_();
  public void beginRecording_();
  public boolean isRecording();
  public native boolean getAllowedToDoEventRetransforms();
  public boolean createFailedNativeJFR() throws java.lang.IllegalStateException;
  public void createNativeJFR();
  public boolean destroyNativeJFR();
  public boolean hasNativeJFR();
  public native boolean isAvailable();
  public native double getTimeConversionFactor();
  public native long getTypeId(java.lang.Class<?>);
  public static native java.lang.Object getEventWriter();
  public static native jdk.jfr.internal.EventWriter newEventWriter();
  public static native boolean flush(jdk.jfr.internal.EventWriter, int, int);
  public native void setRepositoryLocation(java.lang.String);
  public native void abort(java.lang.String);
  public static native boolean addStringConstant(boolean, long, java.lang.String);
  public native long getEpochAddress();
  public native void uncaughtException(java.lang.Thread, java.lang.Throwable);
  public native boolean setCutoff(long, long);
  public native void emitOldObjectSamples(long, boolean);
  public native boolean shouldRotateDisk();
  static {};
}
