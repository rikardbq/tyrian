Compiled from "Utils.java"
public final class jdk.jfr.internal.Utils {
  public static final java.lang.String EVENTS_PACKAGE_NAME;
  public static final java.lang.String INSTRUMENT_PACKAGE_NAME;
  public static final java.lang.String HANDLERS_PACKAGE_NAME;
  public static final java.lang.String REGISTER_EVENT;
  public static final java.lang.String ACCESS_FLIGHT_RECORDER;
  public jdk.jfr.internal.Utils();
  public static void checkAccessFlightRecorder() throws java.lang.SecurityException;
  public static void checkRegisterPermission() throws java.lang.SecurityException;
  public static java.lang.String formatBytesCompact(long);
  public static java.lang.String formatBits(long);
  public static java.lang.String formatBytes(long);
  public static java.lang.String formatBytesPerSecond(long);
  public static java.lang.String formatBitsPerSecond(long);
  public static java.lang.String formatTimespan(java.time.Duration, java.lang.String);
  public static long parseTimespanWithInfinity(java.lang.String);
  public static long parseTimespan(java.lang.String);
  static java.util.List<java.lang.annotation.Annotation> getAnnotations(java.lang.Class<?>);
  static boolean isAfter(jdk.jfr.RecordingState, jdk.jfr.RecordingState);
  static boolean isBefore(jdk.jfr.RecordingState, jdk.jfr.RecordingState);
  static boolean isState(jdk.jfr.RecordingState, jdk.jfr.RecordingState...);
  public static void touch(java.nio.file.Path) throws java.io.IOException;
  public static java.lang.Class<?> unboxType(java.lang.Class<?>);
  static long nanosToTicks(long);
  static synchronized jdk.jfr.internal.handlers.EventHandler getHandler(java.lang.Class<? extends jdk.internal.event.Event>);
  static synchronized void setHandler(java.lang.Class<? extends jdk.internal.event.Event>, jdk.jfr.internal.handlers.EventHandler);
  public static java.util.Map<java.lang.String, java.lang.String> sanitizeNullFreeStringMap(java.util.Map<java.lang.String, java.lang.String>);
  public static <T> java.util.List<T> sanitizeNullFreeList(java.util.List<T>, java.lang.Class<T>);
  static java.util.List<java.lang.reflect.Field> getVisibleEventFields(java.lang.Class<?>);
  public static void ensureValidEventSubclass(java.lang.Class<?>);
  public static void writeGeneratedASM(java.lang.String, byte[]);
  public static void ensureInitialized(java.lang.Class<? extends jdk.internal.event.Event>);
  public static java.lang.Object makePrimitiveArray(java.lang.String, java.util.List<java.lang.Object>);
  public static boolean isSettingVisible(jdk.jfr.internal.Control, boolean);
  public static boolean isSettingVisible(long, boolean);
  public static jdk.jfr.internal.Type getValidType(java.lang.Class<?>, java.lang.String);
  public static <T> java.util.List<T> smallUnmodifiable(java.util.List<T>);
  public static java.lang.String upgradeLegacyJDKEvent(java.lang.String);
  public static void verifyMirror(java.lang.Class<?>, java.lang.Class<?>);
  public static java.lang.String makeFilename(jdk.jfr.Recording);
}
