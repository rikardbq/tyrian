Compiled from "Recording.java"
public final class jdk.jfr.Recording implements java.io.Closeable {
  public jdk.jfr.Recording(java.util.Map<java.lang.String, java.lang.String>);
  public jdk.jfr.Recording();
  public jdk.jfr.Recording(jdk.jfr.Configuration);
  public void start();
  public void scheduleStart(java.time.Duration);
  public boolean stop();
  public java.util.Map<java.lang.String, java.lang.String> getSettings();
  public long getSize();
  public java.time.Instant getStopTime();
  public java.time.Instant getStartTime();
  public long getMaxSize();
  public java.time.Duration getMaxAge();
  public java.lang.String getName();
  public void setSettings(java.util.Map<java.lang.String, java.lang.String>);
  public jdk.jfr.RecordingState getState();
  public void close();
  public jdk.jfr.Recording copy(boolean);
  public void dump(java.nio.file.Path) throws java.io.IOException;
  public boolean isToDisk();
  public void setMaxSize(long);
  public void setMaxAge(java.time.Duration);
  public void setDestination(java.nio.file.Path) throws java.io.IOException;
  public java.nio.file.Path getDestination();
  public long getId();
  public void setName(java.lang.String);
  public void setDumpOnExit(boolean);
  public boolean getDumpOnExit();
  public void setToDisk(boolean);
  public java.io.InputStream getStream(java.time.Instant, java.time.Instant) throws java.io.IOException;
  public java.time.Duration getDuration();
  public void setDuration(java.time.Duration);
  public jdk.jfr.EventSettings enable(java.lang.String);
  public jdk.jfr.EventSettings disable(java.lang.String);
  public jdk.jfr.EventSettings enable(java.lang.Class<? extends jdk.jfr.Event>);
  public jdk.jfr.EventSettings disable(java.lang.Class<? extends jdk.jfr.Event>);
  jdk.jfr.internal.PlatformRecording getInternal();
}
