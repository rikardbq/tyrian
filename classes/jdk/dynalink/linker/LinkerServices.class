Compiled from "LinkerServices.java"
public interface jdk.dynalink.linker.LinkerServices {
  public abstract java.lang.invoke.MethodHandle asType(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType);
  public default java.lang.invoke.MethodHandle asTypeLosslessReturn(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType);
  public abstract java.lang.invoke.MethodHandle getTypeConverter(java.lang.Class<?>, java.lang.Class<?>);
  public abstract boolean canConvert(java.lang.Class<?>, java.lang.Class<?>);
  public abstract jdk.dynalink.linker.GuardedInvocation getGuardedInvocation(jdk.dynalink.linker.LinkRequest) throws java.lang.Exception;
  public abstract jdk.dynalink.linker.ConversionComparator$Comparison compareConversion(java.lang.Class<?>, java.lang.Class<?>, java.lang.Class<?>);
  public abstract java.lang.invoke.MethodHandle filterInternalObjects(java.lang.invoke.MethodHandle);
  public abstract <T> T getWithLookup(java.util.function.Supplier<T>, jdk.dynalink.SecureLookupSupplier);
}
