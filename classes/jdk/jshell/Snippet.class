Compiled from "Snippet.java"
public abstract class jdk.jshell.Snippet {
  static final java.lang.String UNASSOCIATED_ID;
  final java.lang.String unitName;
  jdk.jshell.Snippet(jdk.jshell.Key, java.lang.String, jdk.jshell.Wrap, java.lang.String, jdk.jshell.Snippet$SubKind, jdk.jshell.DiagList);
  public java.lang.String id();
  public jdk.jshell.Snippet$Kind kind();
  public jdk.jshell.Snippet$SubKind subKind();
  public java.lang.String source();
  public java.lang.String toString();
  java.lang.String name();
  jdk.jshell.Key key();
  java.util.List<java.lang.String> unresolved();
  jdk.jshell.DiagList diagnostics();
  jdk.jshell.DiagList syntheticDiags();
  jdk.jshell.Wrap corralled();
  java.util.Collection<java.lang.String> declareReferences();
  java.util.Collection<java.lang.String> bodyReferences();
  java.lang.String importLine(jdk.jshell.JShell);
  void setId(java.lang.String);
  final void setSequenceNumber(int);
  void setOuterWrap(jdk.jshell.OuterWrap);
  void setCompilationStatus(jdk.jshell.Snippet$Status, java.util.List<java.lang.String>, jdk.jshell.DiagList);
  void setDiagnostics(jdk.jshell.DiagList);
  void setFailed(jdk.jshell.DiagList);
  void setDropped();
  void setOverwritten();
  jdk.jshell.Snippet$Status status();
  java.lang.String className();
  java.lang.String classFullName();
  jdk.jshell.OuterWrap outerWrap();
  int sequenceNumber();
  jdk.jshell.Wrap guts();
  boolean isExecutable();
}
