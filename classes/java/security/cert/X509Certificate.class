Compiled from "X509Certificate.java"
public abstract class java.security.cert.X509Certificate extends java.security.cert.Certificate implements java.security.cert.X509Extension {
  protected java.security.cert.X509Certificate();
  public abstract void checkValidity() throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;
  public abstract void checkValidity(java.util.Date) throws java.security.cert.CertificateExpiredException, java.security.cert.CertificateNotYetValidException;
  public abstract int getVersion();
  public abstract java.math.BigInteger getSerialNumber();
  public abstract java.security.Principal getIssuerDN();
  public javax.security.auth.x500.X500Principal getIssuerX500Principal();
  public abstract java.security.Principal getSubjectDN();
  public javax.security.auth.x500.X500Principal getSubjectX500Principal();
  public abstract java.util.Date getNotBefore();
  public abstract java.util.Date getNotAfter();
  public abstract byte[] getTBSCertificate() throws java.security.cert.CertificateEncodingException;
  public abstract byte[] getSignature();
  public abstract java.lang.String getSigAlgName();
  public abstract java.lang.String getSigAlgOID();
  public abstract byte[] getSigAlgParams();
  public abstract boolean[] getIssuerUniqueID();
  public abstract boolean[] getSubjectUniqueID();
  public abstract boolean[] getKeyUsage();
  public java.util.List<java.lang.String> getExtendedKeyUsage() throws java.security.cert.CertificateParsingException;
  public abstract int getBasicConstraints();
  public java.util.Collection<java.util.List<?>> getSubjectAlternativeNames() throws java.security.cert.CertificateParsingException;
  public java.util.Collection<java.util.List<?>> getIssuerAlternativeNames() throws java.security.cert.CertificateParsingException;
  public void verify(java.security.PublicKey, java.security.Provider) throws java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.security.SignatureException;
}
