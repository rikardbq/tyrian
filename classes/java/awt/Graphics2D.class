Compiled from "Graphics2D.java"
public abstract class java.awt.Graphics2D extends java.awt.Graphics {
  protected java.awt.Graphics2D();
  public void draw3DRect(int, int, int, int, boolean);
  public void fill3DRect(int, int, int, int, boolean);
  public abstract void draw(java.awt.Shape);
  public abstract boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver);
  public abstract void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int);
  public abstract void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform);
  public abstract void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform);
  public abstract void drawString(java.lang.String, int, int);
  public abstract void drawString(java.lang.String, float, float);
  public abstract void drawString(java.text.AttributedCharacterIterator, int, int);
  public abstract void drawString(java.text.AttributedCharacterIterator, float, float);
  public abstract void drawGlyphVector(java.awt.font.GlyphVector, float, float);
  public abstract void fill(java.awt.Shape);
  public abstract boolean hit(java.awt.Rectangle, java.awt.Shape, boolean);
  public abstract java.awt.GraphicsConfiguration getDeviceConfiguration();
  public abstract void setComposite(java.awt.Composite);
  public abstract void setPaint(java.awt.Paint);
  public abstract void setStroke(java.awt.Stroke);
  public abstract void setRenderingHint(java.awt.RenderingHints$Key, java.lang.Object);
  public abstract java.lang.Object getRenderingHint(java.awt.RenderingHints$Key);
  public abstract void setRenderingHints(java.util.Map<?, ?>);
  public abstract void addRenderingHints(java.util.Map<?, ?>);
  public abstract java.awt.RenderingHints getRenderingHints();
  public abstract void translate(int, int);
  public abstract void translate(double, double);
  public abstract void rotate(double);
  public abstract void rotate(double, double, double);
  public abstract void scale(double, double);
  public abstract void shear(double, double);
  public abstract void transform(java.awt.geom.AffineTransform);
  public abstract void setTransform(java.awt.geom.AffineTransform);
  public abstract java.awt.geom.AffineTransform getTransform();
  public abstract java.awt.Paint getPaint();
  public abstract java.awt.Composite getComposite();
  public abstract void setBackground(java.awt.Color);
  public abstract java.awt.Color getBackground();
  public abstract java.awt.Stroke getStroke();
  public abstract void clip(java.awt.Shape);
  public abstract java.awt.font.FontRenderContext getFontRenderContext();
}
