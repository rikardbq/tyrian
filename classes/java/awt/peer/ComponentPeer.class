Compiled from "ComponentPeer.java"
public interface java.awt.peer.ComponentPeer {
  public static final int SET_LOCATION;
  public static final int SET_SIZE;
  public static final int SET_BOUNDS;
  public static final int SET_CLIENT_SIZE;
  public static final int RESET_OPERATION;
  public static final int NO_EMBEDDED_CHECK;
  public static final int DEFAULT_OPERATION;
  public abstract boolean isObscured();
  public abstract boolean canDetermineObscurity();
  public abstract void setVisible(boolean);
  public abstract void setEnabled(boolean);
  public abstract void paint(java.awt.Graphics);
  public abstract void print(java.awt.Graphics);
  public abstract void setBounds(int, int, int, int, int);
  public abstract void handleEvent(java.awt.AWTEvent);
  public abstract void coalescePaintEvent(java.awt.event.PaintEvent);
  public abstract java.awt.Point getLocationOnScreen();
  public abstract java.awt.Dimension getPreferredSize();
  public abstract java.awt.Dimension getMinimumSize();
  public abstract java.awt.image.ColorModel getColorModel();
  public abstract java.awt.Graphics getGraphics();
  public abstract java.awt.FontMetrics getFontMetrics(java.awt.Font);
  public abstract void dispose();
  public abstract void setForeground(java.awt.Color);
  public abstract void setBackground(java.awt.Color);
  public abstract void setFont(java.awt.Font);
  public abstract void updateCursorImmediately();
  public abstract boolean requestFocus(java.awt.Component, boolean, boolean, long, java.awt.event.FocusEvent$Cause);
  public abstract boolean isFocusable();
  public abstract java.awt.Image createImage(java.awt.image.ImageProducer);
  public abstract java.awt.Image createImage(int, int);
  public abstract java.awt.image.VolatileImage createVolatileImage(int, int);
  public abstract boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public abstract int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver);
  public abstract java.awt.GraphicsConfiguration getGraphicsConfiguration();
  public abstract boolean handlesWheelScrolling();
  public abstract void createBuffers(int, java.awt.BufferCapabilities) throws java.awt.AWTException;
  public abstract java.awt.Image getBackBuffer();
  public abstract void flip(int, int, int, int, java.awt.BufferCapabilities$FlipContents);
  public abstract void destroyBuffers();
  public abstract void reparent(java.awt.peer.ContainerPeer);
  public abstract boolean isReparentSupported();
  public abstract void layout();
  public abstract void applyShape(sun.java2d.pipe.Region);
  public abstract void setZOrder(java.awt.peer.ComponentPeer);
  public abstract boolean updateGraphicsData(java.awt.GraphicsConfiguration);
}
