Compiled from "Arc2D.java"
public abstract class java.awt.geom.Arc2D extends java.awt.geom.RectangularShape {
  public static final int OPEN;
  public static final int CHORD;
  public static final int PIE;
  protected java.awt.geom.Arc2D();
  protected java.awt.geom.Arc2D(int);
  public abstract double getAngleStart();
  public abstract double getAngleExtent();
  public int getArcType();
  public java.awt.geom.Point2D getStartPoint();
  public java.awt.geom.Point2D getEndPoint();
  public abstract void setArc(double, double, double, double, double, double, int);
  public void setArc(java.awt.geom.Point2D, java.awt.geom.Dimension2D, double, double, int);
  public void setArc(java.awt.geom.Rectangle2D, double, double, int);
  public void setArc(java.awt.geom.Arc2D);
  public void setArcByCenter(double, double, double, double, double, int);
  public void setArcByTangent(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, double);
  public abstract void setAngleStart(double);
  public abstract void setAngleExtent(double);
  public void setAngleStart(java.awt.geom.Point2D);
  public void setAngles(double, double, double, double);
  public void setAngles(java.awt.geom.Point2D, java.awt.geom.Point2D);
  public void setArcType(int);
  public void setFrame(double, double, double, double);
  public java.awt.geom.Rectangle2D getBounds2D();
  protected abstract java.awt.geom.Rectangle2D makeBounds(double, double, double, double);
  static double normalizeDegrees(double);
  public boolean containsAngle(double);
  public boolean contains(double, double);
  public boolean intersects(double, double, double, double);
  public boolean contains(double, double, double, double);
  public boolean contains(java.awt.geom.Rectangle2D);
  public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform);
  public int hashCode();
  public boolean equals(java.lang.Object);
}
