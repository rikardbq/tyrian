Compiled from "AffineTransform.java"
public class java.awt.geom.AffineTransform implements java.lang.Cloneable,java.io.Serializable {
  public static final int TYPE_IDENTITY;
  public static final int TYPE_TRANSLATION;
  public static final int TYPE_UNIFORM_SCALE;
  public static final int TYPE_GENERAL_SCALE;
  public static final int TYPE_MASK_SCALE;
  public static final int TYPE_FLIP;
  public static final int TYPE_QUADRANT_ROTATION;
  public static final int TYPE_GENERAL_ROTATION;
  public static final int TYPE_MASK_ROTATION;
  public static final int TYPE_GENERAL_TRANSFORM;
  static final int APPLY_IDENTITY;
  static final int APPLY_TRANSLATE;
  static final int APPLY_SCALE;
  static final int APPLY_SHEAR;
  double m00;
  double m10;
  double m01;
  double m11;
  double m02;
  double m12;
  transient int state;
  public java.awt.geom.AffineTransform();
  public java.awt.geom.AffineTransform(java.awt.geom.AffineTransform);
  public java.awt.geom.AffineTransform(float, float, float, float, float, float);
  public java.awt.geom.AffineTransform(float[]);
  public java.awt.geom.AffineTransform(double, double, double, double, double, double);
  public java.awt.geom.AffineTransform(double[]);
  public static java.awt.geom.AffineTransform getTranslateInstance(double, double);
  public static java.awt.geom.AffineTransform getRotateInstance(double);
  public static java.awt.geom.AffineTransform getRotateInstance(double, double, double);
  public static java.awt.geom.AffineTransform getRotateInstance(double, double);
  public static java.awt.geom.AffineTransform getRotateInstance(double, double, double, double);
  public static java.awt.geom.AffineTransform getQuadrantRotateInstance(int);
  public static java.awt.geom.AffineTransform getQuadrantRotateInstance(int, double, double);
  public static java.awt.geom.AffineTransform getScaleInstance(double, double);
  public static java.awt.geom.AffineTransform getShearInstance(double, double);
  public int getType();
  public double getDeterminant();
  void updateState();
  public void getMatrix(double[]);
  public double getScaleX();
  public double getScaleY();
  public double getShearX();
  public double getShearY();
  public double getTranslateX();
  public double getTranslateY();
  public void translate(double, double);
  public void rotate(double);
  public void rotate(double, double, double);
  public void rotate(double, double);
  public void rotate(double, double, double, double);
  public void quadrantRotate(int);
  public void quadrantRotate(int, double, double);
  public void scale(double, double);
  public void shear(double, double);
  public void setToIdentity();
  public void setToTranslation(double, double);
  public void setToRotation(double);
  public void setToRotation(double, double, double);
  public void setToRotation(double, double);
  public void setToRotation(double, double, double, double);
  public void setToQuadrantRotation(int);
  public void setToQuadrantRotation(int, double, double);
  public void setToScale(double, double);
  public void setToShear(double, double);
  public void setTransform(java.awt.geom.AffineTransform);
  public void setTransform(double, double, double, double, double, double);
  public void concatenate(java.awt.geom.AffineTransform);
  public void preConcatenate(java.awt.geom.AffineTransform);
  public java.awt.geom.AffineTransform createInverse() throws java.awt.geom.NoninvertibleTransformException;
  public void invert() throws java.awt.geom.NoninvertibleTransformException;
  public java.awt.geom.Point2D transform(java.awt.geom.Point2D, java.awt.geom.Point2D);
  public void transform(java.awt.geom.Point2D[], int, java.awt.geom.Point2D[], int, int);
  public void transform(float[], int, float[], int, int);
  public void transform(double[], int, double[], int, int);
  public void transform(float[], int, double[], int, int);
  public void transform(double[], int, float[], int, int);
  public java.awt.geom.Point2D inverseTransform(java.awt.geom.Point2D, java.awt.geom.Point2D) throws java.awt.geom.NoninvertibleTransformException;
  public void inverseTransform(double[], int, double[], int, int) throws java.awt.geom.NoninvertibleTransformException;
  public java.awt.geom.Point2D deltaTransform(java.awt.geom.Point2D, java.awt.geom.Point2D);
  public void deltaTransform(double[], int, double[], int, int);
  public java.awt.Shape createTransformedShape(java.awt.Shape);
  public java.lang.String toString();
  public boolean isIdentity();
  public java.lang.Object clone();
  public int hashCode();
  public boolean equals(java.lang.Object);
  static {};
}
