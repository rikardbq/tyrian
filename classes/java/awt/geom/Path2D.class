Compiled from "Path2D.java"
public abstract class java.awt.geom.Path2D implements java.awt.Shape,java.lang.Cloneable {
  public static final int WIND_EVEN_ODD;
  public static final int WIND_NON_ZERO;
  transient byte[] pointTypes;
  transient int numTypes;
  transient int numCoords;
  transient int windingRule;
  static final int INIT_SIZE;
  static final int EXPAND_MAX;
  static final int EXPAND_MAX_COORDS;
  static final int EXPAND_MIN;
  static final boolean $assertionsDisabled;
  java.awt.geom.Path2D();
  java.awt.geom.Path2D(int, int);
  abstract float[] cloneCoordsFloat(java.awt.geom.AffineTransform);
  abstract double[] cloneCoordsDouble(java.awt.geom.AffineTransform);
  abstract void append(float, float);
  abstract void append(double, double);
  abstract java.awt.geom.Point2D getPoint(int);
  abstract void needRoom(boolean, int);
  abstract int pointCrossings(double, double);
  abstract int rectCrossings(double, double, double, double);
  static byte[] expandPointTypes(byte[], int);
  public abstract void moveTo(double, double);
  public abstract void lineTo(double, double);
  public abstract void quadTo(double, double, double, double);
  public abstract void curveTo(double, double, double, double, double, double);
  public final synchronized void closePath();
  public final void append(java.awt.Shape, boolean);
  public abstract void append(java.awt.geom.PathIterator, boolean);
  public final synchronized int getWindingRule();
  public final void setWindingRule(int);
  public final synchronized java.awt.geom.Point2D getCurrentPoint();
  public final synchronized void reset();
  public abstract void transform(java.awt.geom.AffineTransform);
  public final synchronized java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform);
  public final java.awt.Rectangle getBounds();
  public static boolean contains(java.awt.geom.PathIterator, double, double);
  public static boolean contains(java.awt.geom.PathIterator, java.awt.geom.Point2D);
  public final boolean contains(double, double);
  public final boolean contains(java.awt.geom.Point2D);
  public static boolean contains(java.awt.geom.PathIterator, double, double, double, double);
  public static boolean contains(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D);
  public final boolean contains(double, double, double, double);
  public final boolean contains(java.awt.geom.Rectangle2D);
  public static boolean intersects(java.awt.geom.PathIterator, double, double, double, double);
  public static boolean intersects(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D);
  public final boolean intersects(double, double, double, double);
  public final boolean intersects(java.awt.geom.Rectangle2D);
  public final java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double);
  public abstract java.lang.Object clone();
  public abstract void trimToSize();
  final void writeObject(java.io.ObjectOutputStream, boolean) throws java.io.IOException;
  final void readObject(java.io.ObjectInputStream, boolean) throws java.lang.ClassNotFoundException, java.io.IOException;
  static {};
}
