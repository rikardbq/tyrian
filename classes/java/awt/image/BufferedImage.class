Compiled from "BufferedImage.java"
public class java.awt.image.BufferedImage extends java.awt.Image implements java.awt.image.WritableRenderedImage,java.awt.Transparency {
  public static final int TYPE_CUSTOM;
  public static final int TYPE_INT_RGB;
  public static final int TYPE_INT_ARGB;
  public static final int TYPE_INT_ARGB_PRE;
  public static final int TYPE_INT_BGR;
  public static final int TYPE_3BYTE_BGR;
  public static final int TYPE_4BYTE_ABGR;
  public static final int TYPE_4BYTE_ABGR_PRE;
  public static final int TYPE_USHORT_565_RGB;
  public static final int TYPE_USHORT_555_RGB;
  public static final int TYPE_BYTE_GRAY;
  public static final int TYPE_USHORT_GRAY;
  public static final int TYPE_BYTE_BINARY;
  public static final int TYPE_BYTE_INDEXED;
  public java.awt.image.BufferedImage(int, int, int);
  public java.awt.image.BufferedImage(int, int, int, java.awt.image.IndexColorModel);
  public java.awt.image.BufferedImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable<?, ?>);
  public int getType();
  public java.awt.image.ColorModel getColorModel();
  public java.awt.image.WritableRaster getRaster();
  public java.awt.image.WritableRaster getAlphaRaster();
  public int getRGB(int, int);
  public int[] getRGB(int, int, int, int, int[], int, int);
  public void setRGB(int, int, int);
  public void setRGB(int, int, int, int, int[], int, int);
  public int getWidth();
  public int getHeight();
  public int getWidth(java.awt.image.ImageObserver);
  public int getHeight(java.awt.image.ImageObserver);
  public java.awt.image.ImageProducer getSource();
  public java.lang.Object getProperty(java.lang.String, java.awt.image.ImageObserver);
  public java.lang.Object getProperty(java.lang.String);
  public java.awt.Graphics getGraphics();
  public java.awt.Graphics2D createGraphics();
  public java.awt.image.BufferedImage getSubimage(int, int, int, int);
  public boolean isAlphaPremultiplied();
  public void coerceData(boolean);
  public java.lang.String toString();
  public java.util.Vector<java.awt.image.RenderedImage> getSources();
  public java.lang.String[] getPropertyNames();
  public int getMinX();
  public int getMinY();
  public java.awt.image.SampleModel getSampleModel();
  public int getNumXTiles();
  public int getNumYTiles();
  public int getMinTileX();
  public int getMinTileY();
  public int getTileWidth();
  public int getTileHeight();
  public int getTileGridXOffset();
  public int getTileGridYOffset();
  public java.awt.image.Raster getTile(int, int);
  public java.awt.image.Raster getData();
  public java.awt.image.Raster getData(java.awt.Rectangle);
  public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster);
  public void setData(java.awt.image.Raster);
  public void addTileObserver(java.awt.image.TileObserver);
  public void removeTileObserver(java.awt.image.TileObserver);
  public boolean isTileWritable(int, int);
  public java.awt.Point[] getWritableTileIndices();
  public boolean hasTileWriters();
  public java.awt.image.WritableRaster getWritableTile(int, int);
  public void releaseWritableTile(int, int);
  public int getTransparency();
  static {};
}
