Compiled from "MultiPixelPackedSampleModel.java"
public class java.awt.image.MultiPixelPackedSampleModel extends java.awt.image.SampleModel {
  int pixelBitStride;
  int bitMask;
  int pixelsPerDataElement;
  int dataElementSize;
  int dataBitOffset;
  int scanlineStride;
  public java.awt.image.MultiPixelPackedSampleModel(int, int, int, int);
  public java.awt.image.MultiPixelPackedSampleModel(int, int, int, int, int, int);
  public java.awt.image.SampleModel createCompatibleSampleModel(int, int);
  public java.awt.image.DataBuffer createDataBuffer();
  public int getNumDataElements();
  public int[] getSampleSize();
  public int getSampleSize(int);
  public int getOffset(int, int);
  public int getBitOffset(int);
  public int getScanlineStride();
  public int getPixelBitStride();
  public int getDataBitOffset();
  public int getTransferType();
  public java.awt.image.SampleModel createSubsetSampleModel(int[]);
  public int getSample(int, int, int, java.awt.image.DataBuffer);
  public void setSample(int, int, int, int, java.awt.image.DataBuffer);
  public java.lang.Object getDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer);
  public int[] getPixel(int, int, int[], java.awt.image.DataBuffer);
  public void setDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer);
  public void setPixel(int, int, int[], java.awt.image.DataBuffer);
  public boolean equals(java.lang.Object);
  public int hashCode();
}
