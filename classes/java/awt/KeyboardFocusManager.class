Compiled from "KeyboardFocusManager.java"
public abstract class java.awt.KeyboardFocusManager implements java.awt.KeyEventDispatcher,java.awt.KeyEventPostProcessor {
  transient java.awt.peer.KeyboardFocusManagerPeer peer;
  public static final int FORWARD_TRAVERSAL_KEYS;
  public static final int BACKWARD_TRAVERSAL_KEYS;
  public static final int UP_CYCLE_TRAVERSAL_KEYS;
  public static final int DOWN_CYCLE_TRAVERSAL_KEYS;
  static final int TRAVERSAL_KEY_LENGTH;
  transient java.awt.SequencedEvent currentSequencedEvent;
  static final int SNFH_FAILURE;
  static final int SNFH_SUCCESS_HANDLED;
  static final int SNFH_SUCCESS_PROCEED;
  static final boolean $assertionsDisabled;
  public static java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager();
  static synchronized java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager(sun.awt.AppContext);
  public static void setCurrentKeyboardFocusManager(java.awt.KeyboardFocusManager) throws java.lang.SecurityException;
  final void setCurrentSequencedEvent(java.awt.SequencedEvent);
  final java.awt.SequencedEvent getCurrentSequencedEvent();
  static java.util.Set<java.awt.AWTKeyStroke> initFocusTraversalKeysSet(java.lang.String, java.util.Set<java.awt.AWTKeyStroke>);
  public java.awt.KeyboardFocusManager();
  public java.awt.Component getFocusOwner();
  protected java.awt.Component getGlobalFocusOwner() throws java.lang.SecurityException;
  protected void setGlobalFocusOwner(java.awt.Component) throws java.lang.SecurityException;
  public void clearFocusOwner();
  public void clearGlobalFocusOwner() throws java.lang.SecurityException;
  void clearGlobalFocusOwnerPriv();
  java.awt.Component getNativeFocusOwner();
  void setNativeFocusOwner(java.awt.Component);
  java.awt.Window getNativeFocusedWindow();
  public java.awt.Component getPermanentFocusOwner();
  protected java.awt.Component getGlobalPermanentFocusOwner() throws java.lang.SecurityException;
  protected void setGlobalPermanentFocusOwner(java.awt.Component) throws java.lang.SecurityException;
  public java.awt.Window getFocusedWindow();
  protected java.awt.Window getGlobalFocusedWindow() throws java.lang.SecurityException;
  protected void setGlobalFocusedWindow(java.awt.Window) throws java.lang.SecurityException;
  public java.awt.Window getActiveWindow();
  protected java.awt.Window getGlobalActiveWindow() throws java.lang.SecurityException;
  protected void setGlobalActiveWindow(java.awt.Window) throws java.lang.SecurityException;
  public synchronized java.awt.FocusTraversalPolicy getDefaultFocusTraversalPolicy();
  public void setDefaultFocusTraversalPolicy(java.awt.FocusTraversalPolicy);
  public void setDefaultFocusTraversalKeys(int, java.util.Set<? extends java.awt.AWTKeyStroke>);
  public java.util.Set<java.awt.AWTKeyStroke> getDefaultFocusTraversalKeys(int);
  public java.awt.Container getCurrentFocusCycleRoot();
  protected java.awt.Container getGlobalCurrentFocusCycleRoot() throws java.lang.SecurityException;
  public void setGlobalCurrentFocusCycleRoot(java.awt.Container) throws java.lang.SecurityException;
  void setGlobalCurrentFocusCycleRootPriv(java.awt.Container);
  public void addPropertyChangeListener(java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.beans.PropertyChangeListener);
  public synchronized java.beans.PropertyChangeListener[] getPropertyChangeListeners();
  public void addPropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public void removePropertyChangeListener(java.lang.String, java.beans.PropertyChangeListener);
  public synchronized java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String);
  protected void firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object);
  public void addVetoableChangeListener(java.beans.VetoableChangeListener);
  public void removeVetoableChangeListener(java.beans.VetoableChangeListener);
  public synchronized java.beans.VetoableChangeListener[] getVetoableChangeListeners();
  public void addVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener);
  public void removeVetoableChangeListener(java.lang.String, java.beans.VetoableChangeListener);
  public synchronized java.beans.VetoableChangeListener[] getVetoableChangeListeners(java.lang.String);
  protected void fireVetoableChange(java.lang.String, java.lang.Object, java.lang.Object) throws java.beans.PropertyVetoException;
  public void addKeyEventDispatcher(java.awt.KeyEventDispatcher);
  public void removeKeyEventDispatcher(java.awt.KeyEventDispatcher);
  protected synchronized java.util.List<java.awt.KeyEventDispatcher> getKeyEventDispatchers();
  public void addKeyEventPostProcessor(java.awt.KeyEventPostProcessor);
  public void removeKeyEventPostProcessor(java.awt.KeyEventPostProcessor);
  protected java.util.List<java.awt.KeyEventPostProcessor> getKeyEventPostProcessors();
  static void setMostRecentFocusOwner(java.awt.Component);
  static synchronized void setMostRecentFocusOwner(java.awt.Window, java.awt.Component);
  static void clearMostRecentFocusOwner(java.awt.Component);
  static synchronized java.awt.Component getMostRecentFocusOwner(java.awt.Window);
  public abstract boolean dispatchEvent(java.awt.AWTEvent);
  public final void redispatchEvent(java.awt.Component, java.awt.AWTEvent);
  public abstract boolean dispatchKeyEvent(java.awt.event.KeyEvent);
  public abstract boolean postProcessKeyEvent(java.awt.event.KeyEvent);
  public abstract void processKeyEvent(java.awt.Component, java.awt.event.KeyEvent);
  protected abstract void enqueueKeyEvents(long, java.awt.Component);
  protected abstract void dequeueKeyEvents(long, java.awt.Component);
  protected abstract void discardKeyEvents(java.awt.Component);
  public abstract void focusNextComponent(java.awt.Component);
  public abstract void focusPreviousComponent(java.awt.Component);
  public abstract void upFocusCycle(java.awt.Component);
  public abstract void downFocusCycle(java.awt.Container);
  public final void focusNextComponent();
  public final void focusPreviousComponent();
  public final void upFocusCycle();
  public final void downFocusCycle();
  void dumpRequests();
  static boolean processSynchronousLightweightTransfer(java.awt.Component, java.awt.Component, boolean, boolean, long);
  static int shouldNativelyFocusHeavyweight(java.awt.Component, java.awt.Component, boolean, boolean, long, java.awt.event.FocusEvent$Cause);
  static java.awt.Window markClearGlobalFocusOwner();
  java.awt.Component getCurrentWaitingRequest(java.awt.Component);
  static boolean isAutoFocusTransferEnabled();
  static boolean isAutoFocusTransferEnabledFor(java.awt.Component);
  static void processCurrentLightweightRequests();
  static java.awt.event.FocusEvent retargetUnexpectedFocusEvent(java.awt.event.FocusEvent);
  static java.awt.event.FocusEvent retargetFocusGained(java.awt.event.FocusEvent);
  static java.awt.event.FocusEvent retargetFocusLost(java.awt.event.FocusEvent);
  static java.awt.AWTEvent retargetFocusEvent(java.awt.AWTEvent);
  void clearMarkers();
  static boolean removeFirstRequest();
  static void removeLastFocusRequest(java.awt.Component);
  static java.awt.Component getHeavyweight(java.awt.Component);
  static boolean isProxyActive(java.awt.event.KeyEvent);
  static {};
}
