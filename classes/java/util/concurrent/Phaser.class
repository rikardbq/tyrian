Compiled from "Phaser.java"
public class java.util.concurrent.Phaser {
  static final int SPINS_PER_ARRIVAL;
  public java.util.concurrent.Phaser();
  public java.util.concurrent.Phaser(int);
  public java.util.concurrent.Phaser(java.util.concurrent.Phaser);
  public java.util.concurrent.Phaser(java.util.concurrent.Phaser, int);
  public int register();
  public int bulkRegister(int);
  public int arrive();
  public int arriveAndDeregister();
  public int arriveAndAwaitAdvance();
  public int awaitAdvance(int);
  public int awaitAdvanceInterruptibly(int) throws java.lang.InterruptedException;
  public int awaitAdvanceInterruptibly(int, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.TimeoutException;
  public void forceTermination();
  public final int getPhase();
  public int getRegisteredParties();
  public int getArrivedParties();
  public int getUnarrivedParties();
  public java.util.concurrent.Phaser getParent();
  public java.util.concurrent.Phaser getRoot();
  public boolean isTerminated();
  protected boolean onAdvance(int, int);
  public java.lang.String toString();
  static {};
}
