Compiled from "AtomicLongArray.java"
public class java.util.concurrent.atomic.AtomicLongArray implements java.io.Serializable {
  public java.util.concurrent.atomic.AtomicLongArray(int);
  public java.util.concurrent.atomic.AtomicLongArray(long[]);
  public final int length();
  public final long get(int);
  public final void set(int, long);
  public final void lazySet(int, long);
  public final long getAndSet(int, long);
  public final boolean compareAndSet(int, long, long);
  public final boolean weakCompareAndSet(int, long, long);
  public final boolean weakCompareAndSetPlain(int, long, long);
  public final long getAndIncrement(int);
  public final long getAndDecrement(int);
  public final long getAndAdd(int, long);
  public final long incrementAndGet(int);
  public final long decrementAndGet(int);
  public long addAndGet(int, long);
  public final long getAndUpdate(int, java.util.function.LongUnaryOperator);
  public final long updateAndGet(int, java.util.function.LongUnaryOperator);
  public final long getAndAccumulate(int, long, java.util.function.LongBinaryOperator);
  public final long accumulateAndGet(int, long, java.util.function.LongBinaryOperator);
  public java.lang.String toString();
  public final long getPlain(int);
  public final void setPlain(int, long);
  public final long getOpaque(int);
  public final void setOpaque(int, long);
  public final long getAcquire(int);
  public final void setRelease(int, long);
  public final long compareAndExchange(int, long, long);
  public final long compareAndExchangeAcquire(int, long, long);
  public final long compareAndExchangeRelease(int, long, long);
  public final boolean weakCompareAndSetVolatile(int, long, long);
  public final boolean weakCompareAndSetAcquire(int, long, long);
  public final boolean weakCompareAndSetRelease(int, long, long);
  static {};
}
