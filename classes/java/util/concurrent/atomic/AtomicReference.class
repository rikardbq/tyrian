Compiled from "AtomicReference.java"
public class java.util.concurrent.atomic.AtomicReference<V> implements java.io.Serializable {
  public java.util.concurrent.atomic.AtomicReference(V);
  public java.util.concurrent.atomic.AtomicReference();
  public final V get();
  public final void set(V);
  public final void lazySet(V);
  public final boolean compareAndSet(V, V);
  public final boolean weakCompareAndSet(V, V);
  public final boolean weakCompareAndSetPlain(V, V);
  public final V getAndSet(V);
  public final V getAndUpdate(java.util.function.UnaryOperator<V>);
  public final V updateAndGet(java.util.function.UnaryOperator<V>);
  public final V getAndAccumulate(V, java.util.function.BinaryOperator<V>);
  public final V accumulateAndGet(V, java.util.function.BinaryOperator<V>);
  public java.lang.String toString();
  public final V getPlain();
  public final void setPlain(V);
  public final V getOpaque();
  public final void setOpaque(V);
  public final V getAcquire();
  public final void setRelease(V);
  public final V compareAndExchange(V, V);
  public final V compareAndExchangeAcquire(V, V);
  public final V compareAndExchangeRelease(V, V);
  public final boolean weakCompareAndSetVolatile(V, V);
  public final boolean weakCompareAndSetAcquire(V, V);
  public final boolean weakCompareAndSetRelease(V, V);
  static {};
}
