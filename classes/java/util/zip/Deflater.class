Compiled from "Deflater.java"
public class java.util.zip.Deflater {
  public static final int DEFLATED;
  public static final int NO_COMPRESSION;
  public static final int BEST_SPEED;
  public static final int BEST_COMPRESSION;
  public static final int DEFAULT_COMPRESSION;
  public static final int FILTERED;
  public static final int HUFFMAN_ONLY;
  public static final int DEFAULT_STRATEGY;
  public static final int NO_FLUSH;
  public static final int SYNC_FLUSH;
  public static final int FULL_FLUSH;
  static final boolean $assertionsDisabled;
  public java.util.zip.Deflater(int, boolean);
  public java.util.zip.Deflater(int);
  public java.util.zip.Deflater();
  public void setInput(byte[], int, int);
  public void setInput(byte[]);
  public void setInput(java.nio.ByteBuffer);
  public void setDictionary(byte[], int, int);
  public void setDictionary(byte[]);
  public void setDictionary(java.nio.ByteBuffer);
  public void setStrategy(int);
  public void setLevel(int);
  public boolean needsInput();
  public void finish();
  public boolean finished();
  public int deflate(byte[], int, int);
  public int deflate(byte[]);
  public int deflate(java.nio.ByteBuffer);
  public int deflate(byte[], int, int, int);
  public int deflate(java.nio.ByteBuffer, int);
  public int getAdler();
  public int getTotalIn();
  public long getBytesRead();
  public int getTotalOut();
  public long getBytesWritten();
  public void reset();
  public void end();
  protected void finalize();
  static {};
}
