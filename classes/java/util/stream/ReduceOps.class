Compiled from "ReduceOps.java"
final class java.util.stream.ReduceOps {
  public static <T, U> java.util.stream.TerminalOp<T, U> makeRef(U, java.util.function.BiFunction<U, ? super T, U>, java.util.function.BinaryOperator<U>);
  public static <T> java.util.stream.TerminalOp<T, java.util.Optional<T>> makeRef(java.util.function.BinaryOperator<T>);
  public static <T, I> java.util.stream.TerminalOp<T, I> makeRef(java.util.stream.Collector<? super T, I, ?>);
  public static <T, R> java.util.stream.TerminalOp<T, R> makeRef(java.util.function.Supplier<R>, java.util.function.BiConsumer<R, ? super T>, java.util.function.BiConsumer<R, R>);
  public static <T> java.util.stream.TerminalOp<T, java.lang.Long> makeRefCounting();
  public static java.util.stream.TerminalOp<java.lang.Integer, java.lang.Integer> makeInt(int, java.util.function.IntBinaryOperator);
  public static java.util.stream.TerminalOp<java.lang.Integer, java.util.OptionalInt> makeInt(java.util.function.IntBinaryOperator);
  public static <R> java.util.stream.TerminalOp<java.lang.Integer, R> makeInt(java.util.function.Supplier<R>, java.util.function.ObjIntConsumer<R>, java.util.function.BinaryOperator<R>);
  public static java.util.stream.TerminalOp<java.lang.Integer, java.lang.Long> makeIntCounting();
  public static java.util.stream.TerminalOp<java.lang.Long, java.lang.Long> makeLong(long, java.util.function.LongBinaryOperator);
  public static java.util.stream.TerminalOp<java.lang.Long, java.util.OptionalLong> makeLong(java.util.function.LongBinaryOperator);
  public static <R> java.util.stream.TerminalOp<java.lang.Long, R> makeLong(java.util.function.Supplier<R>, java.util.function.ObjLongConsumer<R>, java.util.function.BinaryOperator<R>);
  public static java.util.stream.TerminalOp<java.lang.Long, java.lang.Long> makeLongCounting();
  public static java.util.stream.TerminalOp<java.lang.Double, java.lang.Double> makeDouble(double, java.util.function.DoubleBinaryOperator);
  public static java.util.stream.TerminalOp<java.lang.Double, java.util.OptionalDouble> makeDouble(java.util.function.DoubleBinaryOperator);
  public static <R> java.util.stream.TerminalOp<java.lang.Double, R> makeDouble(java.util.function.Supplier<R>, java.util.function.ObjDoubleConsumer<R>, java.util.function.BinaryOperator<R>);
  public static java.util.stream.TerminalOp<java.lang.Double, java.lang.Long> makeDoubleCounting();
}
