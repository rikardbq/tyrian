Compiled from "Node.java"
interface java.util.stream.Node<T> {
  public abstract java.util.Spliterator<T> spliterator();
  public abstract void forEach(java.util.function.Consumer<? super T>);
  public default int getChildCount();
  public default java.util.stream.Node<T> getChild(int);
  public default java.util.stream.Node<T> truncate(long, long, java.util.function.IntFunction<T[]>);
  public abstract T[] asArray(java.util.function.IntFunction<T[]>);
  public abstract void copyInto(T[], int);
  public default java.util.stream.StreamShape getShape();
  public abstract long count();
}
