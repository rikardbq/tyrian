Compiled from "WhileOps.java"
final class java.util.stream.WhileOps {
  static final int TAKE_FLAGS;
  static final int DROP_FLAGS;
  java.util.stream.WhileOps();
  static <T> java.util.stream.Stream<T> makeTakeWhileRef(java.util.stream.AbstractPipeline<?, T, ?>, java.util.function.Predicate<? super T>);
  static java.util.stream.IntStream makeTakeWhileInt(java.util.stream.AbstractPipeline<?, java.lang.Integer, ?>, java.util.function.IntPredicate);
  static java.util.stream.LongStream makeTakeWhileLong(java.util.stream.AbstractPipeline<?, java.lang.Long, ?>, java.util.function.LongPredicate);
  static java.util.stream.DoubleStream makeTakeWhileDouble(java.util.stream.AbstractPipeline<?, java.lang.Double, ?>, java.util.function.DoublePredicate);
  static <T> java.util.stream.Stream<T> makeDropWhileRef(java.util.stream.AbstractPipeline<?, T, ?>, java.util.function.Predicate<? super T>);
  static java.util.stream.IntStream makeDropWhileInt(java.util.stream.AbstractPipeline<?, java.lang.Integer, ?>, java.util.function.IntPredicate);
  static java.util.stream.LongStream makeDropWhileLong(java.util.stream.AbstractPipeline<?, java.lang.Long, ?>, java.util.function.LongPredicate);
  static java.util.stream.DoubleStream makeDropWhileDouble(java.util.stream.AbstractPipeline<?, java.lang.Double, ?>, java.util.function.DoublePredicate);
  static {};
}
