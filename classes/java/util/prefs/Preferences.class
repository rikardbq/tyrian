Compiled from "Preferences.java"
public abstract class java.util.prefs.Preferences {
  public static final int MAX_KEY_LENGTH;
  public static final int MAX_VALUE_LENGTH;
  public static final int MAX_NAME_LENGTH;
  public static java.util.prefs.Preferences userNodeForPackage(java.lang.Class<?>);
  public static java.util.prefs.Preferences systemNodeForPackage(java.lang.Class<?>);
  public static java.util.prefs.Preferences userRoot();
  public static java.util.prefs.Preferences systemRoot();
  protected java.util.prefs.Preferences();
  public abstract void put(java.lang.String, java.lang.String);
  public abstract java.lang.String get(java.lang.String, java.lang.String);
  public abstract void remove(java.lang.String);
  public abstract void clear() throws java.util.prefs.BackingStoreException;
  public abstract void putInt(java.lang.String, int);
  public abstract int getInt(java.lang.String, int);
  public abstract void putLong(java.lang.String, long);
  public abstract long getLong(java.lang.String, long);
  public abstract void putBoolean(java.lang.String, boolean);
  public abstract boolean getBoolean(java.lang.String, boolean);
  public abstract void putFloat(java.lang.String, float);
  public abstract float getFloat(java.lang.String, float);
  public abstract void putDouble(java.lang.String, double);
  public abstract double getDouble(java.lang.String, double);
  public abstract void putByteArray(java.lang.String, byte[]);
  public abstract byte[] getByteArray(java.lang.String, byte[]);
  public abstract java.lang.String[] keys() throws java.util.prefs.BackingStoreException;
  public abstract java.lang.String[] childrenNames() throws java.util.prefs.BackingStoreException;
  public abstract java.util.prefs.Preferences parent();
  public abstract java.util.prefs.Preferences node(java.lang.String);
  public abstract boolean nodeExists(java.lang.String) throws java.util.prefs.BackingStoreException;
  public abstract void removeNode() throws java.util.prefs.BackingStoreException;
  public abstract java.lang.String name();
  public abstract java.lang.String absolutePath();
  public abstract boolean isUserNode();
  public abstract java.lang.String toString();
  public abstract void flush() throws java.util.prefs.BackingStoreException;
  public abstract void sync() throws java.util.prefs.BackingStoreException;
  public abstract void addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener);
  public abstract void removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener);
  public abstract void addNodeChangeListener(java.util.prefs.NodeChangeListener);
  public abstract void removeNodeChangeListener(java.util.prefs.NodeChangeListener);
  public abstract void exportNode(java.io.OutputStream) throws java.io.IOException, java.util.prefs.BackingStoreException;
  public abstract void exportSubtree(java.io.OutputStream) throws java.io.IOException, java.util.prefs.BackingStoreException;
  public static void importPreferences(java.io.InputStream) throws java.io.IOException, java.util.prefs.InvalidPreferencesFormatException;
  static {};
}
