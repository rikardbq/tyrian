Compiled from "Spliterators.java"
public final class java.util.Spliterators {
  public static <T> java.util.Spliterator<T> emptySpliterator();
  public static java.util.Spliterator$OfInt emptyIntSpliterator();
  public static java.util.Spliterator$OfLong emptyLongSpliterator();
  public static java.util.Spliterator$OfDouble emptyDoubleSpliterator();
  public static <T> java.util.Spliterator<T> spliterator(java.lang.Object[], int);
  public static <T> java.util.Spliterator<T> spliterator(java.lang.Object[], int, int, int);
  public static java.util.Spliterator$OfInt spliterator(int[], int);
  public static java.util.Spliterator$OfInt spliterator(int[], int, int, int);
  public static java.util.Spliterator$OfLong spliterator(long[], int);
  public static java.util.Spliterator$OfLong spliterator(long[], int, int, int);
  public static java.util.Spliterator$OfDouble spliterator(double[], int);
  public static java.util.Spliterator$OfDouble spliterator(double[], int, int, int);
  public static <T> java.util.Spliterator<T> spliterator(java.util.Collection<? extends T>, int);
  public static <T> java.util.Spliterator<T> spliterator(java.util.Iterator<? extends T>, long, int);
  public static <T> java.util.Spliterator<T> spliteratorUnknownSize(java.util.Iterator<? extends T>, int);
  public static java.util.Spliterator$OfInt spliterator(java.util.PrimitiveIterator$OfInt, long, int);
  public static java.util.Spliterator$OfInt spliteratorUnknownSize(java.util.PrimitiveIterator$OfInt, int);
  public static java.util.Spliterator$OfLong spliterator(java.util.PrimitiveIterator$OfLong, long, int);
  public static java.util.Spliterator$OfLong spliteratorUnknownSize(java.util.PrimitiveIterator$OfLong, int);
  public static java.util.Spliterator$OfDouble spliterator(java.util.PrimitiveIterator$OfDouble, long, int);
  public static java.util.Spliterator$OfDouble spliteratorUnknownSize(java.util.PrimitiveIterator$OfDouble, int);
  public static <T> java.util.Iterator<T> iterator(java.util.Spliterator<? extends T>);
  public static java.util.PrimitiveIterator$OfInt iterator(java.util.Spliterator$OfInt);
  public static java.util.PrimitiveIterator$OfLong iterator(java.util.Spliterator$OfLong);
  public static java.util.PrimitiveIterator$OfDouble iterator(java.util.Spliterator$OfDouble);
  static {};
}
