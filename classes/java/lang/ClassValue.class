Compiled from "ClassValue.java"
public abstract class java.lang.ClassValue<T> {
  final int hashCodeForCache;
  static final int HASH_MASK;
  final java.lang.ClassValue$Identity identity;
  protected java.lang.ClassValue();
  protected abstract T computeValue(java.lang.Class<?>);
  public T get(java.lang.Class<?>);
  public void remove(java.lang.Class<?>);
  void put(java.lang.Class<?>, T);
  java.lang.ClassValue$Entry<T> castEntry(java.lang.ClassValue$Entry<?>);
  boolean match(java.lang.ClassValue$Entry<?>);
  java.lang.ClassValue$Version<T> version();
  void bumpVersion();
  static <T> java.lang.ClassValue$Entry<T> makeEntry(java.lang.ClassValue$Version<T>, T);
  static {};
}
