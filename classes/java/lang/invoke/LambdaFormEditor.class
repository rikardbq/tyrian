Compiled from "LambdaFormEditor.java"
class java.lang.invoke.LambdaFormEditor {
  final java.lang.invoke.LambdaForm lambdaForm;
  static final boolean $assertionsDisabled;
  static java.lang.invoke.LambdaFormEditor lambdaFormEditor(java.lang.invoke.LambdaForm);
  java.lang.invoke.BoundMethodHandle bindArgumentL(java.lang.invoke.BoundMethodHandle, int, java.lang.Object);
  java.lang.invoke.BoundMethodHandle bindArgumentI(java.lang.invoke.BoundMethodHandle, int, int);
  java.lang.invoke.BoundMethodHandle bindArgumentJ(java.lang.invoke.BoundMethodHandle, int, long);
  java.lang.invoke.BoundMethodHandle bindArgumentF(java.lang.invoke.BoundMethodHandle, int, float);
  java.lang.invoke.BoundMethodHandle bindArgumentD(java.lang.invoke.BoundMethodHandle, int, double);
  java.lang.invoke.LambdaForm bindArgumentForm(int);
  java.lang.invoke.LambdaForm addArgumentForm(int, java.lang.invoke.LambdaForm$BasicType);
  java.lang.invoke.LambdaForm dupArgumentForm(int, int);
  java.lang.invoke.LambdaForm spreadArgumentsForm(int, java.lang.Class<?>, int);
  java.lang.invoke.LambdaForm collectArgumentsForm(int, java.lang.invoke.MethodType);
  java.lang.invoke.LambdaForm collectArgumentArrayForm(int, java.lang.invoke.MethodHandle);
  java.lang.invoke.LambdaForm filterArgumentForm(int, java.lang.invoke.LambdaForm$BasicType);
  java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType, boolean);
  java.lang.invoke.LambdaForm foldArgumentsForm(int, boolean, java.lang.invoke.MethodType);
  java.lang.invoke.LambdaForm foldArgumentsForm(int, boolean, java.lang.invoke.MethodType, int...);
  java.lang.invoke.LambdaForm permuteArgumentsForm(int, int[]);
  java.lang.invoke.LambdaForm noteLoopLocalTypesForm(int, java.lang.invoke.LambdaForm$BasicType[]);
  static boolean permutedTypesMatch(int[], java.lang.invoke.LambdaForm$BasicType[], java.lang.invoke.LambdaForm$Name[], int);
  static {};
}
