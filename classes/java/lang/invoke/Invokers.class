Compiled from "Invokers.java"
class java.lang.invoke.Invokers {
  static final int INV_EXACT;
  static final int INV_GENERIC;
  static final int INV_BASIC;
  static final int INV_LIMIT;
  static final boolean $assertionsDisabled;
  java.lang.invoke.Invokers(java.lang.invoke.MethodType);
  java.lang.invoke.MethodHandle exactInvoker();
  java.lang.invoke.MethodHandle genericInvoker();
  java.lang.invoke.MethodHandle basicInvoker();
  java.lang.invoke.MethodHandle varHandleMethodInvoker(java.lang.invoke.VarHandle$AccessMode);
  java.lang.invoke.MethodHandle varHandleMethodExactInvoker(java.lang.invoke.VarHandle$AccessMode);
  static java.lang.invoke.MemberName invokeBasicMethod(java.lang.invoke.MethodType);
  java.lang.invoke.MethodHandle spreadInvoker(int);
  public java.lang.String toString();
  static java.lang.invoke.MemberName methodHandleInvokeLinkerMethod(java.lang.String, java.lang.invoke.MethodType, java.lang.Object[]);
  static java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType, boolean, int);
  static java.lang.invoke.MemberName varHandleInvokeLinkerMethod(java.lang.invoke.VarHandle$AccessMode, java.lang.invoke.MethodType);
  static java.lang.invoke.MethodHandle checkVarHandleGenericType(java.lang.invoke.VarHandle, java.lang.invoke.VarHandle$AccessDescriptor);
  static java.lang.invoke.MethodHandle checkVarHandleExactType(java.lang.invoke.VarHandle, java.lang.invoke.VarHandle$AccessDescriptor);
  static java.lang.invoke.WrongMethodTypeException newWrongMethodTypeException(java.lang.invoke.MethodType, java.lang.invoke.MethodType);
  static void checkExactType(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType);
  static java.lang.invoke.MethodHandle checkGenericType(java.lang.invoke.MethodHandle, java.lang.invoke.MethodType);
  static java.lang.invoke.MemberName linkToCallSiteMethod(java.lang.invoke.MethodType);
  static java.lang.invoke.MemberName linkToTargetMethod(java.lang.invoke.MethodType);
  static java.lang.invoke.LambdaForm callSiteForm(java.lang.invoke.MethodType, boolean);
  static java.lang.invoke.MethodHandle getCallSiteTarget(java.lang.invoke.CallSite);
  static void checkCustomized(java.lang.invoke.MethodHandle);
  static void maybeCustomize(java.lang.invoke.MethodHandle);
  static {};
}
