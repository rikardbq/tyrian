Compiled from "MethodTypeForm.java"
final class java.lang.invoke.MethodTypeForm {
  final int[] argToSlotTable;
  final int[] slotToArgTable;
  final long argCounts;
  final long primCounts;
  final java.lang.invoke.MethodType erasedType;
  final java.lang.invoke.MethodType basicType;
  final java.lang.ref.SoftReference<java.lang.invoke.MethodHandle>[] methodHandles;
  static final int MH_BASIC_INV;
  static final int MH_NF_INV;
  static final int MH_UNINIT_CS;
  static final int MH_LIMIT;
  final java.lang.ref.SoftReference<java.lang.invoke.LambdaForm>[] lambdaForms;
  static final int LF_INVVIRTUAL;
  static final int LF_INVSTATIC;
  static final int LF_INVSPECIAL;
  static final int LF_NEWINVSPECIAL;
  static final int LF_INVINTERFACE;
  static final int LF_INVSTATIC_INIT;
  static final int LF_INTERPRET;
  static final int LF_REBIND;
  static final int LF_DELEGATE;
  static final int LF_DELEGATE_BLOCK_INLINING;
  static final int LF_EX_LINKER;
  static final int LF_EX_INVOKER;
  static final int LF_GEN_LINKER;
  static final int LF_GEN_INVOKER;
  static final int LF_CS_LINKER;
  static final int LF_MH_LINKER;
  static final int LF_GWC;
  static final int LF_GWT;
  static final int LF_TF;
  static final int LF_LOOP;
  static final int LF_INVSPECIAL_IFC;
  static final int LF_LIMIT;
  public static final int NO_CHANGE;
  public static final int ERASE;
  public static final int WRAP;
  public static final int UNWRAP;
  public static final int INTS;
  public static final int LONGS;
  public static final int RAW_RETURN;
  static final boolean $assertionsDisabled;
  public java.lang.invoke.MethodType erasedType();
  public java.lang.invoke.MethodType basicType();
  public java.lang.invoke.MethodHandle cachedMethodHandle(int);
  public synchronized java.lang.invoke.MethodHandle setCachedMethodHandle(int, java.lang.invoke.MethodHandle);
  public java.lang.invoke.LambdaForm cachedLambdaForm(int);
  public synchronized java.lang.invoke.LambdaForm setCachedLambdaForm(int, java.lang.invoke.LambdaForm);
  protected java.lang.invoke.MethodTypeForm(java.lang.invoke.MethodType);
  public int parameterCount();
  public int parameterSlotCount();
  public int returnCount();
  public int returnSlotCount();
  public int primitiveParameterCount();
  public int longPrimitiveParameterCount();
  public int primitiveReturnCount();
  public int longPrimitiveReturnCount();
  public boolean hasPrimitives();
  public boolean hasNonVoidPrimitives();
  public boolean hasLongPrimitives();
  public int parameterToArgSlot(int);
  public int argSlotToParameter(int);
  static java.lang.invoke.MethodTypeForm findForm(java.lang.invoke.MethodType);
  public static java.lang.invoke.MethodType canonicalize(java.lang.invoke.MethodType, int, int);
  static java.lang.Class<?> canonicalize(java.lang.Class<?>, int);
  static java.lang.Class<?>[] canonicalizeAll(java.lang.Class<?>[], int);
  public java.lang.String toString();
  static {};
}
