Compiled from "AbstractValidatingLambdaMetafactory.java"
abstract class java.lang.invoke.AbstractValidatingLambdaMetafactory {
  final java.lang.Class<?> targetClass;
  final java.lang.invoke.MethodType invokedType;
  final java.lang.Class<?> samBase;
  final java.lang.String samMethodName;
  final java.lang.invoke.MethodType samMethodType;
  final java.lang.invoke.MethodHandle implMethod;
  final java.lang.invoke.MethodType implMethodType;
  final java.lang.invoke.MethodHandleInfo implInfo;
  final int implKind;
  final boolean implIsInstanceMethod;
  final java.lang.Class<?> implClass;
  final java.lang.invoke.MethodType instantiatedMethodType;
  final boolean isSerializable;
  final java.lang.Class<?>[] markerInterfaces;
  final java.lang.invoke.MethodType[] additionalBridges;
  java.lang.invoke.AbstractValidatingLambdaMetafactory(java.lang.invoke.MethodHandles$Lookup, java.lang.invoke.MethodType, java.lang.String, java.lang.invoke.MethodType, java.lang.invoke.MethodHandle, java.lang.invoke.MethodType, boolean, java.lang.Class<?>[], java.lang.invoke.MethodType[]) throws java.lang.invoke.LambdaConversionException;
  abstract java.lang.invoke.CallSite buildCallSite() throws java.lang.invoke.LambdaConversionException;
  void validateMetafactoryArgs() throws java.lang.invoke.LambdaConversionException;
}
