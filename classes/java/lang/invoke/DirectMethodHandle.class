Compiled from "DirectMethodHandle.java"
class java.lang.invoke.DirectMethodHandle extends java.lang.invoke.MethodHandle {
  final java.lang.invoke.MemberName member;
  static final byte AF_GETFIELD;
  static final byte AF_PUTFIELD;
  static final byte AF_GETSTATIC;
  static final byte AF_PUTSTATIC;
  static final byte AF_GETSTATIC_INIT;
  static final byte AF_PUTSTATIC_INIT;
  static final byte AF_LIMIT;
  static final int FT_LAST_WRAPPER;
  static final int FT_UNCHECKED_REF;
  static final int FT_CHECKED_REF;
  static final int FT_LIMIT;
  static final byte NF_internalMemberName;
  static final byte NF_internalMemberNameEnsureInit;
  static final byte NF_ensureInitialized;
  static final byte NF_fieldOffset;
  static final byte NF_checkBase;
  static final byte NF_staticBase;
  static final byte NF_staticOffset;
  static final byte NF_checkCast;
  static final byte NF_allocateInstance;
  static final byte NF_constructorMethod;
  static final byte NF_UNSAFE;
  static final byte NF_checkReceiver;
  static final byte NF_LIMIT;
  static final boolean $assertionsDisabled;
  static java.lang.invoke.DirectMethodHandle make(byte, java.lang.Class<?>, java.lang.invoke.MemberName, java.lang.Class<?>);
  static java.lang.invoke.DirectMethodHandle make(java.lang.Class<?>, java.lang.invoke.MemberName);
  static java.lang.invoke.DirectMethodHandle make(java.lang.invoke.MemberName);
  java.lang.invoke.BoundMethodHandle rebind();
  java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType, java.lang.invoke.LambdaForm);
  java.lang.String internalProperties();
  java.lang.invoke.MemberName internalMemberName();
  static java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType, int);
  static java.lang.Object findDirectMethodHandle(java.lang.invoke.LambdaForm$Name);
  static java.lang.Object internalMemberName(java.lang.Object);
  static java.lang.Object internalMemberNameEnsureInit(java.lang.Object);
  static boolean shouldBeInitialized(java.lang.invoke.MemberName);
  static void ensureInitialized(java.lang.Object);
  java.lang.Object checkReceiver(java.lang.Object);
  static java.lang.Object constructorMethod(java.lang.Object);
  static java.lang.Object allocateInstance(java.lang.Object) throws java.lang.InstantiationException;
  static long fieldOffset(java.lang.Object);
  static java.lang.Object checkBase(java.lang.Object);
  static java.lang.Object nullCheck(java.lang.Object);
  static java.lang.Object staticBase(java.lang.Object);
  static long staticOffset(java.lang.Object);
  static java.lang.Object checkCast(java.lang.Object, java.lang.Object);
  java.lang.Object checkCast(java.lang.Object);
  static int ftypeKind(java.lang.Class<?>);
  static java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte, boolean, int);
  java.lang.Object internalProperties();
  static {};
}
