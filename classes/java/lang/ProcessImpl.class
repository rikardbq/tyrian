Compiled from "ProcessImpl.java"
final class java.lang.ProcessImpl extends java.lang.Process {
  static final boolean SUPPORTS_NORMAL_TERMINATION;
  static final boolean $assertionsDisabled;
  static java.lang.Process start(java.lang.String[], java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.ProcessBuilder$Redirect[], boolean) throws java.io.IOException;
  static java.io.FileDescriptor newFileDescriptor(int);
  void initStreams(int[], boolean) throws java.io.IOException;
  public java.io.OutputStream getOutputStream();
  public java.io.InputStream getInputStream();
  public java.io.InputStream getErrorStream();
  public synchronized int waitFor() throws java.lang.InterruptedException;
  public synchronized boolean waitFor(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
  public synchronized int exitValue();
  public java.util.concurrent.CompletableFuture<java.lang.Process> onExit();
  public java.lang.ProcessHandle toHandle();
  public boolean supportsNormalTermination();
  public void destroy();
  public java.lang.Process destroyForcibly();
  public long pid();
  public synchronized boolean isAlive();
  public java.lang.String toString();
  static {};
}
