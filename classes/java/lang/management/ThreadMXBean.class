Compiled from "ThreadMXBean.java"
public interface java.lang.management.ThreadMXBean extends java.lang.management.PlatformManagedObject {
  public abstract int getThreadCount();
  public abstract int getPeakThreadCount();
  public abstract long getTotalStartedThreadCount();
  public abstract int getDaemonThreadCount();
  public abstract long[] getAllThreadIds();
  public abstract java.lang.management.ThreadInfo getThreadInfo(long);
  public abstract java.lang.management.ThreadInfo[] getThreadInfo(long[]);
  public abstract java.lang.management.ThreadInfo getThreadInfo(long, int);
  public abstract java.lang.management.ThreadInfo[] getThreadInfo(long[], int);
  public abstract boolean isThreadContentionMonitoringSupported();
  public abstract boolean isThreadContentionMonitoringEnabled();
  public abstract void setThreadContentionMonitoringEnabled(boolean);
  public abstract long getCurrentThreadCpuTime();
  public abstract long getCurrentThreadUserTime();
  public abstract long getThreadCpuTime(long);
  public abstract long getThreadUserTime(long);
  public abstract boolean isThreadCpuTimeSupported();
  public abstract boolean isCurrentThreadCpuTimeSupported();
  public abstract boolean isThreadCpuTimeEnabled();
  public abstract void setThreadCpuTimeEnabled(boolean);
  public abstract long[] findMonitorDeadlockedThreads();
  public abstract void resetPeakThreadCount();
  public abstract long[] findDeadlockedThreads();
  public abstract boolean isObjectMonitorUsageSupported();
  public abstract boolean isSynchronizerUsageSupported();
  public abstract java.lang.management.ThreadInfo[] getThreadInfo(long[], boolean, boolean);
  public default java.lang.management.ThreadInfo[] getThreadInfo(long[], boolean, boolean, int);
  public abstract java.lang.management.ThreadInfo[] dumpAllThreads(boolean, boolean);
  public default java.lang.management.ThreadInfo[] dumpAllThreads(boolean, boolean, int);
}
