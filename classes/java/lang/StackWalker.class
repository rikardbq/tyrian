Compiled from "StackWalker.java"
public final class java.lang.StackWalker {
  static final java.util.EnumSet<java.lang.StackWalker$Option> DEFAULT_EMPTY_OPTION;
  final boolean retainClassRef;
  public static java.lang.StackWalker getInstance();
  public static java.lang.StackWalker getInstance(java.lang.StackWalker$Option);
  public static java.lang.StackWalker getInstance(java.util.Set<java.lang.StackWalker$Option>);
  public static java.lang.StackWalker getInstance(java.util.Set<java.lang.StackWalker$Option>, int);
  public <T> T walk(java.util.function.Function<? super java.util.stream.Stream<java.lang.StackWalker$StackFrame>, ? extends T>);
  public void forEach(java.util.function.Consumer<? super java.lang.StackWalker$StackFrame>);
  public java.lang.Class<?> getCallerClass();
  static java.lang.StackWalker newInstance(java.util.Set<java.lang.StackWalker$Option>, java.lang.StackWalker$ExtendedOption);
  int estimateDepth();
  boolean hasOption(java.lang.StackWalker$Option);
  boolean hasLocalsOperandsOption();
  static {};
}
