Compiled from "ThreadGroup.java"
public class java.lang.ThreadGroup implements java.lang.Thread$UncaughtExceptionHandler {
  java.lang.String name;
  int maxPriority;
  boolean destroyed;
  boolean daemon;
  int nUnstartedThreads;
  int nthreads;
  java.lang.Thread[] threads;
  int ngroups;
  java.lang.ThreadGroup[] groups;
  public java.lang.ThreadGroup(java.lang.String);
  public java.lang.ThreadGroup(java.lang.ThreadGroup, java.lang.String);
  public final java.lang.String getName();
  public final java.lang.ThreadGroup getParent();
  public final int getMaxPriority();
  public final boolean isDaemon();
  public synchronized boolean isDestroyed();
  public final void setDaemon(boolean);
  public final void setMaxPriority(int);
  public final boolean parentOf(java.lang.ThreadGroup);
  public final void checkAccess();
  public int activeCount();
  public int enumerate(java.lang.Thread[]);
  public int enumerate(java.lang.Thread[], boolean);
  public int activeGroupCount();
  public int enumerate(java.lang.ThreadGroup[]);
  public int enumerate(java.lang.ThreadGroup[], boolean);
  public final void stop();
  public final void interrupt();
  public final void suspend();
  public final void resume();
  public final void destroy();
  void addUnstarted();
  void add(java.lang.Thread);
  void threadStartFailed(java.lang.Thread);
  void threadTerminated(java.lang.Thread);
  public void list();
  void list(java.io.PrintStream, int);
  public void uncaughtException(java.lang.Thread, java.lang.Throwable);
  public boolean allowThreadSuspension(boolean);
  public java.lang.String toString();
}
