Compiled from "ModuleDescriptor.java"
public class java.lang.module.ModuleDescriptor implements java.lang.Comparable<java.lang.module.ModuleDescriptor> {
  static final boolean $assertionsDisabled;
  java.lang.module.ModuleDescriptor(java.lang.String, java.lang.module.ModuleDescriptor$Version, java.util.Set<java.lang.module.ModuleDescriptor$Modifier>, java.util.Set<java.lang.module.ModuleDescriptor$Requires>, java.util.Set<java.lang.module.ModuleDescriptor$Exports>, java.util.Set<java.lang.module.ModuleDescriptor$Opens>, java.util.Set<java.lang.String>, java.util.Set<java.lang.module.ModuleDescriptor$Provides>, java.util.Set<java.lang.String>, java.lang.String, int, boolean);
  public java.lang.String name();
  public java.util.Set<java.lang.module.ModuleDescriptor$Modifier> modifiers();
  public boolean isOpen();
  public boolean isAutomatic();
  public java.util.Set<java.lang.module.ModuleDescriptor$Requires> requires();
  public java.util.Set<java.lang.module.ModuleDescriptor$Exports> exports();
  public java.util.Set<java.lang.module.ModuleDescriptor$Opens> opens();
  public java.util.Set<java.lang.String> uses();
  public java.util.Set<java.lang.module.ModuleDescriptor$Provides> provides();
  public java.util.Optional<java.lang.module.ModuleDescriptor$Version> version();
  public java.util.Optional<java.lang.String> rawVersion();
  public java.lang.String toNameAndVersion();
  public java.util.Optional<java.lang.String> mainClass();
  public java.util.Set<java.lang.String> packages();
  public int compareTo(java.lang.module.ModuleDescriptor);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  public static java.lang.module.ModuleDescriptor$Builder newModule(java.lang.String, java.util.Set<java.lang.module.ModuleDescriptor$Modifier>);
  public static java.lang.module.ModuleDescriptor$Builder newModule(java.lang.String);
  public static java.lang.module.ModuleDescriptor$Builder newOpenModule(java.lang.String);
  public static java.lang.module.ModuleDescriptor$Builder newAutomaticModule(java.lang.String);
  public static java.lang.module.ModuleDescriptor read(java.io.InputStream, java.util.function.Supplier<java.util.Set<java.lang.String>>) throws java.io.IOException;
  public static java.lang.module.ModuleDescriptor read(java.io.InputStream) throws java.io.IOException;
  public static java.lang.module.ModuleDescriptor read(java.nio.ByteBuffer, java.util.function.Supplier<java.util.Set<java.lang.String>>);
  public static java.lang.module.ModuleDescriptor read(java.nio.ByteBuffer);
  public int compareTo(java.lang.Object);
  static {};
}
