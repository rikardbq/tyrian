Compiled from "Introspector.java"
public class java.beans.Introspector {
  public static final int USE_ALL_BEANINFO;
  public static final int IGNORE_IMMEDIATE_BEANINFO;
  public static final int IGNORE_ALL_BEANINFO;
  static final java.lang.String ADD_PREFIX;
  static final java.lang.String REMOVE_PREFIX;
  static final java.lang.String GET_PREFIX;
  static final java.lang.String SET_PREFIX;
  static final java.lang.String IS_PREFIX;
  public static java.beans.BeanInfo getBeanInfo(java.lang.Class<?>) throws java.beans.IntrospectionException;
  public static java.beans.BeanInfo getBeanInfo(java.lang.Class<?>, int) throws java.beans.IntrospectionException;
  public static java.beans.BeanInfo getBeanInfo(java.lang.Class<?>, java.lang.Class<?>) throws java.beans.IntrospectionException;
  public static java.beans.BeanInfo getBeanInfo(java.lang.Class<?>, java.lang.Class<?>, int) throws java.beans.IntrospectionException;
  public static java.lang.String decapitalize(java.lang.String);
  public static java.lang.String[] getBeanInfoSearchPath();
  public static void setBeanInfoSearchPath(java.lang.String[]);
  public static void flushCaches();
  public static void flushFromCaches(java.lang.Class<?>);
  static java.lang.reflect.Method findMethod(java.lang.Class<?>, java.lang.String, int);
  static java.lang.reflect.Method findMethod(java.lang.Class<?>, java.lang.String, int, java.lang.Class<?>[]);
  static boolean isSubclass(java.lang.Class<?>, java.lang.Class<?>);
  static java.lang.Object instantiate(java.lang.Class<?>, java.lang.String) throws java.lang.InstantiationException, java.lang.IllegalAccessException, java.lang.NoSuchMethodException, java.lang.reflect.InvocationTargetException, java.lang.ClassNotFoundException;
  static {};
}
