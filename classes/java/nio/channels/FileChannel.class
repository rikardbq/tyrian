Compiled from "FileChannel.java"
public abstract class java.nio.channels.FileChannel extends java.nio.channels.spi.AbstractInterruptibleChannel implements java.nio.channels.SeekableByteChannel,java.nio.channels.GatheringByteChannel,java.nio.channels.ScatteringByteChannel {
  protected java.nio.channels.FileChannel();
  public static java.nio.channels.FileChannel open(java.nio.file.Path, java.util.Set<? extends java.nio.file.OpenOption>, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;
  public static java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) throws java.io.IOException;
  public abstract int read(java.nio.ByteBuffer) throws java.io.IOException;
  public abstract long read(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
  public final long read(java.nio.ByteBuffer[]) throws java.io.IOException;
  public abstract int write(java.nio.ByteBuffer) throws java.io.IOException;
  public abstract long write(java.nio.ByteBuffer[], int, int) throws java.io.IOException;
  public final long write(java.nio.ByteBuffer[]) throws java.io.IOException;
  public abstract long position() throws java.io.IOException;
  public abstract java.nio.channels.FileChannel position(long) throws java.io.IOException;
  public abstract long size() throws java.io.IOException;
  public abstract java.nio.channels.FileChannel truncate(long) throws java.io.IOException;
  public abstract void force(boolean) throws java.io.IOException;
  public abstract long transferTo(long, long, java.nio.channels.WritableByteChannel) throws java.io.IOException;
  public abstract long transferFrom(java.nio.channels.ReadableByteChannel, long, long) throws java.io.IOException;
  public abstract int read(java.nio.ByteBuffer, long) throws java.io.IOException;
  public abstract int write(java.nio.ByteBuffer, long) throws java.io.IOException;
  public abstract java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode, long, long) throws java.io.IOException;
  public abstract java.nio.channels.FileLock lock(long, long, boolean) throws java.io.IOException;
  public final java.nio.channels.FileLock lock() throws java.io.IOException;
  public abstract java.nio.channels.FileLock tryLock(long, long, boolean) throws java.io.IOException;
  public final java.nio.channels.FileLock tryLock() throws java.io.IOException;
  public java.nio.channels.SeekableByteChannel truncate(long) throws java.io.IOException;
  public java.nio.channels.SeekableByteChannel position(long) throws java.io.IOException;
  static {};
}
