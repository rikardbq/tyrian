Compiled from "DatagramSocket.java"
public class java.net.DatagramSocket implements java.io.Closeable {
  java.net.DatagramSocketImpl impl;
  boolean oldImpl;
  static final int ST_NOT_CONNECTED;
  static final int ST_CONNECTED;
  static final int ST_CONNECTED_NO_IMPL;
  int connectState;
  java.net.InetAddress connectedAddress;
  int connectedPort;
  static java.lang.Class<?> implClass;
  static java.net.DatagramSocketImplFactory factory;
  public java.net.DatagramSocket() throws java.net.SocketException;
  protected java.net.DatagramSocket(java.net.DatagramSocketImpl);
  public java.net.DatagramSocket(java.net.SocketAddress) throws java.net.SocketException;
  public java.net.DatagramSocket(int) throws java.net.SocketException;
  public java.net.DatagramSocket(int, java.net.InetAddress) throws java.net.SocketException;
  void createImpl() throws java.net.SocketException;
  java.net.DatagramSocketImpl getImpl() throws java.net.SocketException;
  public synchronized void bind(java.net.SocketAddress) throws java.net.SocketException;
  void checkAddress(java.net.InetAddress, java.lang.String);
  public void connect(java.net.InetAddress, int);
  public void connect(java.net.SocketAddress) throws java.net.SocketException;
  public void disconnect();
  public boolean isBound();
  public boolean isConnected();
  public java.net.InetAddress getInetAddress();
  public int getPort();
  public java.net.SocketAddress getRemoteSocketAddress();
  public java.net.SocketAddress getLocalSocketAddress();
  public void send(java.net.DatagramPacket) throws java.io.IOException;
  public synchronized void receive(java.net.DatagramPacket) throws java.io.IOException;
  public java.net.InetAddress getLocalAddress();
  public int getLocalPort();
  public synchronized void setSoTimeout(int) throws java.net.SocketException;
  public synchronized int getSoTimeout() throws java.net.SocketException;
  public synchronized void setSendBufferSize(int) throws java.net.SocketException;
  public synchronized int getSendBufferSize() throws java.net.SocketException;
  public synchronized void setReceiveBufferSize(int) throws java.net.SocketException;
  public synchronized int getReceiveBufferSize() throws java.net.SocketException;
  public synchronized void setReuseAddress(boolean) throws java.net.SocketException;
  public synchronized boolean getReuseAddress() throws java.net.SocketException;
  public synchronized void setBroadcast(boolean) throws java.net.SocketException;
  public synchronized boolean getBroadcast() throws java.net.SocketException;
  public synchronized void setTrafficClass(int) throws java.net.SocketException;
  public synchronized int getTrafficClass() throws java.net.SocketException;
  public void close();
  public boolean isClosed();
  public java.nio.channels.DatagramChannel getChannel();
  public static synchronized void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory) throws java.io.IOException;
  public <T> java.net.DatagramSocket setOption(java.net.SocketOption<T>, T) throws java.io.IOException;
  public <T> T getOption(java.net.SocketOption<T>) throws java.io.IOException;
  public java.util.Set<java.net.SocketOption<?>> supportedOptions();
  static {};
}
