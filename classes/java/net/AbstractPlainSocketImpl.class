Compiled from "AbstractPlainSocketImpl.java"
abstract class java.net.AbstractPlainSocketImpl extends java.net.SocketImpl {
  int timeout;
  protected int fdUseCount;
  protected final java.lang.Object fdLock;
  protected boolean closePending;
  protected boolean stream;
  public static final int SHUT_RD;
  public static final int SHUT_WR;
  java.net.AbstractPlainSocketImpl();
  static boolean isReusePortAvailable();
  protected java.util.Set<java.net.SocketOption<?>> supportedOptions();
  protected synchronized void create(boolean) throws java.io.IOException;
  protected void connect(java.lang.String, int) throws java.net.UnknownHostException, java.io.IOException;
  protected void connect(java.net.InetAddress, int) throws java.io.IOException;
  protected void connect(java.net.SocketAddress, int) throws java.io.IOException;
  public void setOption(int, java.lang.Object) throws java.net.SocketException;
  public java.lang.Object getOption(int) throws java.net.SocketException;
  synchronized void doConnect(java.net.InetAddress, int, int) throws java.io.IOException;
  protected synchronized void bind(java.net.InetAddress, int) throws java.io.IOException;
  protected synchronized void listen(int) throws java.io.IOException;
  protected void accept(java.net.SocketImpl) throws java.io.IOException;
  protected synchronized java.io.InputStream getInputStream() throws java.io.IOException;
  void setInputStream(java.net.SocketInputStream);
  protected synchronized java.io.OutputStream getOutputStream() throws java.io.IOException;
  void setFileDescriptor(java.io.FileDescriptor);
  void setAddress(java.net.InetAddress);
  void setPort(int);
  void setLocalPort(int);
  protected synchronized int available() throws java.io.IOException;
  protected void close() throws java.io.IOException;
  void reset() throws java.io.IOException;
  protected void shutdownInput() throws java.io.IOException;
  protected void shutdownOutput() throws java.io.IOException;
  protected boolean supportsUrgentData();
  protected void sendUrgentData(int) throws java.io.IOException;
  java.io.FileDescriptor acquireFD();
  void releaseFD();
  boolean isConnectionReset();
  void setConnectionReset();
  public boolean isClosedOrPending();
  public int getTimeout();
  protected void socketClose() throws java.io.IOException;
  abstract void socketCreate(boolean) throws java.io.IOException;
  abstract void socketConnect(java.net.InetAddress, int, int) throws java.io.IOException;
  abstract void socketBind(java.net.InetAddress, int) throws java.io.IOException;
  abstract void socketListen(int) throws java.io.IOException;
  abstract void socketAccept(java.net.SocketImpl) throws java.io.IOException;
  abstract int socketAvailable() throws java.io.IOException;
  abstract void socketClose0(boolean) throws java.io.IOException;
  abstract void socketShutdown(int) throws java.io.IOException;
  abstract void socketSetOption(int, boolean, java.lang.Object) throws java.net.SocketException;
  abstract int socketGetOption(int, java.lang.Object) throws java.net.SocketException;
  abstract void socketSendUrgentData(int) throws java.io.IOException;
  static {};
}
