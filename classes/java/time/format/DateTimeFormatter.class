Compiled from "DateTimeFormatter.java"
public final class java.time.format.DateTimeFormatter {
  public static final java.time.format.DateTimeFormatter ISO_LOCAL_DATE;
  public static final java.time.format.DateTimeFormatter ISO_OFFSET_DATE;
  public static final java.time.format.DateTimeFormatter ISO_DATE;
  public static final java.time.format.DateTimeFormatter ISO_LOCAL_TIME;
  public static final java.time.format.DateTimeFormatter ISO_OFFSET_TIME;
  public static final java.time.format.DateTimeFormatter ISO_TIME;
  public static final java.time.format.DateTimeFormatter ISO_LOCAL_DATE_TIME;
  public static final java.time.format.DateTimeFormatter ISO_OFFSET_DATE_TIME;
  public static final java.time.format.DateTimeFormatter ISO_ZONED_DATE_TIME;
  public static final java.time.format.DateTimeFormatter ISO_DATE_TIME;
  public static final java.time.format.DateTimeFormatter ISO_ORDINAL_DATE;
  public static final java.time.format.DateTimeFormatter ISO_WEEK_DATE;
  public static final java.time.format.DateTimeFormatter ISO_INSTANT;
  public static final java.time.format.DateTimeFormatter BASIC_ISO_DATE;
  public static final java.time.format.DateTimeFormatter RFC_1123_DATE_TIME;
  public static java.time.format.DateTimeFormatter ofPattern(java.lang.String);
  public static java.time.format.DateTimeFormatter ofPattern(java.lang.String, java.util.Locale);
  public static java.time.format.DateTimeFormatter ofLocalizedDate(java.time.format.FormatStyle);
  public static java.time.format.DateTimeFormatter ofLocalizedTime(java.time.format.FormatStyle);
  public static java.time.format.DateTimeFormatter ofLocalizedDateTime(java.time.format.FormatStyle);
  public static java.time.format.DateTimeFormatter ofLocalizedDateTime(java.time.format.FormatStyle, java.time.format.FormatStyle);
  public static final java.time.temporal.TemporalQuery<java.time.Period> parsedExcessDays();
  public static final java.time.temporal.TemporalQuery<java.lang.Boolean> parsedLeapSecond();
  java.time.format.DateTimeFormatter(java.time.format.DateTimeFormatterBuilder$CompositePrinterParser, java.util.Locale, java.time.format.DecimalStyle, java.time.format.ResolverStyle, java.util.Set<java.time.temporal.TemporalField>, java.time.chrono.Chronology, java.time.ZoneId);
  public java.util.Locale getLocale();
  public java.time.format.DateTimeFormatter withLocale(java.util.Locale);
  public java.time.format.DateTimeFormatter localizedBy(java.util.Locale);
  public java.time.format.DecimalStyle getDecimalStyle();
  public java.time.format.DateTimeFormatter withDecimalStyle(java.time.format.DecimalStyle);
  public java.time.chrono.Chronology getChronology();
  public java.time.format.DateTimeFormatter withChronology(java.time.chrono.Chronology);
  public java.time.ZoneId getZone();
  public java.time.format.DateTimeFormatter withZone(java.time.ZoneId);
  public java.time.format.ResolverStyle getResolverStyle();
  public java.time.format.DateTimeFormatter withResolverStyle(java.time.format.ResolverStyle);
  public java.util.Set<java.time.temporal.TemporalField> getResolverFields();
  public java.time.format.DateTimeFormatter withResolverFields(java.time.temporal.TemporalField...);
  public java.time.format.DateTimeFormatter withResolverFields(java.util.Set<java.time.temporal.TemporalField>);
  public java.lang.String format(java.time.temporal.TemporalAccessor);
  public void formatTo(java.time.temporal.TemporalAccessor, java.lang.Appendable);
  public java.time.temporal.TemporalAccessor parse(java.lang.CharSequence);
  public java.time.temporal.TemporalAccessor parse(java.lang.CharSequence, java.text.ParsePosition);
  public <T> T parse(java.lang.CharSequence, java.time.temporal.TemporalQuery<T>);
  public java.time.temporal.TemporalAccessor parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery<?>...);
  public java.time.temporal.TemporalAccessor parseUnresolved(java.lang.CharSequence, java.text.ParsePosition);
  java.time.format.DateTimeFormatterBuilder$CompositePrinterParser toPrinterParser(boolean);
  public java.text.Format toFormat();
  public java.text.Format toFormat(java.time.temporal.TemporalQuery<?>);
  public java.lang.String toString();
  static {};
}
