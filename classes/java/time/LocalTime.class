Compiled from "LocalTime.java"
public final class java.time.LocalTime implements java.time.temporal.Temporal, java.time.temporal.TemporalAdjuster, java.lang.Comparable<java.time.LocalTime>, java.io.Serializable {
  public static final java.time.LocalTime MIN;
  public static final java.time.LocalTime MAX;
  public static final java.time.LocalTime MIDNIGHT;
  public static final java.time.LocalTime NOON;
  static final int HOURS_PER_DAY;
  static final int MINUTES_PER_HOUR;
  static final int MINUTES_PER_DAY;
  static final int SECONDS_PER_MINUTE;
  static final int SECONDS_PER_HOUR;
  static final int SECONDS_PER_DAY;
  static final long MILLIS_PER_DAY;
  static final long MICROS_PER_DAY;
  static final long NANOS_PER_MILLI;
  static final long NANOS_PER_SECOND;
  static final long NANOS_PER_MINUTE;
  static final long NANOS_PER_HOUR;
  static final long NANOS_PER_DAY;
  public static java.time.LocalTime now();
  public static java.time.LocalTime now(java.time.ZoneId);
  public static java.time.LocalTime now(java.time.Clock);
  public static java.time.LocalTime of(int, int);
  public static java.time.LocalTime of(int, int, int);
  public static java.time.LocalTime of(int, int, int, int);
  public static java.time.LocalTime ofInstant(java.time.Instant, java.time.ZoneId);
  public static java.time.LocalTime ofSecondOfDay(long);
  public static java.time.LocalTime ofNanoOfDay(long);
  public static java.time.LocalTime from(java.time.temporal.TemporalAccessor);
  public static java.time.LocalTime parse(java.lang.CharSequence);
  public static java.time.LocalTime parse(java.lang.CharSequence, java.time.format.DateTimeFormatter);
  public boolean isSupported(java.time.temporal.TemporalField);
  public boolean isSupported(java.time.temporal.TemporalUnit);
  public java.time.temporal.ValueRange range(java.time.temporal.TemporalField);
  public int get(java.time.temporal.TemporalField);
  public long getLong(java.time.temporal.TemporalField);
  public int getHour();
  public int getMinute();
  public int getSecond();
  public int getNano();
  public java.time.LocalTime with(java.time.temporal.TemporalAdjuster);
  public java.time.LocalTime with(java.time.temporal.TemporalField, long);
  public java.time.LocalTime withHour(int);
  public java.time.LocalTime withMinute(int);
  public java.time.LocalTime withSecond(int);
  public java.time.LocalTime withNano(int);
  public java.time.LocalTime truncatedTo(java.time.temporal.TemporalUnit);
  public java.time.LocalTime plus(java.time.temporal.TemporalAmount);
  public java.time.LocalTime plus(long, java.time.temporal.TemporalUnit);
  public java.time.LocalTime plusHours(long);
  public java.time.LocalTime plusMinutes(long);
  public java.time.LocalTime plusSeconds(long);
  public java.time.LocalTime plusNanos(long);
  public java.time.LocalTime minus(java.time.temporal.TemporalAmount);
  public java.time.LocalTime minus(long, java.time.temporal.TemporalUnit);
  public java.time.LocalTime minusHours(long);
  public java.time.LocalTime minusMinutes(long);
  public java.time.LocalTime minusSeconds(long);
  public java.time.LocalTime minusNanos(long);
  public <R> R query(java.time.temporal.TemporalQuery<R>);
  public java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal);
  public long until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit);
  public java.lang.String format(java.time.format.DateTimeFormatter);
  public java.time.LocalDateTime atDate(java.time.LocalDate);
  public java.time.OffsetTime atOffset(java.time.ZoneOffset);
  public int toSecondOfDay();
  public long toNanoOfDay();
  public long toEpochSecond(java.time.LocalDate, java.time.ZoneOffset);
  public int compareTo(java.time.LocalTime);
  public boolean isAfter(java.time.LocalTime);
  public boolean isBefore(java.time.LocalTime);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  void writeExternal(java.io.DataOutput) throws java.io.IOException;
  static java.time.LocalTime readExternal(java.io.DataInput) throws java.io.IOException;
  public java.time.temporal.Temporal minus(long, java.time.temporal.TemporalUnit);
  public java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount);
  public java.time.temporal.Temporal plus(long, java.time.temporal.TemporalUnit);
  public java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount);
  public java.time.temporal.Temporal with(java.time.temporal.TemporalField, long);
  public java.time.temporal.Temporal with(java.time.temporal.TemporalAdjuster);
  public int compareTo(java.lang.Object);
  static {};
}
