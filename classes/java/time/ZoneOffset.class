Compiled from "ZoneOffset.java"
public final class java.time.ZoneOffset extends java.time.ZoneId implements java.time.temporal.TemporalAccessor, java.time.temporal.TemporalAdjuster, java.lang.Comparable<java.time.ZoneOffset>, java.io.Serializable {
  public static final java.time.ZoneOffset UTC;
  public static final java.time.ZoneOffset MIN;
  public static final java.time.ZoneOffset MAX;
  public static java.time.ZoneOffset of(java.lang.String);
  public static java.time.ZoneOffset ofHours(int);
  public static java.time.ZoneOffset ofHoursMinutes(int, int);
  public static java.time.ZoneOffset ofHoursMinutesSeconds(int, int, int);
  public static java.time.ZoneOffset from(java.time.temporal.TemporalAccessor);
  public static java.time.ZoneOffset ofTotalSeconds(int);
  public int getTotalSeconds();
  public java.lang.String getId();
  public java.time.zone.ZoneRules getRules();
  public boolean isSupported(java.time.temporal.TemporalField);
  public java.time.temporal.ValueRange range(java.time.temporal.TemporalField);
  public int get(java.time.temporal.TemporalField);
  public long getLong(java.time.temporal.TemporalField);
  public <R> R query(java.time.temporal.TemporalQuery<R>);
  public java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal);
  public int compareTo(java.time.ZoneOffset);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  void write(java.io.DataOutput) throws java.io.IOException;
  void writeExternal(java.io.DataOutput) throws java.io.IOException;
  static java.time.ZoneOffset readExternal(java.io.DataInput) throws java.io.IOException;
  public int compareTo(java.lang.Object);
  static {};
}
