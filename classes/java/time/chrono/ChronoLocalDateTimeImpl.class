Compiled from "ChronoLocalDateTimeImpl.java"
final class java.time.chrono.ChronoLocalDateTimeImpl<D extends java.time.chrono.ChronoLocalDate> implements java.time.chrono.ChronoLocalDateTime<D>, java.time.temporal.Temporal, java.time.temporal.TemporalAdjuster, java.io.Serializable {
  static final int HOURS_PER_DAY;
  static final int MINUTES_PER_HOUR;
  static final int MINUTES_PER_DAY;
  static final int SECONDS_PER_MINUTE;
  static final int SECONDS_PER_HOUR;
  static final int SECONDS_PER_DAY;
  static final long MILLIS_PER_DAY;
  static final long MICROS_PER_DAY;
  static final long NANOS_PER_SECOND;
  static final long NANOS_PER_MINUTE;
  static final long NANOS_PER_HOUR;
  static final long NANOS_PER_DAY;
  static <R extends java.time.chrono.ChronoLocalDate> java.time.chrono.ChronoLocalDateTimeImpl<R> of(R, java.time.LocalTime);
  static <R extends java.time.chrono.ChronoLocalDate> java.time.chrono.ChronoLocalDateTimeImpl<R> ensureValid(java.time.chrono.Chronology, java.time.temporal.Temporal);
  public D toLocalDate();
  public java.time.LocalTime toLocalTime();
  public boolean isSupported(java.time.temporal.TemporalField);
  public java.time.temporal.ValueRange range(java.time.temporal.TemporalField);
  public int get(java.time.temporal.TemporalField);
  public long getLong(java.time.temporal.TemporalField);
  public java.time.chrono.ChronoLocalDateTimeImpl<D> with(java.time.temporal.TemporalAdjuster);
  public java.time.chrono.ChronoLocalDateTimeImpl<D> with(java.time.temporal.TemporalField, long);
  public java.time.chrono.ChronoLocalDateTimeImpl<D> plus(long, java.time.temporal.TemporalUnit);
  java.time.chrono.ChronoLocalDateTimeImpl<D> plusSeconds(long);
  public java.time.chrono.ChronoZonedDateTime<D> atZone(java.time.ZoneId);
  public long until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit);
  void writeExternal(java.io.ObjectOutput) throws java.io.IOException;
  static java.time.chrono.ChronoLocalDateTime<?> readExternal(java.io.ObjectInput) throws java.io.IOException, java.lang.ClassNotFoundException;
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  public java.time.chrono.ChronoLocalDateTime plus(long, java.time.temporal.TemporalUnit);
  public java.time.chrono.ChronoLocalDateTime with(java.time.temporal.TemporalField, long);
  public java.time.chrono.ChronoLocalDateTime with(java.time.temporal.TemporalAdjuster);
  public java.time.temporal.Temporal plus(long, java.time.temporal.TemporalUnit);
  public java.time.temporal.Temporal with(java.time.temporal.TemporalField, long);
  public java.time.temporal.Temporal with(java.time.temporal.TemporalAdjuster);
}
