Compiled from "ChronoLocalDate.java"
public interface java.time.chrono.ChronoLocalDate extends java.time.temporal.Temporal, java.time.temporal.TemporalAdjuster, java.lang.Comparable<java.time.chrono.ChronoLocalDate> {
  public static java.util.Comparator<java.time.chrono.ChronoLocalDate> timeLineOrder();
  public static java.time.chrono.ChronoLocalDate from(java.time.temporal.TemporalAccessor);
  public abstract java.time.chrono.Chronology getChronology();
  public default java.time.chrono.Era getEra();
  public default boolean isLeapYear();
  public abstract int lengthOfMonth();
  public default int lengthOfYear();
  public default boolean isSupported(java.time.temporal.TemporalField);
  public default boolean isSupported(java.time.temporal.TemporalUnit);
  public default java.time.chrono.ChronoLocalDate with(java.time.temporal.TemporalAdjuster);
  public default java.time.chrono.ChronoLocalDate with(java.time.temporal.TemporalField, long);
  public default java.time.chrono.ChronoLocalDate plus(java.time.temporal.TemporalAmount);
  public default java.time.chrono.ChronoLocalDate plus(long, java.time.temporal.TemporalUnit);
  public default java.time.chrono.ChronoLocalDate minus(java.time.temporal.TemporalAmount);
  public default java.time.chrono.ChronoLocalDate minus(long, java.time.temporal.TemporalUnit);
  public default <R> R query(java.time.temporal.TemporalQuery<R>);
  public default java.time.temporal.Temporal adjustInto(java.time.temporal.Temporal);
  public abstract long until(java.time.temporal.Temporal, java.time.temporal.TemporalUnit);
  public abstract java.time.chrono.ChronoPeriod until(java.time.chrono.ChronoLocalDate);
  public default java.lang.String format(java.time.format.DateTimeFormatter);
  public default java.time.chrono.ChronoLocalDateTime<?> atTime(java.time.LocalTime);
  public default long toEpochDay();
  public default int compareTo(java.time.chrono.ChronoLocalDate);
  public default boolean isAfter(java.time.chrono.ChronoLocalDate);
  public default boolean isBefore(java.time.chrono.ChronoLocalDate);
  public default boolean isEqual(java.time.chrono.ChronoLocalDate);
  public abstract boolean equals(java.lang.Object);
  public abstract int hashCode();
  public abstract java.lang.String toString();
  public default java.time.temporal.Temporal minus(long, java.time.temporal.TemporalUnit);
  public default java.time.temporal.Temporal minus(java.time.temporal.TemporalAmount);
  public default java.time.temporal.Temporal plus(long, java.time.temporal.TemporalUnit);
  public default java.time.temporal.Temporal plus(java.time.temporal.TemporalAmount);
  public default java.time.temporal.Temporal with(java.time.temporal.TemporalField, long);
  public default java.time.temporal.Temporal with(java.time.temporal.TemporalAdjuster);
  public default int compareTo(java.lang.Object);
}
