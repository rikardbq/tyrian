Compiled from "AbstractChronology.java"
public abstract class java.time.chrono.AbstractChronology implements java.time.chrono.Chronology {
  static java.time.chrono.Chronology registerChrono(java.time.chrono.Chronology);
  static java.time.chrono.Chronology registerChrono(java.time.chrono.Chronology, java.lang.String);
  static java.time.chrono.Chronology ofLocale(java.util.Locale);
  static java.time.chrono.Chronology of(java.lang.String);
  static java.util.Set<java.time.chrono.Chronology> getAvailableChronologies();
  protected java.time.chrono.AbstractChronology();
  public java.time.chrono.ChronoLocalDate resolveDate(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  void resolveProlepticMonth(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYearOfEra(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYMD(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYD(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYMAA(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYMAD(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYAA(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveYAD(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.format.ResolverStyle);
  java.time.chrono.ChronoLocalDate resolveAligned(java.time.chrono.ChronoLocalDate, long, long, long);
  void addFieldValue(java.util.Map<java.time.temporal.TemporalField, java.lang.Long>, java.time.temporal.ChronoField, long);
  public int compareTo(java.time.chrono.Chronology);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public java.lang.String toString();
  java.lang.Object writeReplace();
  void writeExternal(java.io.DataOutput) throws java.io.IOException;
  static java.time.chrono.Chronology readExternal(java.io.DataInput) throws java.io.IOException;
  public int compareTo(java.lang.Object);
  static {};
}
