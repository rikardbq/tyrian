Compiled from "TreeVisitor.java"
public interface com.sun.source.tree.TreeVisitor<R, P> {
  public abstract R visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree, P);
  public abstract R visitAnnotation(com.sun.source.tree.AnnotationTree, P);
  public abstract R visitMethodInvocation(com.sun.source.tree.MethodInvocationTree, P);
  public abstract R visitAssert(com.sun.source.tree.AssertTree, P);
  public abstract R visitAssignment(com.sun.source.tree.AssignmentTree, P);
  public abstract R visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree, P);
  public abstract R visitBinary(com.sun.source.tree.BinaryTree, P);
  public abstract R visitBlock(com.sun.source.tree.BlockTree, P);
  public abstract R visitBreak(com.sun.source.tree.BreakTree, P);
  public abstract R visitCase(com.sun.source.tree.CaseTree, P);
  public abstract R visitCatch(com.sun.source.tree.CatchTree, P);
  public abstract R visitClass(com.sun.source.tree.ClassTree, P);
  public abstract R visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree, P);
  public abstract R visitContinue(com.sun.source.tree.ContinueTree, P);
  public abstract R visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree, P);
  public abstract R visitErroneous(com.sun.source.tree.ErroneousTree, P);
  public abstract R visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree, P);
  public abstract R visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree, P);
  public abstract R visitForLoop(com.sun.source.tree.ForLoopTree, P);
  public abstract R visitIdentifier(com.sun.source.tree.IdentifierTree, P);
  public abstract R visitIf(com.sun.source.tree.IfTree, P);
  public abstract R visitImport(com.sun.source.tree.ImportTree, P);
  public abstract R visitArrayAccess(com.sun.source.tree.ArrayAccessTree, P);
  public abstract R visitLabeledStatement(com.sun.source.tree.LabeledStatementTree, P);
  public abstract R visitLiteral(com.sun.source.tree.LiteralTree, P);
  public abstract R visitMethod(com.sun.source.tree.MethodTree, P);
  public abstract R visitModifiers(com.sun.source.tree.ModifiersTree, P);
  public abstract R visitNewArray(com.sun.source.tree.NewArrayTree, P);
  public abstract R visitNewClass(com.sun.source.tree.NewClassTree, P);
  public abstract R visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree, P);
  public abstract R visitPackage(com.sun.source.tree.PackageTree, P);
  public abstract R visitParenthesized(com.sun.source.tree.ParenthesizedTree, P);
  public abstract R visitReturn(com.sun.source.tree.ReturnTree, P);
  public abstract R visitMemberSelect(com.sun.source.tree.MemberSelectTree, P);
  public abstract R visitMemberReference(com.sun.source.tree.MemberReferenceTree, P);
  public abstract R visitEmptyStatement(com.sun.source.tree.EmptyStatementTree, P);
  public abstract R visitSwitch(com.sun.source.tree.SwitchTree, P);
  public abstract R visitSynchronized(com.sun.source.tree.SynchronizedTree, P);
  public abstract R visitThrow(com.sun.source.tree.ThrowTree, P);
  public abstract R visitCompilationUnit(com.sun.source.tree.CompilationUnitTree, P);
  public abstract R visitTry(com.sun.source.tree.TryTree, P);
  public abstract R visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree, P);
  public abstract R visitUnionType(com.sun.source.tree.UnionTypeTree, P);
  public abstract R visitIntersectionType(com.sun.source.tree.IntersectionTypeTree, P);
  public abstract R visitArrayType(com.sun.source.tree.ArrayTypeTree, P);
  public abstract R visitTypeCast(com.sun.source.tree.TypeCastTree, P);
  public abstract R visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree, P);
  public abstract R visitTypeParameter(com.sun.source.tree.TypeParameterTree, P);
  public abstract R visitInstanceOf(com.sun.source.tree.InstanceOfTree, P);
  public abstract R visitUnary(com.sun.source.tree.UnaryTree, P);
  public abstract R visitVariable(com.sun.source.tree.VariableTree, P);
  public abstract R visitWhileLoop(com.sun.source.tree.WhileLoopTree, P);
  public abstract R visitWildcard(com.sun.source.tree.WildcardTree, P);
  public abstract R visitModule(com.sun.source.tree.ModuleTree, P);
  public abstract R visitExports(com.sun.source.tree.ExportsTree, P);
  public abstract R visitOpens(com.sun.source.tree.OpensTree, P);
  public abstract R visitProvides(com.sun.source.tree.ProvidesTree, P);
  public abstract R visitRequires(com.sun.source.tree.RequiresTree, P);
  public abstract R visitUses(com.sun.source.tree.UsesTree, P);
  public abstract R visitOther(com.sun.source.tree.Tree, P);
}
