Compiled from "Trees.java"
public abstract class com.sun.source.util.Trees {
  public com.sun.source.util.Trees();
  public static com.sun.source.util.Trees instance(javax.tools.JavaCompiler$CompilationTask);
  public static com.sun.source.util.Trees instance(javax.annotation.processing.ProcessingEnvironment);
  static com.sun.source.util.Trees getJavacTrees(java.lang.Class<?>, java.lang.Object);
  public abstract com.sun.source.util.SourcePositions getSourcePositions();
  public abstract com.sun.source.tree.Tree getTree(javax.lang.model.element.Element);
  public abstract com.sun.source.tree.ClassTree getTree(javax.lang.model.element.TypeElement);
  public abstract com.sun.source.tree.MethodTree getTree(javax.lang.model.element.ExecutableElement);
  public abstract com.sun.source.tree.Tree getTree(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror);
  public abstract com.sun.source.tree.Tree getTree(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.AnnotationValue);
  public abstract com.sun.source.util.TreePath getPath(com.sun.source.tree.CompilationUnitTree, com.sun.source.tree.Tree);
  public abstract com.sun.source.util.TreePath getPath(javax.lang.model.element.Element);
  public abstract com.sun.source.util.TreePath getPath(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror);
  public abstract com.sun.source.util.TreePath getPath(javax.lang.model.element.Element, javax.lang.model.element.AnnotationMirror, javax.lang.model.element.AnnotationValue);
  public abstract javax.lang.model.element.Element getElement(com.sun.source.util.TreePath);
  public abstract javax.lang.model.type.TypeMirror getTypeMirror(com.sun.source.util.TreePath);
  public abstract com.sun.source.tree.Scope getScope(com.sun.source.util.TreePath);
  public abstract java.lang.String getDocComment(com.sun.source.util.TreePath);
  public abstract boolean isAccessible(com.sun.source.tree.Scope, javax.lang.model.element.TypeElement);
  public abstract boolean isAccessible(com.sun.source.tree.Scope, javax.lang.model.element.Element, javax.lang.model.type.DeclaredType);
  public abstract javax.lang.model.type.TypeMirror getOriginalType(javax.lang.model.type.ErrorType);
  public abstract void printMessage(javax.tools.Diagnostic$Kind, java.lang.CharSequence, com.sun.source.tree.Tree, com.sun.source.tree.CompilationUnitTree);
  public abstract javax.lang.model.type.TypeMirror getLub(com.sun.source.tree.CatchTree);
}
