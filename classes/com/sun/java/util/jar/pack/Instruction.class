Compiled from "Instruction.java"
class com.sun.java.util.jar.pack.Instruction {
  protected byte[] bytes;
  protected int pc;
  protected int bc;
  protected int w;
  protected int length;
  protected boolean special;
  static final boolean $assertionsDisabled;
  protected com.sun.java.util.jar.pack.Instruction(byte[], int, int, int, int);
  public int getBC();
  public boolean isWide();
  public byte[] getBytes();
  public int getPC();
  public int getLength();
  public int getNextPC();
  public com.sun.java.util.jar.pack.Instruction next();
  public boolean isNonstandard();
  public void setNonstandardLength(int);
  public com.sun.java.util.jar.pack.Instruction forceNextPC(int);
  public static com.sun.java.util.jar.pack.Instruction at(byte[], int);
  public static com.sun.java.util.jar.pack.Instruction at(byte[], int, com.sun.java.util.jar.pack.Instruction);
  public byte getCPTag();
  public int getCPIndex();
  public void setCPIndex(int);
  public com.sun.java.util.jar.pack.ConstantPool$Entry getCPRef(com.sun.java.util.jar.pack.ConstantPool$Entry[]);
  public int getLocalSlot();
  public int getBranchLabel();
  public void setBranchLabel(int);
  public int getConstant();
  public void setConstant(int);
  public boolean equals(java.lang.Object);
  public int hashCode();
  public boolean equals(com.sun.java.util.jar.pack.Instruction);
  static java.lang.String labstr(int);
  public java.lang.String toString();
  public java.lang.String toString(com.sun.java.util.jar.pack.ConstantPool$Entry[]);
  public int getIntAt(int);
  public int getShortAt(int);
  public int getByteAt(int);
  public static int getInt(byte[], int);
  public static int getShort(byte[], int);
  public static int getByte(byte[], int);
  public static void setInt(byte[], int, int);
  public static void setShort(byte[], int, int);
  public static void setByte(byte[], int, int);
  public static boolean isNonstandard(int);
  public static int opLength(int);
  public static int opWideLength(int);
  public static boolean isLocalSlotOp(int);
  public static boolean isBranchOp(int);
  public static boolean isCPRefOp(int);
  public static byte getCPRefOpTag(int);
  public static boolean isFieldOp(int);
  public static boolean isInvokeInitOp(int);
  public static boolean isSelfLinkerOp(int);
  public static java.lang.String byteName(int);
  public static void opcodeChecker(byte[], com.sun.java.util.jar.pack.ConstantPool$Entry[], com.sun.java.util.jar.pack.Package$Version) throws com.sun.java.util.jar.pack.Instruction$FormatException;
  static {};
}
