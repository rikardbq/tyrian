Compiled from "PackageReader.java"
class com.sun.java.util.jar.pack.PackageReader extends com.sun.java.util.jar.pack.BandStructure {
  com.sun.java.util.jar.pack.Package pkg;
  byte[] bytes;
  com.sun.java.util.jar.pack.PackageReader$LimitedBuffer in;
  com.sun.java.util.jar.pack.Package$Version packageVersion;
  int[] tagCount;
  int numFiles;
  int numAttrDefs;
  int numInnerClasses;
  int numClasses;
  static final int MAGIC_BYTES;
  java.util.Map<com.sun.java.util.jar.pack.ConstantPool$Utf8Entry, com.sun.java.util.jar.pack.ConstantPool$SignatureEntry> utf8Signatures;
  static final int NO_FLAGS_YET;
  java.util.Comparator<com.sun.java.util.jar.pack.ConstantPool$Entry> entryOutputOrder;
  com.sun.java.util.jar.pack.Code[] allCodes;
  java.util.List<com.sun.java.util.jar.pack.Code> codesWithFlags;
  java.util.Map<com.sun.java.util.jar.pack.Package$Class, java.util.Set<com.sun.java.util.jar.pack.ConstantPool$Entry>> ldcRefMap;
  static final boolean $assertionsDisabled;
  com.sun.java.util.jar.pack.PackageReader(com.sun.java.util.jar.pack.Package, java.io.InputStream) throws java.io.IOException;
  void read() throws java.io.IOException;
  void readFileHeader() throws java.io.IOException;
  void readArchiveMagic() throws java.io.IOException;
  void checkArchiveVersion() throws java.io.IOException;
  void readArchiveHeader() throws java.io.IOException;
  void readBandHeaders() throws java.io.IOException;
  void readConstantPoolCounts(boolean, boolean) throws java.io.IOException;
  protected com.sun.java.util.jar.pack.ConstantPool$Index getCPIndex(byte);
  com.sun.java.util.jar.pack.ConstantPool$Index initCPIndex(byte, com.sun.java.util.jar.pack.ConstantPool$Entry[]);
  void checkLegacy(java.lang.String);
  void readConstantPool() throws java.io.IOException;
  void readUtf8Bands(com.sun.java.util.jar.pack.ConstantPool$Entry[]) throws java.io.IOException;
  void readSignatureBands(com.sun.java.util.jar.pack.ConstantPool$Entry[]) throws java.io.IOException;
  void readMemberRefs(byte, com.sun.java.util.jar.pack.ConstantPool$Entry[], com.sun.java.util.jar.pack.BandStructure$CPRefBand, com.sun.java.util.jar.pack.BandStructure$CPRefBand) throws java.io.IOException;
  void readFiles() throws java.io.IOException;
  void readAttrDefs() throws java.io.IOException;
  void readInnerClasses() throws java.io.IOException;
  void readLocalInnerClasses(com.sun.java.util.jar.pack.Package$Class) throws java.io.IOException;
  com.sun.java.util.jar.pack.Package$Class[] readClasses() throws java.io.IOException;
  void reconstructClass(com.sun.java.util.jar.pack.Package$Class);
  com.sun.java.util.jar.pack.ConstantPool$Entry[] reconstructLocalCPMap(com.sun.java.util.jar.pack.Package$Class);
  void readMembers(com.sun.java.util.jar.pack.Package$Class[]) throws java.io.IOException;
  com.sun.java.util.jar.pack.Code[] buildCodeAttrs(java.util.List<com.sun.java.util.jar.pack.Package$Class$Method>);
  void readCodeHeaders() throws java.io.IOException;
  void readCodeHandlers() throws java.io.IOException;
  void fixupCodeHandlers();
  void countAndReadAttrs(int, java.util.Collection<? extends com.sun.java.util.jar.pack.Attribute$Holder>) throws java.io.IOException;
  void countAttrs(int, java.util.Collection<? extends com.sun.java.util.jar.pack.Attribute$Holder>) throws java.io.IOException;
  void badAttrIndex(int, int) throws java.io.IOException;
  void readAttrs(int, java.util.Collection<? extends com.sun.java.util.jar.pack.Attribute$Holder>) throws java.io.IOException;
  void readByteCodes() throws java.io.IOException;
  static {};
}
