Compiled from "BandStructure.java"
abstract class com.sun.java.util.jar.pack.BandStructure {
  static final int MAX_EFFORT;
  static final int MIN_EFFORT;
  static final int DEFAULT_EFFORT;
  com.sun.java.util.jar.pack.PropMap p200;
  int verbose;
  int effort;
  boolean optDumpBands;
  boolean optDebugBands;
  boolean optVaryCodings;
  boolean optBigStrings;
  static final com.sun.java.util.jar.pack.Coding BYTE1;
  static final com.sun.java.util.jar.pack.Coding CHAR3;
  static final com.sun.java.util.jar.pack.Coding BCI5;
  static final com.sun.java.util.jar.pack.Coding BRANCH5;
  static final com.sun.java.util.jar.pack.Coding UNSIGNED5;
  static final com.sun.java.util.jar.pack.Coding UDELTA5;
  static final com.sun.java.util.jar.pack.Coding SIGNED5;
  static final com.sun.java.util.jar.pack.Coding DELTA5;
  static final com.sun.java.util.jar.pack.Coding MDELTA5;
  protected byte[] bandHeaderBytes;
  protected int bandHeaderBytePos;
  protected int bandHeaderBytePos0;
  static final int SHORT_BAND_HEURISTIC;
  public static final int NO_PHASE;
  public static final int COLLECT_PHASE;
  public static final int FROZEN_PHASE;
  public static final int WRITE_PHASE;
  public static final int EXPECT_PHASE;
  public static final int READ_PHASE;
  public static final int DISBURSE_PHASE;
  public static final int DONE_PHASE;
  static final byte[] defaultMetaCoding;
  static final byte[] noMetaCoding;
  com.sun.java.util.jar.pack.BandStructure$ByteCounter outputCounter;
  protected int archiveOptions;
  protected long archiveSize0;
  protected long archiveSize1;
  protected int archiveNextCount;
  static final int AH_LENGTH_0;
  static final int AH_LENGTH_MIN;
  static final int AH_LENGTH_S;
  static final int AH_ARCHIVE_SIZE_HI;
  static final int AH_ARCHIVE_SIZE_LO;
  static final int AH_FILE_HEADER_LEN;
  static final int AH_SPECIAL_FORMAT_LEN;
  static final int AH_CP_NUMBER_LEN;
  static final int AH_CP_EXTRA_LEN;
  static final int AB_FLAGS_HI;
  static final int AB_FLAGS_LO;
  static final int AB_ATTR_COUNT;
  static final int AB_ATTR_INDEXES;
  static final int AB_ATTR_CALLS;
  com.sun.java.util.jar.pack.BandStructure$MultiBand all_bands;
  com.sun.java.util.jar.pack.BandStructure$ByteBand archive_magic;
  com.sun.java.util.jar.pack.BandStructure$IntBand archive_header_0;
  com.sun.java.util.jar.pack.BandStructure$IntBand archive_header_S;
  com.sun.java.util.jar.pack.BandStructure$IntBand archive_header_1;
  com.sun.java.util.jar.pack.BandStructure$ByteBand band_headers;
  com.sun.java.util.jar.pack.BandStructure$MultiBand cp_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Utf8_prefix;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Utf8_suffix;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Utf8_chars;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Utf8_big_suffix;
  com.sun.java.util.jar.pack.BandStructure$MultiBand cp_Utf8_big_chars;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Int;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Float;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Long_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Long_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Double_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_Double_lo;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_String;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Class;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Signature_form;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Signature_classes;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Descr_name;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Descr_type;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Field_class;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Field_desc;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Method_class;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Method_desc;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Imethod_class;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_Imethod_desc;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_MethodHandle_refkind;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_MethodHandle_member;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_MethodType;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_BootstrapMethod_ref;
  com.sun.java.util.jar.pack.BandStructure$IntBand cp_BootstrapMethod_arg_count;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_BootstrapMethod_arg;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_InvokeDynamic_spec;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand cp_InvokeDynamic_desc;
  com.sun.java.util.jar.pack.BandStructure$MultiBand attr_definition_bands;
  com.sun.java.util.jar.pack.BandStructure$ByteBand attr_definition_headers;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand attr_definition_name;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand attr_definition_layout;
  com.sun.java.util.jar.pack.BandStructure$MultiBand ic_bands;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand ic_this_class;
  com.sun.java.util.jar.pack.BandStructure$IntBand ic_flags;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand ic_outer_class;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand ic_name;
  com.sun.java.util.jar.pack.BandStructure$MultiBand class_bands;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_this;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_super;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_interface_count;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_interface;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_field_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_method_count;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand field_descr;
  com.sun.java.util.jar.pack.BandStructure$MultiBand field_attr_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand field_flags_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand field_flags_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand field_attr_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand field_attr_indexes;
  com.sun.java.util.jar.pack.BandStructure$IntBand field_attr_calls;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand field_ConstantValue_KQ;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand field_Signature_RS;
  com.sun.java.util.jar.pack.BandStructure$MultiBand field_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$MultiBand field_type_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand method_descr;
  com.sun.java.util.jar.pack.BandStructure$MultiBand method_attr_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_flags_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_flags_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_attr_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_attr_indexes;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_attr_calls;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_Exceptions_N;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand method_Exceptions_RC;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand method_Signature_RS;
  com.sun.java.util.jar.pack.BandStructure$MultiBand method_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_MethodParameters_NB;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand method_MethodParameters_name_RUN;
  com.sun.java.util.jar.pack.BandStructure$IntBand method_MethodParameters_flag_FH;
  com.sun.java.util.jar.pack.BandStructure$MultiBand method_type_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$MultiBand class_attr_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_flags_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_flags_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_attr_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_attr_indexes;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_attr_calls;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_SourceFile_RUN;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_EnclosingMethod_RC;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_EnclosingMethod_RDN;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_Signature_RS;
  com.sun.java.util.jar.pack.BandStructure$MultiBand class_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_InnerClasses_N;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_InnerClasses_RC;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_InnerClasses_F;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_InnerClasses_outer_RCN;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand class_InnerClasses_name_RUN;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_ClassFile_version_minor_H;
  com.sun.java.util.jar.pack.BandStructure$IntBand class_ClassFile_version_major_H;
  com.sun.java.util.jar.pack.BandStructure$MultiBand class_type_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$MultiBand code_bands;
  com.sun.java.util.jar.pack.BandStructure$ByteBand code_headers;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_max_stack;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_max_na_locals;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_handler_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_handler_start_P;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_handler_end_PO;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_handler_catch_PO;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_handler_class_RCN;
  com.sun.java.util.jar.pack.BandStructure$MultiBand code_attr_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_flags_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_flags_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_attr_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_attr_indexes;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_attr_calls;
  com.sun.java.util.jar.pack.BandStructure$MultiBand stackmap_bands;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_frame_T;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_local_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_stack_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_offset;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_T;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_StackMapTable_RC;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_StackMapTable_P;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LineNumberTable_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LineNumberTable_bci_P;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LineNumberTable_line;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTable_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTable_bci_P;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTable_span_O;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_LocalVariableTable_name_RU;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_LocalVariableTable_type_RS;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTable_slot;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTypeTable_N;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTypeTable_bci_P;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTypeTable_span_O;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_LocalVariableTypeTable_name_RU;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand code_LocalVariableTypeTable_type_RS;
  com.sun.java.util.jar.pack.BandStructure$IntBand code_LocalVariableTypeTable_slot;
  com.sun.java.util.jar.pack.BandStructure$MultiBand code_type_metadata_bands;
  com.sun.java.util.jar.pack.BandStructure$MultiBand bc_bands;
  com.sun.java.util.jar.pack.BandStructure$ByteBand bc_codes;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_case_count;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_case_value;
  com.sun.java.util.jar.pack.BandStructure$ByteBand bc_byte;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_short;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_local;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_label;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_intref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_floatref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_longref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_doubleref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_stringref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_loadablevalueref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_classref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_fieldref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_methodref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_imethodref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_indyref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_thisfield;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_superfield;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_thismethod;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_supermethod;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_initref;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand bc_escref;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_escrefsize;
  com.sun.java.util.jar.pack.BandStructure$IntBand bc_escsize;
  com.sun.java.util.jar.pack.BandStructure$ByteBand bc_escbyte;
  com.sun.java.util.jar.pack.BandStructure$MultiBand file_bands;
  com.sun.java.util.jar.pack.BandStructure$CPRefBand file_name;
  com.sun.java.util.jar.pack.BandStructure$IntBand file_size_hi;
  com.sun.java.util.jar.pack.BandStructure$IntBand file_size_lo;
  com.sun.java.util.jar.pack.BandStructure$IntBand file_modtime;
  com.sun.java.util.jar.pack.BandStructure$IntBand file_options;
  com.sun.java.util.jar.pack.BandStructure$ByteBand file_bits;
  protected com.sun.java.util.jar.pack.BandStructure$MultiBand[] metadataBands;
  protected com.sun.java.util.jar.pack.BandStructure$MultiBand[] typeMetadataBands;
  public static final int ADH_CONTEXT_MASK;
  public static final int ADH_BIT_SHIFT;
  public static final int ADH_BIT_IS_LSB;
  public static final int ATTR_INDEX_OVERFLOW;
  public int[] attrIndexLimit;
  protected long[] attrFlagMask;
  protected long[] attrDefSeen;
  protected int[] attrOverflowMask;
  protected int attrClassFileVersionMask;
  protected java.util.Map<com.sun.java.util.jar.pack.Attribute$Layout, com.sun.java.util.jar.pack.BandStructure$Band[]> attrBandTable;
  protected final com.sun.java.util.jar.pack.Attribute$Layout attrCodeEmpty;
  protected final com.sun.java.util.jar.pack.Attribute$Layout attrInnerClassesEmpty;
  protected final com.sun.java.util.jar.pack.Attribute$Layout attrClassFileVersion;
  protected final com.sun.java.util.jar.pack.Attribute$Layout attrConstantValue;
  java.util.Map<com.sun.java.util.jar.pack.Attribute$Layout, java.lang.Integer> attrIndexTable;
  protected java.util.List<java.util.List<com.sun.java.util.jar.pack.Attribute$Layout>> attrDefs;
  protected com.sun.java.util.jar.pack.BandStructure$MultiBand[] attrBands;
  public final int shortCodeHeader_h_limit;
  static final int LONG_CODE_HEADER;
  static int nextSeqForDebug;
  static java.io.File dumpDir;
  static java.util.LinkedList<java.lang.String> bandSequenceList;
  static final boolean $assertionsDisabled;
  protected abstract com.sun.java.util.jar.pack.ConstantPool$Index getCPIndex(byte);
  public void initHighestClassVersion(com.sun.java.util.jar.pack.Package$Version) throws java.io.IOException;
  public com.sun.java.util.jar.pack.Package$Version getHighestClassVersion();
  protected com.sun.java.util.jar.pack.BandStructure();
  public static com.sun.java.util.jar.pack.Coding codingForIndex(int);
  public static int indexOf(com.sun.java.util.jar.pack.Coding);
  public static com.sun.java.util.jar.pack.Coding[] getBasicCodings();
  protected com.sun.java.util.jar.pack.CodingMethod getBandHeader(int, com.sun.java.util.jar.pack.Coding);
  public static int parseMetaCoding(byte[], int, com.sun.java.util.jar.pack.Coding, com.sun.java.util.jar.pack.CodingMethod[]);
  static boolean phaseIsRead(int);
  static int phaseCmp(int, int);
  static int getIntTotal(int[]);
  int encodeRef(com.sun.java.util.jar.pack.ConstantPool$Entry, com.sun.java.util.jar.pack.ConstantPool$Index);
  com.sun.java.util.jar.pack.ConstantPool$Entry decodeRef(int, com.sun.java.util.jar.pack.ConstantPool$Index);
  protected com.sun.java.util.jar.pack.CodingChooser getCodingChooser();
  public com.sun.java.util.jar.pack.CodingMethod chooseCoding(int[], int, int, com.sun.java.util.jar.pack.Coding, java.lang.String, int[]);
  protected static int decodeEscapeValue(int, com.sun.java.util.jar.pack.Coding);
  protected static int encodeEscapeValue(int, com.sun.java.util.jar.pack.Coding);
  void writeAllBandsTo(java.io.OutputStream) throws java.io.IOException;
  static com.sun.java.util.jar.pack.BandStructure$IntBand getAttrBand(com.sun.java.util.jar.pack.BandStructure$MultiBand, int);
  protected void setBandIndexes();
  protected void setBandIndex(com.sun.java.util.jar.pack.BandStructure$CPRefBand, byte);
  protected void setConstantValueIndex(com.sun.java.util.jar.pack.Package$Class$Field);
  protected void initAttrIndexLimit();
  protected boolean haveFlagsHi(int);
  protected java.util.List<com.sun.java.util.jar.pack.Attribute$Layout> getPredefinedAttrs(int);
  protected boolean isPredefinedAttr(int, int);
  protected void adjustSpecialAttrMasks();
  protected com.sun.java.util.jar.pack.Attribute makeClassFileVersionAttr(com.sun.java.util.jar.pack.Package$Version);
  protected com.sun.java.util.jar.pack.Package$Version parseClassFileVersionAttr(com.sun.java.util.jar.pack.Attribute);
  void makeNewAttributeBands();
  protected int setAttributeLayoutIndex(com.sun.java.util.jar.pack.Attribute$Layout, int);
  static int shortCodeHeader(com.sun.java.util.jar.pack.Code);
  static int shortCodeHeader_handler_count(int);
  static int shortCodeHeader_max_stack(int);
  static int shortCodeHeader_max_na_locals(int);
  protected void putLabel(com.sun.java.util.jar.pack.BandStructure$IntBand, com.sun.java.util.jar.pack.Code, int, int);
  protected int getLabel(com.sun.java.util.jar.pack.BandStructure$IntBand, com.sun.java.util.jar.pack.Code, int);
  protected com.sun.java.util.jar.pack.BandStructure$CPRefBand getCPRefOpBand(int);
  protected com.sun.java.util.jar.pack.BandStructure$CPRefBand selfOpRefBand(int);
  static java.io.OutputStream getDumpStream(com.sun.java.util.jar.pack.BandStructure$Band, java.lang.String) throws java.io.IOException;
  static java.io.OutputStream getDumpStream(com.sun.java.util.jar.pack.ConstantPool$Index, java.lang.String) throws java.io.IOException;
  static java.io.OutputStream getDumpStream(java.lang.String, int, java.lang.String, java.lang.Object) throws java.io.IOException;
  static boolean assertCanChangeLength(com.sun.java.util.jar.pack.BandStructure$Band);
  static boolean assertPhase(com.sun.java.util.jar.pack.BandStructure$Band, int);
  static int verbose();
  static boolean assertPhaseChangeOK(com.sun.java.util.jar.pack.BandStructure$Band, int, int);
  boolean notePrevForAssert(com.sun.java.util.jar.pack.BandStructure$Band, com.sun.java.util.jar.pack.BandStructure$Band);
  protected static boolean testBit(int, int);
  protected static int setBit(int, int, boolean);
  protected static boolean testBit(long, long);
  protected static long setBit(long, long, boolean);
  static void printArrayTo(java.io.PrintStream, int[], int, int);
  static void printArrayTo(java.io.PrintStream, com.sun.java.util.jar.pack.ConstantPool$Entry[], int, int);
  static void printArrayTo(java.io.PrintStream, com.sun.java.util.jar.pack.ConstantPool$Entry[], int, int, boolean);
  protected static java.lang.Object[] realloc(java.lang.Object[], int);
  protected static java.lang.Object[] realloc(java.lang.Object[]);
  protected static int[] realloc(int[], int);
  protected static int[] realloc(int[]);
  protected static byte[] realloc(byte[], int);
  protected static byte[] realloc(byte[]);
  static {};
}
