Compiled from "DigestMD5Base.java"
abstract class com.sun.security.sasl.digest.DigestMD5Base extends com.sun.security.sasl.util.AbstractSaslImpl {
  protected static final int MAX_CHALLENGE_LENGTH;
  protected static final int MAX_RESPONSE_LENGTH;
  protected static final int DEFAULT_MAXBUF;
  protected static final int DES3;
  protected static final int RC4;
  protected static final int DES;
  protected static final int RC4_56;
  protected static final int RC4_40;
  protected static final java.lang.String[] CIPHER_TOKENS;
  protected static final byte DES_3_STRENGTH;
  protected static final byte RC4_STRENGTH;
  protected static final byte DES_STRENGTH;
  protected static final byte RC4_56_STRENGTH;
  protected static final byte RC4_40_STRENGTH;
  protected static final byte UNSET;
  protected static final byte[] CIPHER_MASKS;
  protected static final byte[] EMPTY_BYTE_ARRAY;
  protected int step;
  protected javax.security.auth.callback.CallbackHandler cbh;
  protected com.sun.security.sasl.digest.SecurityCtx secCtx;
  protected byte[] H_A1;
  protected byte[] nonce;
  protected java.lang.String negotiatedStrength;
  protected java.lang.String negotiatedCipher;
  protected java.lang.String negotiatedQop;
  protected java.lang.String negotiatedRealm;
  protected boolean useUTF8;
  protected java.lang.String encoding;
  protected java.lang.String digestUri;
  protected java.lang.String authzid;
  protected com.sun.security.sasl.digest.DigestMD5Base(java.util.Map<java.lang.String, ?>, java.lang.String, int, java.lang.String, javax.security.auth.callback.CallbackHandler) throws javax.security.sasl.SaslException;
  public java.lang.String getMechanismName();
  public byte[] unwrap(byte[], int, int) throws javax.security.sasl.SaslException;
  public byte[] wrap(byte[], int, int) throws javax.security.sasl.SaslException;
  public void dispose() throws javax.security.sasl.SaslException;
  public java.lang.Object getNegotiatedProperty(java.lang.String);
  protected static final byte[] generateNonce();
  protected static void writeQuotedStringValue(java.io.ByteArrayOutputStream, byte[]);
  protected static java.lang.String quotedStringValue(java.lang.String);
  protected byte[] binaryToHex(byte[]) throws java.io.UnsupportedEncodingException;
  protected byte[] stringToByte_8859_1(java.lang.String) throws javax.security.sasl.SaslException;
  protected static byte[] getPlatformCiphers();
  protected byte[] generateResponseValue(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, char[], byte[], byte[], int, byte[]) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException, java.io.IOException;
  protected static java.lang.String nonceCountToHex(int);
  protected static byte[][] parseDirectives(byte[], java.lang.String[], java.util.List<byte[]>, int) throws javax.security.sasl.SaslException;
  static void access$000(int, byte[], int, int);
  static java.util.logging.Logger access$100();
  static void access$200(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$300(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$400();
  static void access$500(java.lang.String, java.lang.String, java.lang.String, byte[], int, int);
  static void access$600(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$700(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$800();
  static void access$900(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$1000();
  static void access$1100(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$1200(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$1300(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$1400(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$1500(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$1600();
  static int access$1700(byte[], int, int);
  static int access$1800(byte[], int, int);
  static int access$1900(byte[], int, int);
  static void access$2000(int, byte[], int, int);
  static java.util.logging.Logger access$2100();
  static void access$2200(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$2300(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$2400();
  static void access$2500(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$2600(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$2700(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$2800(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$2900();
  static void access$3000(java.lang.String, java.lang.String, java.lang.String, byte[], int, int);
  static void access$3100(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$3200(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$3300();
  static void access$3400(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$3500();
  static void access$3600(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$3700();
  static java.util.logging.Logger access$3800();
  static void access$3900(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$4000();
  static void access$4100(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$4200(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$4300(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static void access$4400(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$4500();
  static java.util.logging.Logger access$4600();
  static java.util.logging.Logger access$4700();
  static void access$4800(java.lang.String, java.lang.String, java.lang.String, byte[]);
  static java.util.logging.Logger access$4900();
  static int access$5000(byte[], int, int);
  static int access$5100(byte[], int, int);
  static int access$5200(byte[], int, int);
  static {};
}
