Compiled from "TypeAnnotationPosition.java"
public class com.sun.tools.javac.code.TypeAnnotationPosition {
  public static final com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry> emptyPath;
  public final com.sun.tools.javac.code.TargetType type;
  public com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry> location;
  public final int pos;
  public boolean isValidOffset;
  public int offset;
  public int[] lvarOffset;
  public int[] lvarLength;
  public int[] lvarIndex;
  public final int bound_index;
  public int parameter_index;
  public final int type_index;
  public final com.sun.tools.javac.tree.JCTree$JCLambda onLambda;
  public static final com.sun.tools.javac.code.TypeAnnotationPosition unknown;
  public java.lang.String toString();
  public boolean emitToClassfile();
  public boolean matchesPos(int);
  public void updatePosOffset(int);
  public boolean hasExceptionIndex();
  public int getExceptionIndex();
  public void setExceptionIndex(int);
  public boolean hasCatchType();
  public int getCatchType();
  public int getStartPos();
  public void setCatchInfo(int, int);
  public static com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry> getTypePathFromBinary(java.util.List<java.lang.Integer>);
  public static com.sun.tools.javac.util.List<java.lang.Integer> getBinaryFromTypePath(java.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReturn(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReturn(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReturn(int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReceiver(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReceiver(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodReceiver(int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodParameter(com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodParameter(int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodRef(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodRef(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorRef(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorRef(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition field(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition field(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition field(int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition localVariable(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition localVariable(com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition localVariable(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition exceptionParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition exceptionParameter(com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition exceptionParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition resourceVariable(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition resourceVariable(com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition resourceVariable(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition newObj(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition newObj(int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition newObj(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition classExtends(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition classExtends(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition classExtends(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition classExtends(int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition classExtends(int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition instanceOf(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition instanceOf(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeCast(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeCast(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodInvocationTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodInvocationTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorInvocationTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorInvocationTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodTypeParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodTypeParameter(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodThrows(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodThrows(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodRefTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodRefTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorRefTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition constructorRefTypeArg(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeParameterBound(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition typeParameterBound(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodTypeParameterBound(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, com.sun.tools.javac.tree.JCTree$JCLambda, int, int, int);
  public static com.sun.tools.javac.code.TypeAnnotationPosition methodTypeParameterBound(com.sun.tools.javac.util.List<com.sun.tools.javac.code.TypeAnnotationPosition$TypePathEntry>, int, int);
  static {};
}
