Compiled from "ClassFinder.java"
public class com.sun.tools.javac.code.ClassFinder {
  protected static final com.sun.tools.javac.util.Context$Key<com.sun.tools.javac.code.ClassFinder> classFinderKey;
  com.sun.tools.javac.jvm.ClassReader reader;
  boolean verbose;
  protected boolean preferSource;
  protected boolean userPathsFirst;
  final com.sun.tools.javac.util.Log log;
  com.sun.tools.javac.code.Symtab syms;
  final com.sun.tools.javac.util.Names names;
  final com.sun.tools.javac.util.Name completionFailureName;
  com.sun.tools.javac.util.JCDiagnostic$Factory diagFactory;
  final com.sun.tools.javac.code.DeferredCompletionFailureHandler dcfh;
  public com.sun.tools.javac.code.Symbol$Completer sourceCompleter;
  protected javax.tools.JavaFileObject currentClassFile;
  protected com.sun.tools.javac.code.Symbol currentOwner;
  protected javax.tools.JavaFileManager$Location currentLoc;
  public com.sun.tools.javac.code.Symbol$Completer getCompleter();
  public static com.sun.tools.javac.code.ClassFinder instance(com.sun.tools.javac.util.Context);
  protected com.sun.tools.javac.code.ClassFinder(com.sun.tools.javac.util.Context);
  long getSupplementaryFlags(com.sun.tools.javac.code.Symbol$ClassSymbol);
  void fillIn(com.sun.tools.javac.code.Symbol$ClassSymbol);
  public com.sun.tools.javac.code.Symbol$ClassSymbol loadClass(com.sun.tools.javac.code.Symbol$ModuleSymbol, com.sun.tools.javac.util.Name) throws com.sun.tools.javac.code.Symbol$CompletionFailure;
  protected void includeClassFile(com.sun.tools.javac.code.Symbol$PackageSymbol, javax.tools.JavaFileObject);
  protected javax.tools.JavaFileObject preferredFileObject(javax.tools.JavaFileObject, javax.tools.JavaFileObject);
  protected java.util.EnumSet<javax.tools.JavaFileObject$Kind> getPackageFileKinds();
  protected void extraFileActions(com.sun.tools.javac.code.Symbol$PackageSymbol, javax.tools.JavaFileObject);
  java.lang.Iterable<javax.tools.JavaFileObject> list(javax.tools.JavaFileManager$Location, com.sun.tools.javac.code.Symbol$PackageSymbol, java.lang.String, java.util.Set<javax.tools.JavaFileObject$Kind>) throws java.io.IOException;
  static {};
}
