Compiled from "TreeScanner.java"
public class com.sun.tools.javac.tree.TreeScanner extends com.sun.tools.javac.tree.JCTree$Visitor {
  public com.sun.tools.javac.tree.TreeScanner();
  public void scan(com.sun.tools.javac.tree.JCTree);
  public void scan(com.sun.tools.javac.util.List<? extends com.sun.tools.javac.tree.JCTree>);
  public void visitTopLevel(com.sun.tools.javac.tree.JCTree$JCCompilationUnit);
  public void visitPackageDef(com.sun.tools.javac.tree.JCTree$JCPackageDecl);
  public void visitModuleDef(com.sun.tools.javac.tree.JCTree$JCModuleDecl);
  public void visitExports(com.sun.tools.javac.tree.JCTree$JCExports);
  public void visitOpens(com.sun.tools.javac.tree.JCTree$JCOpens);
  public void visitProvides(com.sun.tools.javac.tree.JCTree$JCProvides);
  public void visitRequires(com.sun.tools.javac.tree.JCTree$JCRequires);
  public void visitUses(com.sun.tools.javac.tree.JCTree$JCUses);
  public void visitImport(com.sun.tools.javac.tree.JCTree$JCImport);
  public void visitClassDef(com.sun.tools.javac.tree.JCTree$JCClassDecl);
  public void visitMethodDef(com.sun.tools.javac.tree.JCTree$JCMethodDecl);
  public void visitVarDef(com.sun.tools.javac.tree.JCTree$JCVariableDecl);
  public void visitSkip(com.sun.tools.javac.tree.JCTree$JCSkip);
  public void visitBlock(com.sun.tools.javac.tree.JCTree$JCBlock);
  public void visitDoLoop(com.sun.tools.javac.tree.JCTree$JCDoWhileLoop);
  public void visitWhileLoop(com.sun.tools.javac.tree.JCTree$JCWhileLoop);
  public void visitForLoop(com.sun.tools.javac.tree.JCTree$JCForLoop);
  public void visitForeachLoop(com.sun.tools.javac.tree.JCTree$JCEnhancedForLoop);
  public void visitLabelled(com.sun.tools.javac.tree.JCTree$JCLabeledStatement);
  public void visitSwitch(com.sun.tools.javac.tree.JCTree$JCSwitch);
  public void visitCase(com.sun.tools.javac.tree.JCTree$JCCase);
  public void visitSynchronized(com.sun.tools.javac.tree.JCTree$JCSynchronized);
  public void visitTry(com.sun.tools.javac.tree.JCTree$JCTry);
  public void visitCatch(com.sun.tools.javac.tree.JCTree$JCCatch);
  public void visitConditional(com.sun.tools.javac.tree.JCTree$JCConditional);
  public void visitIf(com.sun.tools.javac.tree.JCTree$JCIf);
  public void visitExec(com.sun.tools.javac.tree.JCTree$JCExpressionStatement);
  public void visitBreak(com.sun.tools.javac.tree.JCTree$JCBreak);
  public void visitContinue(com.sun.tools.javac.tree.JCTree$JCContinue);
  public void visitReturn(com.sun.tools.javac.tree.JCTree$JCReturn);
  public void visitThrow(com.sun.tools.javac.tree.JCTree$JCThrow);
  public void visitAssert(com.sun.tools.javac.tree.JCTree$JCAssert);
  public void visitApply(com.sun.tools.javac.tree.JCTree$JCMethodInvocation);
  public void visitNewClass(com.sun.tools.javac.tree.JCTree$JCNewClass);
  public void visitNewArray(com.sun.tools.javac.tree.JCTree$JCNewArray);
  public void visitLambda(com.sun.tools.javac.tree.JCTree$JCLambda);
  public void visitParens(com.sun.tools.javac.tree.JCTree$JCParens);
  public void visitAssign(com.sun.tools.javac.tree.JCTree$JCAssign);
  public void visitAssignop(com.sun.tools.javac.tree.JCTree$JCAssignOp);
  public void visitUnary(com.sun.tools.javac.tree.JCTree$JCUnary);
  public void visitBinary(com.sun.tools.javac.tree.JCTree$JCBinary);
  public void visitTypeCast(com.sun.tools.javac.tree.JCTree$JCTypeCast);
  public void visitTypeTest(com.sun.tools.javac.tree.JCTree$JCInstanceOf);
  public void visitIndexed(com.sun.tools.javac.tree.JCTree$JCArrayAccess);
  public void visitSelect(com.sun.tools.javac.tree.JCTree$JCFieldAccess);
  public void visitReference(com.sun.tools.javac.tree.JCTree$JCMemberReference);
  public void visitIdent(com.sun.tools.javac.tree.JCTree$JCIdent);
  public void visitLiteral(com.sun.tools.javac.tree.JCTree$JCLiteral);
  public void visitTypeIdent(com.sun.tools.javac.tree.JCTree$JCPrimitiveTypeTree);
  public void visitTypeArray(com.sun.tools.javac.tree.JCTree$JCArrayTypeTree);
  public void visitTypeApply(com.sun.tools.javac.tree.JCTree$JCTypeApply);
  public void visitTypeUnion(com.sun.tools.javac.tree.JCTree$JCTypeUnion);
  public void visitTypeIntersection(com.sun.tools.javac.tree.JCTree$JCTypeIntersection);
  public void visitTypeParameter(com.sun.tools.javac.tree.JCTree$JCTypeParameter);
  public void visitWildcard(com.sun.tools.javac.tree.JCTree$JCWildcard);
  public void visitTypeBoundKind(com.sun.tools.javac.tree.JCTree$TypeBoundKind);
  public void visitModifiers(com.sun.tools.javac.tree.JCTree$JCModifiers);
  public void visitAnnotation(com.sun.tools.javac.tree.JCTree$JCAnnotation);
  public void visitAnnotatedType(com.sun.tools.javac.tree.JCTree$JCAnnotatedType);
  public void visitErroneous(com.sun.tools.javac.tree.JCTree$JCErroneous);
  public void visitLetExpr(com.sun.tools.javac.tree.JCTree$LetExpr);
  public void visitTree(com.sun.tools.javac.tree.JCTree);
}
