Compiled from "JavaTokenizer.java"
public class com.sun.tools.javac.parser.JavaTokenizer {
  protected com.sun.tools.javac.parser.Tokens$TokenKind tk;
  protected int radix;
  protected com.sun.tools.javac.util.Name name;
  protected int errPos;
  protected com.sun.tools.javac.parser.UnicodeReader reader;
  protected com.sun.tools.javac.parser.ScannerFactory fac;
  protected com.sun.tools.javac.parser.JavaTokenizer(com.sun.tools.javac.parser.ScannerFactory, java.nio.CharBuffer);
  protected com.sun.tools.javac.parser.JavaTokenizer(com.sun.tools.javac.parser.ScannerFactory, char[], int);
  protected com.sun.tools.javac.parser.JavaTokenizer(com.sun.tools.javac.parser.ScannerFactory, com.sun.tools.javac.parser.UnicodeReader);
  protected void checkSourceLevel(int, com.sun.tools.javac.code.Source$Feature);
  protected void lexError(int, com.sun.tools.javac.util.JCDiagnostic$Error);
  protected void lexError(com.sun.tools.javac.util.JCDiagnostic$DiagnosticFlag, int, com.sun.tools.javac.util.JCDiagnostic$Error);
  public com.sun.tools.javac.parser.Tokens$Token readToken();
  com.sun.tools.javac.util.List<com.sun.tools.javac.parser.Tokens$Comment> addComment(com.sun.tools.javac.util.List<com.sun.tools.javac.parser.Tokens$Comment>, com.sun.tools.javac.parser.Tokens$Comment);
  public int errPos();
  public void errPos(int);
  protected com.sun.tools.javac.parser.Tokens$Comment processComment(int, int, com.sun.tools.javac.parser.Tokens$Comment$CommentStyle);
  protected void processWhiteSpace(int, int);
  protected void processLineTerminator(int, int);
  public com.sun.tools.javac.util.Position$LineMap getLineMap();
  static {};
}
