Compiled from "JavacFiler.java"
public class com.sun.tools.javac.processing.JavacFiler implements javax.annotation.processing.Filer,java.io.Closeable {
  javax.tools.JavaFileManager fileManager;
  com.sun.tools.javac.model.JavacElements elementUtils;
  com.sun.tools.javac.util.Log log;
  com.sun.tools.javac.comp.Modules modules;
  com.sun.tools.javac.util.Names names;
  com.sun.tools.javac.code.Symtab syms;
  com.sun.tools.javac.util.Context context;
  boolean lastRound;
  com.sun.tools.javac.processing.JavacFiler(com.sun.tools.javac.util.Context);
  public javax.tools.JavaFileObject createSourceFile(java.lang.CharSequence, javax.lang.model.element.Element...) throws java.io.IOException;
  public javax.tools.JavaFileObject createClassFile(java.lang.CharSequence, javax.lang.model.element.Element...) throws java.io.IOException;
  public javax.tools.FileObject createResource(javax.tools.JavaFileManager$Location, java.lang.CharSequence, java.lang.CharSequence, javax.lang.model.element.Element...) throws java.io.IOException;
  public javax.tools.FileObject getResource(javax.tools.JavaFileManager$Location, java.lang.CharSequence, java.lang.CharSequence) throws java.io.IOException;
  public boolean newFiles();
  public java.util.Set<java.lang.String> getGeneratedSourceNames();
  public java.util.Set<javax.tools.JavaFileObject> getGeneratedSourceFileObjects();
  public java.util.Map<com.sun.tools.javac.code.Symbol$ModuleSymbol, java.util.Map<java.lang.String, javax.tools.JavaFileObject>> getGeneratedClasses();
  public void warnIfUnclosedFiles();
  public void newRound();
  void setLastRound(boolean);
  public void setInitialState(java.util.Collection<? extends javax.tools.JavaFileObject>, java.util.Collection<java.lang.String>);
  public void close();
  public void displayState();
  public java.lang.String toString();
}
