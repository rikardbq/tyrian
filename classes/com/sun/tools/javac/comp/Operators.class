Compiled from "Operators.java"
public class com.sun.tools.javac.comp.Operators {
  protected static final com.sun.tools.javac.util.Context$Key<com.sun.tools.javac.comp.Operators> operatorsKey;
  public final com.sun.tools.javac.code.Symbol$OperatorSymbol noOpSymbol;
  public static com.sun.tools.javac.comp.Operators instance(com.sun.tools.javac.util.Context);
  protected com.sun.tools.javac.comp.Operators(com.sun.tools.javac.util.Context);
  com.sun.tools.javac.code.Type unaryPromotion(com.sun.tools.javac.code.Type);
  com.sun.tools.javac.code.Type binaryPromotion(com.sun.tools.javac.code.Type, com.sun.tools.javac.code.Type);
  com.sun.tools.javac.code.Symbol$OperatorSymbol resolveUnary(com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition, com.sun.tools.javac.tree.JCTree$Tag, com.sun.tools.javac.code.Type);
  com.sun.tools.javac.code.Symbol$OperatorSymbol resolveBinary(com.sun.tools.javac.util.JCDiagnostic$DiagnosticPosition, com.sun.tools.javac.tree.JCTree$Tag, com.sun.tools.javac.code.Type, com.sun.tools.javac.code.Type);
  public com.sun.tools.javac.util.Name operatorName(com.sun.tools.javac.tree.JCTree$Tag);
  com.sun.tools.javac.code.Symbol$OperatorSymbol lookupBinaryOp(java.util.function.Predicate<com.sun.tools.javac.code.Symbol$OperatorSymbol>);
  static {};
}
