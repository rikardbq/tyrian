Compiled from "Modules.java"
public class com.sun.tools.javac.comp.Modules extends com.sun.tools.javac.tree.JCTree$Visitor {
  public final boolean multiModuleMode;
  com.sun.tools.javac.code.Symbol$ModuleSymbol defaultModule;
  public com.sun.tools.javac.comp.Modules$PackageNameFinder findPackageInFile;
  int depth;
  boolean inInitModules;
  public static com.sun.tools.javac.comp.Modules instance(com.sun.tools.javac.util.Context);
  protected com.sun.tools.javac.comp.Modules(com.sun.tools.javac.util.Context);
  public void addExtraAddModules(java.lang.String...);
  public void initModules(com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCCompilationUnit>);
  public boolean enter(com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree$JCCompilationUnit>, com.sun.tools.javac.code.Symbol$ClassSymbol);
  public com.sun.tools.javac.code.Symbol$Completer getCompleter();
  public com.sun.tools.javac.code.Symbol$ModuleSymbol getDefaultModule();
  public boolean modulesInitialized();
  public boolean isRootModule(com.sun.tools.javac.code.Symbol$ModuleSymbol);
  public java.util.Set<com.sun.tools.javac.code.Symbol$ModuleSymbol> getRootModules();
  public com.sun.tools.javac.code.Symbol$Completer getUsesProvidesCompleter();
  public java.util.Set<com.sun.tools.javac.code.Symbol$ModuleSymbol> allModules();
  public boolean isInModuleGraph(com.sun.tools.javac.code.Symbol$ModuleSymbol);
  public com.sun.tools.javac.code.Symbol$ModuleSymbol getObservableModule(com.sun.tools.javac.util.Name);
  java.lang.String toString(javax.tools.JavaFileManager$Location);
  java.lang.String toString(javax.tools.JavaFileObject);
  public void newRound();
  static {};
}
