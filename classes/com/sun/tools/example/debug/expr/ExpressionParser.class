Compiled from "ExpressionParser.java"
public class com.sun.tools.example.debug.expr.ExpressionParser implements com.sun.tools.example.debug.expr.ExpressionParserConstants {
  java.util.Stack<com.sun.tools.example.debug.expr.LValue> stack;
  com.sun.jdi.VirtualMachine vm;
  com.sun.tools.example.debug.expr.ExpressionParser$GetFrame frameGetter;
  public com.sun.tools.example.debug.expr.ExpressionParserTokenManager token_source;
  com.sun.tools.example.debug.expr.JavaCharStream jj_input_stream;
  public com.sun.tools.example.debug.expr.Token token;
  public com.sun.tools.example.debug.expr.Token jj_nt;
  com.sun.tools.example.debug.expr.LValue peek();
  com.sun.tools.example.debug.expr.LValue pop();
  void push(com.sun.tools.example.debug.expr.LValue);
  public static com.sun.jdi.Value getMassagedValue() throws com.sun.tools.example.debug.expr.ParseException;
  public static com.sun.jdi.Value evaluate(java.lang.String, com.sun.jdi.VirtualMachine, com.sun.tools.example.debug.expr.ExpressionParser$GetFrame) throws com.sun.tools.example.debug.expr.ParseException, com.sun.jdi.InvocationException, com.sun.jdi.InvalidTypeException, com.sun.jdi.ClassNotLoadedException, com.sun.jdi.IncompatibleThreadStateException;
  public static void main(java.lang.String[]);
  public final void Type() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PrimitiveType() throws com.sun.tools.example.debug.expr.ParseException;
  public final java.lang.String Name() throws com.sun.tools.example.debug.expr.ParseException;
  public final void NameList() throws com.sun.tools.example.debug.expr.ParseException;
  public final void Expression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void Assignment() throws com.sun.tools.example.debug.expr.ParseException;
  public final void AssignmentOperator() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ConditionalExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ConditionalOrExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ConditionalAndExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void InclusiveOrExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ExclusiveOrExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void AndExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void EqualityExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void InstanceOfExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void RelationalExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ShiftExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void AdditiveExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void MultiplicativeExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void UnaryExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PreIncrementExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PreDecrementExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void UnaryExpressionNotPlusMinus() throws com.sun.tools.example.debug.expr.ParseException;
  public final void CastLookahead() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PostfixExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void CastExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PrimaryExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PrimaryPrefix() throws com.sun.tools.example.debug.expr.ParseException;
  public final void PrimarySuffix() throws com.sun.tools.example.debug.expr.ParseException;
  public final void Literal() throws com.sun.tools.example.debug.expr.ParseException;
  public final void BooleanLiteral() throws com.sun.tools.example.debug.expr.ParseException;
  public final void NullLiteral() throws com.sun.tools.example.debug.expr.ParseException;
  public final java.util.List<com.sun.jdi.Value> Arguments() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ArgumentList(java.util.List<com.sun.jdi.Value>) throws com.sun.tools.example.debug.expr.ParseException;
  public final void AllocationExpression() throws com.sun.tools.example.debug.expr.ParseException;
  public final void ArrayDimensions() throws com.sun.tools.example.debug.expr.ParseException;
  public com.sun.tools.example.debug.expr.ExpressionParser(java.io.InputStream);
  public com.sun.tools.example.debug.expr.ExpressionParser(java.io.InputStream, java.lang.String);
  public void ReInit(java.io.InputStream);
  public void ReInit(java.io.InputStream, java.lang.String);
  public com.sun.tools.example.debug.expr.ExpressionParser(java.io.Reader);
  public void ReInit(java.io.Reader);
  public com.sun.tools.example.debug.expr.ExpressionParser(com.sun.tools.example.debug.expr.ExpressionParserTokenManager);
  public void ReInit(com.sun.tools.example.debug.expr.ExpressionParserTokenManager);
  public final com.sun.tools.example.debug.expr.Token getNextToken();
  public final com.sun.tools.example.debug.expr.Token getToken(int);
  public com.sun.tools.example.debug.expr.ParseException generateParseException();
  public final void enable_tracing();
  public final void disable_tracing();
  static {};
}
