Compiled from "Checker.java"
public class com.sun.tools.doclint.Checker extends com.sun.source.util.DocTreePathScanner<java.lang.Void, java.lang.Void> {
  final com.sun.tools.doclint.Env env;
  java.util.Set<javax.lang.model.element.Element> foundParams;
  java.util.Set<javax.lang.model.type.TypeMirror> foundThrows;
  java.util.Map<javax.lang.model.element.Element, java.util.Set<java.lang.String>> foundAnchors;
  boolean foundInheritDoc;
  boolean foundReturn;
  boolean hasNonWhitespaceText;
  com.sun.tools.doclint.Checker(com.sun.tools.doclint.Env);
  public java.lang.Void scan(com.sun.source.doctree.DocCommentTree, com.sun.source.util.TreePath);
  public java.lang.Void visitDocComment(com.sun.source.doctree.DocCommentTree, java.lang.Void);
  public java.lang.Void visitText(com.sun.source.doctree.TextTree, java.lang.Void);
  public java.lang.Void visitEntity(com.sun.source.doctree.EntityTree, java.lang.Void);
  void checkAllowsText(com.sun.source.doctree.DocTree);
  public java.lang.Void visitStartElement(com.sun.source.doctree.StartElementTree, java.lang.Void);
  public java.lang.Void visitEndElement(com.sun.source.doctree.EndElementTree, java.lang.Void);
  void warnIfEmpty(com.sun.tools.doclint.Checker$TagStackItem, com.sun.source.doctree.DocTree);
  public java.lang.Void visitAttribute(com.sun.source.doctree.AttributeTree, java.lang.Void);
  public java.lang.Void visitAuthor(com.sun.source.doctree.AuthorTree, java.lang.Void);
  public java.lang.Void visitDocRoot(com.sun.source.doctree.DocRootTree, java.lang.Void);
  public java.lang.Void visitInheritDoc(com.sun.source.doctree.InheritDocTree, java.lang.Void);
  public java.lang.Void visitLink(com.sun.source.doctree.LinkTree, java.lang.Void);
  public java.lang.Void visitLiteral(com.sun.source.doctree.LiteralTree, java.lang.Void);
  public java.lang.Void visitParam(com.sun.source.doctree.ParamTree, java.lang.Void);
  public java.lang.Void visitProvides(com.sun.source.doctree.ProvidesTree, java.lang.Void);
  public java.lang.Void visitReference(com.sun.source.doctree.ReferenceTree, java.lang.Void);
  public java.lang.Void visitReturn(com.sun.source.doctree.ReturnTree, java.lang.Void);
  public java.lang.Void visitSerialData(com.sun.source.doctree.SerialDataTree, java.lang.Void);
  public java.lang.Void visitSerialField(com.sun.source.doctree.SerialFieldTree, java.lang.Void);
  public java.lang.Void visitSince(com.sun.source.doctree.SinceTree, java.lang.Void);
  public java.lang.Void visitSummary(com.sun.source.doctree.SummaryTree, java.lang.Void);
  public java.lang.Void visitThrows(com.sun.source.doctree.ThrowsTree, java.lang.Void);
  public java.lang.Void visitUnknownBlockTag(com.sun.source.doctree.UnknownBlockTagTree, java.lang.Void);
  public java.lang.Void visitUnknownInlineTag(com.sun.source.doctree.UnknownInlineTagTree, java.lang.Void);
  public java.lang.Void visitUses(com.sun.source.doctree.UsesTree, java.lang.Void);
  public java.lang.Void visitValue(com.sun.source.doctree.ValueTree, java.lang.Void);
  public java.lang.Void visitVersion(com.sun.source.doctree.VersionTree, java.lang.Void);
  public java.lang.Void visitErroneous(com.sun.source.doctree.ErroneousTree, java.lang.Void);
  void markEnclosingTag(com.sun.tools.doclint.Checker$Flag);
  java.lang.String toString(com.sun.source.util.TreePath);
  void toString(com.sun.source.util.TreePath, java.lang.StringBuilder);
  void warnIfEmpty(com.sun.source.doctree.DocTree, java.util.List<? extends com.sun.source.doctree.DocTree>);
  boolean hasNonWhitespace(com.sun.source.doctree.TextTree);
  public java.lang.Object visitVersion(com.sun.source.doctree.VersionTree, java.lang.Object);
  public java.lang.Object visitValue(com.sun.source.doctree.ValueTree, java.lang.Object);
  public java.lang.Object visitUses(com.sun.source.doctree.UsesTree, java.lang.Object);
  public java.lang.Object visitUnknownInlineTag(com.sun.source.doctree.UnknownInlineTagTree, java.lang.Object);
  public java.lang.Object visitUnknownBlockTag(com.sun.source.doctree.UnknownBlockTagTree, java.lang.Object);
  public java.lang.Object visitThrows(com.sun.source.doctree.ThrowsTree, java.lang.Object);
  public java.lang.Object visitText(com.sun.source.doctree.TextTree, java.lang.Object);
  public java.lang.Object visitSummary(com.sun.source.doctree.SummaryTree, java.lang.Object);
  public java.lang.Object visitStartElement(com.sun.source.doctree.StartElementTree, java.lang.Object);
  public java.lang.Object visitSince(com.sun.source.doctree.SinceTree, java.lang.Object);
  public java.lang.Object visitSerialField(com.sun.source.doctree.SerialFieldTree, java.lang.Object);
  public java.lang.Object visitSerialData(com.sun.source.doctree.SerialDataTree, java.lang.Object);
  public java.lang.Object visitReturn(com.sun.source.doctree.ReturnTree, java.lang.Object);
  public java.lang.Object visitReference(com.sun.source.doctree.ReferenceTree, java.lang.Object);
  public java.lang.Object visitProvides(com.sun.source.doctree.ProvidesTree, java.lang.Object);
  public java.lang.Object visitParam(com.sun.source.doctree.ParamTree, java.lang.Object);
  public java.lang.Object visitLiteral(com.sun.source.doctree.LiteralTree, java.lang.Object);
  public java.lang.Object visitLink(com.sun.source.doctree.LinkTree, java.lang.Object);
  public java.lang.Object visitInheritDoc(com.sun.source.doctree.InheritDocTree, java.lang.Object);
  public java.lang.Object visitErroneous(com.sun.source.doctree.ErroneousTree, java.lang.Object);
  public java.lang.Object visitEntity(com.sun.source.doctree.EntityTree, java.lang.Object);
  public java.lang.Object visitEndElement(com.sun.source.doctree.EndElementTree, java.lang.Object);
  public java.lang.Object visitDocRoot(com.sun.source.doctree.DocRootTree, java.lang.Object);
  public java.lang.Object visitDocComment(com.sun.source.doctree.DocCommentTree, java.lang.Object);
  public java.lang.Object visitAuthor(com.sun.source.doctree.AuthorTree, java.lang.Object);
  public java.lang.Object visitAttribute(com.sun.source.doctree.AttributeTree, java.lang.Object);
  static {};
}
