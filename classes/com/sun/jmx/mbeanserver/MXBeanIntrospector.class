Compiled from "MXBeanIntrospector.java"
class com.sun.jmx.mbeanserver.MXBeanIntrospector extends com.sun.jmx.mbeanserver.MBeanIntrospector<com.sun.jmx.mbeanserver.ConvertingMethod> {
  com.sun.jmx.mbeanserver.MXBeanIntrospector();
  static com.sun.jmx.mbeanserver.MXBeanIntrospector getInstance();
  com.sun.jmx.mbeanserver.MBeanIntrospector$PerInterfaceMap<com.sun.jmx.mbeanserver.ConvertingMethod> getPerInterfaceMap();
  com.sun.jmx.mbeanserver.MBeanIntrospector$MBeanInfoMap getMBeanInfoMap();
  com.sun.jmx.mbeanserver.MBeanAnalyzer<com.sun.jmx.mbeanserver.ConvertingMethod> getAnalyzer(java.lang.Class<?>) throws javax.management.NotCompliantMBeanException;
  boolean isMXBean();
  com.sun.jmx.mbeanserver.ConvertingMethod mFrom(java.lang.reflect.Method);
  java.lang.String getName(com.sun.jmx.mbeanserver.ConvertingMethod);
  java.lang.reflect.Type getGenericReturnType(com.sun.jmx.mbeanserver.ConvertingMethod);
  java.lang.reflect.Type[] getGenericParameterTypes(com.sun.jmx.mbeanserver.ConvertingMethod);
  java.lang.String[] getSignature(com.sun.jmx.mbeanserver.ConvertingMethod);
  void checkMethod(com.sun.jmx.mbeanserver.ConvertingMethod);
  java.lang.Object invokeM2(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, java.lang.Object[], java.lang.Object) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, javax.management.MBeanException;
  boolean validParameter(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, int, java.lang.Object);
  javax.management.MBeanAttributeInfo getMBeanAttributeInfo(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod, com.sun.jmx.mbeanserver.ConvertingMethod);
  javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod);
  javax.management.Descriptor getBasicMBeanDescriptor();
  javax.management.Descriptor getMBeanDescriptor(java.lang.Class<?>);
  static java.lang.String typeName(java.lang.reflect.Type);
  javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, java.lang.Object);
  javax.management.MBeanAttributeInfo getMBeanAttributeInfo(java.lang.String, java.lang.Object, java.lang.Object);
  boolean validParameter(java.lang.Object, java.lang.Object, int, java.lang.Object);
  java.lang.Object invokeM2(java.lang.Object, java.lang.Object, java.lang.Object[], java.lang.Object) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, javax.management.MBeanException;
  void checkMethod(java.lang.Object);
  java.lang.String[] getSignature(java.lang.Object);
  java.lang.reflect.Type[] getGenericParameterTypes(java.lang.Object);
  java.lang.reflect.Type getGenericReturnType(java.lang.Object);
  java.lang.String getName(java.lang.Object);
  java.lang.Object mFrom(java.lang.reflect.Method);
  static {};
}
