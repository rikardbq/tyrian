Compiled from "MBeanIntrospector.java"
abstract class com.sun.jmx.mbeanserver.MBeanIntrospector<M> {
  com.sun.jmx.mbeanserver.MBeanIntrospector();
  abstract com.sun.jmx.mbeanserver.MBeanIntrospector$PerInterfaceMap<M> getPerInterfaceMap();
  abstract com.sun.jmx.mbeanserver.MBeanIntrospector$MBeanInfoMap getMBeanInfoMap();
  abstract com.sun.jmx.mbeanserver.MBeanAnalyzer<M> getAnalyzer(java.lang.Class<?>) throws javax.management.NotCompliantMBeanException;
  abstract boolean isMXBean();
  abstract M mFrom(java.lang.reflect.Method);
  abstract java.lang.String getName(M);
  abstract java.lang.reflect.Type getGenericReturnType(M);
  abstract java.lang.reflect.Type[] getGenericParameterTypes(M);
  abstract java.lang.String[] getSignature(M);
  abstract void checkMethod(M);
  abstract java.lang.Object invokeM2(M, java.lang.Object, java.lang.Object[], java.lang.Object) throws java.lang.reflect.InvocationTargetException, java.lang.IllegalAccessException, javax.management.MBeanException;
  abstract boolean validParameter(M, java.lang.Object, int, java.lang.Object);
  abstract javax.management.MBeanAttributeInfo getMBeanAttributeInfo(java.lang.String, M, M);
  abstract javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, M);
  abstract javax.management.Descriptor getBasicMBeanDescriptor();
  abstract javax.management.Descriptor getMBeanDescriptor(java.lang.Class<?>);
  final java.util.List<java.lang.reflect.Method> getMethods(java.lang.Class<?>);
  final com.sun.jmx.mbeanserver.PerInterface<M> getPerInterface(java.lang.Class<?>) throws javax.management.NotCompliantMBeanException;
  final boolean consistent(M, M);
  final java.lang.Object invokeM(M, java.lang.Object, java.lang.Object[], java.lang.Object) throws javax.management.MBeanException, javax.management.ReflectionException;
  final void invokeSetter(java.lang.String, M, java.lang.Object, java.lang.Object, java.lang.Object) throws javax.management.MBeanException, javax.management.ReflectionException, javax.management.InvalidAttributeValueException;
  static boolean isValidParameter(java.lang.reflect.Method, java.lang.Object, int);
  final javax.management.MBeanInfo getMBeanInfo(java.lang.Object, com.sun.jmx.mbeanserver.PerInterface<M>);
  final javax.management.MBeanInfo getClassMBeanInfo(java.lang.Class<?>, com.sun.jmx.mbeanserver.PerInterface<M>);
  static javax.management.MBeanNotificationInfo[] findNotifications(java.lang.Object);
}
