Compiled from "GaloisCounterMode.java"
final class com.sun.crypto.provider.GaloisCounterMode extends com.sun.crypto.provider.FeedbackCipher {
  static int DEFAULT_TAG_LEN;
  static int DEFAULT_IV_LEN;
  static void increment32(byte[]);
  com.sun.crypto.provider.GaloisCounterMode(com.sun.crypto.provider.SymmetricCipher);
  java.lang.String getFeedback();
  void reset();
  void save();
  void restore();
  void init(boolean, java.lang.String, byte[], byte[]) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
  void init(boolean, java.lang.String, byte[], byte[], int) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException;
  void updateAAD(byte[], int, int);
  void processAAD();
  void doLastBlock(byte[], int, int, byte[], int, boolean) throws javax.crypto.IllegalBlockSizeException;
  int encrypt(byte[], int, int, byte[], int);
  int encryptFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.ShortBufferException;
  int decrypt(byte[], int, int, byte[], int);
  int decryptFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.AEADBadTagException, javax.crypto.ShortBufferException;
  int getTagLen();
  int getBufferedLength();
  static {};
}
