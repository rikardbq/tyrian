Compiled from "SearchFilter.java"
public class com.sun.jndi.toolkit.dir.SearchFilter implements com.sun.jndi.toolkit.dir.AttrFilter {
  java.lang.String filter;
  int pos;
  protected static final boolean debug;
  protected static final char BEGIN_FILTER_TOKEN;
  protected static final char END_FILTER_TOKEN;
  protected static final char AND_TOKEN;
  protected static final char OR_TOKEN;
  protected static final char NOT_TOKEN;
  protected static final char EQUAL_TOKEN;
  protected static final char APPROX_TOKEN;
  protected static final char LESS_TOKEN;
  protected static final char GREATER_TOKEN;
  protected static final char EXTEND_TOKEN;
  protected static final char WILDCARD_TOKEN;
  static final int EQUAL_MATCH;
  static final int APPROX_MATCH;
  static final int GREATER_MATCH;
  static final int LESS_MATCH;
  public com.sun.jndi.toolkit.dir.SearchFilter(java.lang.String) throws javax.naming.directory.InvalidSearchFilterException;
  public boolean check(javax.naming.directory.Attributes) throws javax.naming.NamingException;
  protected void normalizeFilter();
  protected com.sun.jndi.toolkit.dir.SearchFilter$StringFilter createNextFilter() throws javax.naming.directory.InvalidSearchFilterException;
  protected char getCurrentChar();
  protected char relCharAt(int);
  protected void consumeChar();
  protected void consumeChars(int);
  protected int relIndexOf(int);
  protected java.lang.String relSubstring(int, int);
  public static java.lang.String format(javax.naming.directory.Attributes) throws javax.naming.NamingException;
  public static int findUnescaped(char, java.lang.String, int);
  public static java.lang.String format(java.lang.String, java.lang.Object[]) throws javax.naming.NamingException;
  public static javax.naming.directory.Attributes selectAttributes(javax.naming.directory.Attributes, java.lang.String[]) throws javax.naming.NamingException;
}
