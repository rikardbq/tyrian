Compiled from "LdapSchemaCtx.java"
final class com.sun.jndi.ldap.LdapSchemaCtx extends com.sun.jndi.toolkit.dir.HierMemDirCtx {
  static final int OBJECTCLASS_ROOT;
  static final int ATTRIBUTE_ROOT;
  static final int SYNTAX_ROOT;
  static final int MATCHRULE_ROOT;
  static final int OBJECTCLASS;
  static final int ATTRIBUTE;
  static final int SYNTAX;
  static final int MATCHRULE;
  static javax.naming.directory.DirContext createSchemaTree(java.util.Hashtable<java.lang.String, java.lang.Object>, java.lang.String, com.sun.jndi.ldap.LdapCtx, javax.naming.directory.Attributes, boolean) throws javax.naming.NamingException;
  public void close() throws javax.naming.NamingException;
  public final void bind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException;
  protected final void doBind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes, boolean) throws javax.naming.NamingException;
  public final void rebind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes) throws javax.naming.NamingException;
  protected final void doRebind(javax.naming.Name, java.lang.Object, javax.naming.directory.Attributes, boolean) throws javax.naming.NamingException;
  protected final void doUnbind(javax.naming.Name) throws javax.naming.NamingException;
  protected final void doRename(javax.naming.Name, javax.naming.Name) throws javax.naming.NamingException;
  protected final void doDestroySubcontext(javax.naming.Name) throws javax.naming.NamingException;
  final com.sun.jndi.ldap.LdapSchemaCtx setup(int, java.lang.String, javax.naming.directory.Attributes) throws javax.naming.NamingException;
  protected final javax.naming.directory.DirContext doCreateSubcontext(javax.naming.Name, javax.naming.directory.Attributes) throws javax.naming.NamingException;
  protected final void doModifyAttributes(javax.naming.directory.ModificationItem[]) throws javax.naming.NamingException;
  protected final com.sun.jndi.toolkit.dir.HierMemDirCtx createNewCtx();
}
