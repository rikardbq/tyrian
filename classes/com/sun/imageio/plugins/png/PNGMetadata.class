Compiled from "PNGMetadata.java"
public class com.sun.imageio.plugins.png.PNGMetadata extends javax.imageio.metadata.IIOMetadata implements java.lang.Cloneable {
  public static final java.lang.String nativeMetadataFormatName;
  protected static final java.lang.String nativeMetadataFormatClassName;
  static final java.lang.String[] IHDR_colorTypeNames;
  static final int[] IHDR_numChannels;
  static final java.lang.String[] IHDR_bitDepths;
  static final java.lang.String[] IHDR_compressionMethodNames;
  static final java.lang.String[] IHDR_filterMethodNames;
  static final java.lang.String[] IHDR_interlaceMethodNames;
  static final java.lang.String[] iCCP_compressionMethodNames;
  static final java.lang.String[] zTXt_compressionMethodNames;
  public static final int PHYS_UNIT_UNKNOWN;
  public static final int PHYS_UNIT_METER;
  static final java.lang.String[] unitSpecifierNames;
  static final java.lang.String[] renderingIntentNames;
  static final java.lang.String[] colorSpaceTypeNames;
  public boolean IHDR_present;
  public int IHDR_width;
  public int IHDR_height;
  public int IHDR_bitDepth;
  public int IHDR_colorType;
  public int IHDR_compressionMethod;
  public int IHDR_filterMethod;
  public int IHDR_interlaceMethod;
  public boolean PLTE_present;
  public byte[] PLTE_red;
  public byte[] PLTE_green;
  public byte[] PLTE_blue;
  public int[] PLTE_order;
  public boolean bKGD_present;
  public int bKGD_colorType;
  public int bKGD_index;
  public int bKGD_gray;
  public int bKGD_red;
  public int bKGD_green;
  public int bKGD_blue;
  public boolean cHRM_present;
  public int cHRM_whitePointX;
  public int cHRM_whitePointY;
  public int cHRM_redX;
  public int cHRM_redY;
  public int cHRM_greenX;
  public int cHRM_greenY;
  public int cHRM_blueX;
  public int cHRM_blueY;
  public boolean gAMA_present;
  public int gAMA_gamma;
  public boolean hIST_present;
  public char[] hIST_histogram;
  public boolean iCCP_present;
  public java.lang.String iCCP_profileName;
  public int iCCP_compressionMethod;
  public byte[] iCCP_compressedProfile;
  public java.util.ArrayList<java.lang.String> iTXt_keyword;
  public java.util.ArrayList<java.lang.Boolean> iTXt_compressionFlag;
  public java.util.ArrayList<java.lang.Integer> iTXt_compressionMethod;
  public java.util.ArrayList<java.lang.String> iTXt_languageTag;
  public java.util.ArrayList<java.lang.String> iTXt_translatedKeyword;
  public java.util.ArrayList<java.lang.String> iTXt_text;
  public boolean pHYs_present;
  public int pHYs_pixelsPerUnitXAxis;
  public int pHYs_pixelsPerUnitYAxis;
  public int pHYs_unitSpecifier;
  public boolean sBIT_present;
  public int sBIT_colorType;
  public int sBIT_grayBits;
  public int sBIT_redBits;
  public int sBIT_greenBits;
  public int sBIT_blueBits;
  public int sBIT_alphaBits;
  public boolean sPLT_present;
  public java.lang.String sPLT_paletteName;
  public int sPLT_sampleDepth;
  public int[] sPLT_red;
  public int[] sPLT_green;
  public int[] sPLT_blue;
  public int[] sPLT_alpha;
  public int[] sPLT_frequency;
  public boolean sRGB_present;
  public int sRGB_renderingIntent;
  public java.util.ArrayList<java.lang.String> tEXt_keyword;
  public java.util.ArrayList<java.lang.String> tEXt_text;
  public boolean tIME_present;
  public int tIME_year;
  public int tIME_month;
  public int tIME_day;
  public int tIME_hour;
  public int tIME_minute;
  public int tIME_second;
  public boolean creation_time_present;
  public int creation_time_year;
  public int creation_time_month;
  public int creation_time_day;
  public int creation_time_hour;
  public int creation_time_minute;
  public int creation_time_second;
  public java.time.ZoneOffset creation_time_offset;
  public boolean tEXt_creation_time_present;
  public static final java.lang.String tEXt_creationTimeKey;
  public boolean tRNS_present;
  public int tRNS_colorType;
  public byte[] tRNS_alpha;
  public int tRNS_gray;
  public int tRNS_red;
  public int tRNS_green;
  public int tRNS_blue;
  public java.util.ArrayList<java.lang.String> zTXt_keyword;
  public java.util.ArrayList<java.lang.Integer> zTXt_compressionMethod;
  public java.util.ArrayList<java.lang.String> zTXt_text;
  public java.util.ArrayList<java.lang.String> unknownChunkType;
  public java.util.ArrayList<byte[]> unknownChunkData;
  public com.sun.imageio.plugins.png.PNGMetadata();
  public com.sun.imageio.plugins.png.PNGMetadata(javax.imageio.metadata.IIOMetadata);
  public void initialize(javax.imageio.ImageTypeSpecifier, int);
  public boolean isReadOnly();
  public java.lang.Object clone();
  public org.w3c.dom.Node getAsTree(java.lang.String);
  public javax.imageio.metadata.IIOMetadataNode getStandardChromaNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardCompressionNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardDataNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardDimensionNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardDocumentNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardTextNode();
  public javax.imageio.metadata.IIOMetadataNode getStandardTransparencyNode();
  public void mergeTree(java.lang.String, org.w3c.dom.Node) throws javax.imageio.metadata.IIOInvalidTreeException;
  void initImageCreationTime(java.time.OffsetDateTime);
  void initImageCreationTime(int, int, int, int, int, int);
  void decodeImageCreationTimeFromTextChunk(java.util.ListIterator<java.lang.String>);
  void encodeImageCreationTimeToTextChunk();
  boolean hasTransparentColor();
  public void reset();
  static {};
}
