Compiled from "JPEGImageWriter.java"
public class com.sun.imageio.plugins.jpeg.JPEGImageWriter extends javax.imageio.ImageWriter {
  protected static final int WARNING_DEST_IGNORED;
  protected static final int WARNING_STREAM_METADATA_IGNORED;
  protected static final int WARNING_DEST_METADATA_COMP_MISMATCH;
  protected static final int WARNING_DEST_METADATA_JFIF_MISMATCH;
  protected static final int WARNING_DEST_METADATA_ADOBE_MISMATCH;
  protected static final int WARNING_IMAGE_METADATA_JFIF_MISMATCH;
  protected static final int WARNING_IMAGE_METADATA_ADOBE_MISMATCH;
  protected static final int WARNING_METADATA_NOT_JPEG_FOR_RASTER;
  protected static final int WARNING_NO_BANDS_ON_INDEXED;
  protected static final int WARNING_ILLEGAL_THUMBNAIL;
  protected static final int WARNING_IGNORING_THUMBS;
  protected static final int WARNING_FORCING_JFIF;
  protected static final int WARNING_THUMB_CLIPPED;
  protected static final int WARNING_METADATA_ADJUSTED_FOR_THUMB;
  protected static final int WARNING_NO_RGB_THUMB_AS_INDEXED;
  protected static final int WARNING_NO_GRAY_THUMB_AS_INDEXED;
  static final java.awt.Dimension[] preferredThumbSizes;
  public com.sun.imageio.plugins.jpeg.JPEGImageWriter(javax.imageio.spi.ImageWriterSpi);
  public void setOutput(java.lang.Object);
  public javax.imageio.ImageWriteParam getDefaultWriteParam();
  public javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam);
  public javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam);
  public javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageWriteParam);
  public javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam);
  public int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata);
  public java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata);
  public boolean canWriteRasters();
  public void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) throws java.io.IOException;
  public boolean canWriteSequence();
  public void prepareWriteSequence(javax.imageio.metadata.IIOMetadata) throws java.io.IOException;
  public void writeToSequence(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) throws java.io.IOException;
  public void endWriteSequence() throws java.io.IOException;
  public synchronized void abort();
  protected synchronized void clearAbortRequest();
  public void reset();
  public void dispose();
  void warningOccurred(int);
  void warningWithMessage(java.lang.String);
  void thumbnailStarted(int);
  void thumbnailProgress(float);
  void thumbnailComplete();
  static {};
}
