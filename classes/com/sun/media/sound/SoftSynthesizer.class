Compiled from "SoftSynthesizer.java"
public final class com.sun.media.sound.SoftSynthesizer implements com.sun.media.sound.AudioSynthesizer,com.sun.media.sound.ReferenceCountingDevice {
  static final java.lang.String INFO_NAME;
  static final java.lang.String INFO_VENDOR;
  static final java.lang.String INFO_DESCRIPTION;
  static final java.lang.String INFO_VERSION;
  static final javax.sound.midi.MidiDevice$Info info;
  com.sun.media.sound.SoftSynthesizer$WeakAudioStream weakstream;
  final java.lang.Object control_mutex;
  int voiceIDCounter;
  int voice_allocation_mode;
  boolean load_default_soundbank;
  boolean reverb_light;
  boolean reverb_on;
  boolean chorus_on;
  boolean agc_on;
  com.sun.media.sound.SoftChannel[] channels;
  com.sun.media.sound.SoftChannelProxy[] external_channels;
  public com.sun.media.sound.SoftSynthesizer();
  void removeReceiver(javax.sound.midi.Receiver);
  com.sun.media.sound.SoftMainMixer getMainMixer();
  com.sun.media.sound.SoftInstrument findInstrument(int, int, int);
  int getVoiceAllocationMode();
  int getGeneralMidiMode();
  void setGeneralMidiMode(int);
  int getDeviceID();
  float getControlRate();
  com.sun.media.sound.SoftVoice[] getVoices();
  com.sun.media.sound.SoftTuning getTuning(javax.sound.midi.Patch);
  public long getLatency();
  public javax.sound.sampled.AudioFormat getFormat();
  public int getMaxPolyphony();
  public javax.sound.midi.MidiChannel[] getChannels();
  public javax.sound.midi.VoiceStatus[] getVoiceStatus();
  public boolean isSoundbankSupported(javax.sound.midi.Soundbank);
  public boolean loadInstrument(javax.sound.midi.Instrument);
  public void unloadInstrument(javax.sound.midi.Instrument);
  public boolean remapInstrument(javax.sound.midi.Instrument, javax.sound.midi.Instrument);
  public javax.sound.midi.Soundbank getDefaultSoundbank();
  public javax.sound.midi.Instrument[] getAvailableInstruments();
  public javax.sound.midi.Instrument[] getLoadedInstruments();
  public boolean loadAllInstruments(javax.sound.midi.Soundbank);
  public void unloadAllInstruments(javax.sound.midi.Soundbank);
  public boolean loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[]);
  public void unloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[]);
  public javax.sound.midi.MidiDevice$Info getDeviceInfo();
  public com.sun.media.sound.AudioSynthesizerPropertyInfo[] getPropertyInfo(java.util.Map<java.lang.String, java.lang.Object>);
  public void open() throws javax.sound.midi.MidiUnavailableException;
  public void open(javax.sound.sampled.SourceDataLine, java.util.Map<java.lang.String, java.lang.Object>) throws javax.sound.midi.MidiUnavailableException;
  public javax.sound.sampled.AudioInputStream openStream(javax.sound.sampled.AudioFormat, java.util.Map<java.lang.String, java.lang.Object>) throws javax.sound.midi.MidiUnavailableException;
  public void close();
  public boolean isOpen();
  public long getMicrosecondPosition();
  public int getMaxReceivers();
  public int getMaxTransmitters();
  public javax.sound.midi.Receiver getReceiver() throws javax.sound.midi.MidiUnavailableException;
  public java.util.List<javax.sound.midi.Receiver> getReceivers();
  public javax.sound.midi.Transmitter getTransmitter() throws javax.sound.midi.MidiUnavailableException;
  public java.util.List<javax.sound.midi.Transmitter> getTransmitters();
  public javax.sound.midi.Receiver getReceiverReferenceCounting() throws javax.sound.midi.MidiUnavailableException;
  public javax.sound.midi.Transmitter getTransmitterReferenceCounting() throws javax.sound.midi.MidiUnavailableException;
  static {};
}
