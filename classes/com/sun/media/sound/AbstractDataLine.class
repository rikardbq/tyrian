Compiled from "AbstractDataLine.java"
abstract class com.sun.media.sound.AbstractDataLine extends com.sun.media.sound.AbstractLine implements javax.sound.sampled.DataLine {
  protected final java.lang.Object lock;
  protected javax.sound.sampled.AudioFormat format;
  protected int bufferSize;
  protected com.sun.media.sound.AbstractDataLine(javax.sound.sampled.DataLine$Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[]);
  protected com.sun.media.sound.AbstractDataLine(javax.sound.sampled.DataLine$Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[], javax.sound.sampled.AudioFormat, int);
  public final void open(javax.sound.sampled.AudioFormat, int) throws javax.sound.sampled.LineUnavailableException;
  public final void open(javax.sound.sampled.AudioFormat) throws javax.sound.sampled.LineUnavailableException;
  public int available();
  public void drain();
  public void flush();
  public final void start();
  public final void stop();
  public final boolean isRunning();
  public final boolean isActive();
  public final long getMicrosecondPosition();
  public final javax.sound.sampled.AudioFormat getFormat();
  public final int getBufferSize();
  public final int setBufferSize(int);
  public final float getLevel();
  final boolean isStartedRunning();
  final void setActive(boolean);
  final void setStarted(boolean);
  final void setEOM();
  public final void open() throws javax.sound.sampled.LineUnavailableException;
  public final void close();
  abstract void implOpen(javax.sound.sampled.AudioFormat, int) throws javax.sound.sampled.LineUnavailableException;
  abstract void implClose();
  abstract void implStart();
  abstract void implStop();
}
