Compiled from "XNodeSet.java"
public class com.sun.org.apache.xpath.internal.objects.XNodeSet extends com.sun.org.apache.xpath.internal.axes.NodeSequence {
  static final long serialVersionUID;
  static final com.sun.org.apache.xpath.internal.objects.LessThanComparator S_LT;
  static final com.sun.org.apache.xpath.internal.objects.LessThanOrEqualComparator S_LTE;
  static final com.sun.org.apache.xpath.internal.objects.GreaterThanComparator S_GT;
  static final com.sun.org.apache.xpath.internal.objects.GreaterThanOrEqualComparator S_GTE;
  static final com.sun.org.apache.xpath.internal.objects.EqualComparator S_EQ;
  static final com.sun.org.apache.xpath.internal.objects.NotEqualComparator S_NEQ;
  protected com.sun.org.apache.xpath.internal.objects.XNodeSet();
  public com.sun.org.apache.xpath.internal.objects.XNodeSet(com.sun.org.apache.xml.internal.dtm.DTMIterator);
  public com.sun.org.apache.xpath.internal.objects.XNodeSet(com.sun.org.apache.xpath.internal.objects.XNodeSet);
  public com.sun.org.apache.xpath.internal.objects.XNodeSet(com.sun.org.apache.xml.internal.dtm.DTMManager);
  public com.sun.org.apache.xpath.internal.objects.XNodeSet(int, com.sun.org.apache.xml.internal.dtm.DTMManager);
  public int getType();
  public java.lang.String getTypeString();
  public double getNumberFromNode(int);
  public double num();
  public double numWithSideEffects();
  public boolean bool();
  public boolean boolWithSideEffects();
  public com.sun.org.apache.xml.internal.utils.XMLString getStringFromNode(int);
  public void dispatchCharactersEvents(org.xml.sax.ContentHandler) throws org.xml.sax.SAXException;
  public com.sun.org.apache.xml.internal.utils.XMLString xstr();
  public void appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer);
  public java.lang.String str();
  public java.lang.Object object();
  public org.w3c.dom.traversal.NodeIterator nodeset() throws javax.xml.transform.TransformerException;
  public org.w3c.dom.NodeList nodelist() throws javax.xml.transform.TransformerException;
  public com.sun.org.apache.xml.internal.dtm.DTMIterator iterRaw();
  public void release(com.sun.org.apache.xml.internal.dtm.DTMIterator);
  public com.sun.org.apache.xml.internal.dtm.DTMIterator iter();
  public com.sun.org.apache.xpath.internal.objects.XObject getFresh();
  public com.sun.org.apache.xpath.internal.NodeSetDTM mutableNodeset();
  public boolean compare(com.sun.org.apache.xpath.internal.objects.XObject, com.sun.org.apache.xpath.internal.objects.Comparator) throws javax.xml.transform.TransformerException;
  public boolean lessThan(com.sun.org.apache.xpath.internal.objects.XObject) throws javax.xml.transform.TransformerException;
  public boolean lessThanOrEqual(com.sun.org.apache.xpath.internal.objects.XObject) throws javax.xml.transform.TransformerException;
  public boolean greaterThan(com.sun.org.apache.xpath.internal.objects.XObject) throws javax.xml.transform.TransformerException;
  public boolean greaterThanOrEqual(com.sun.org.apache.xpath.internal.objects.XObject) throws javax.xml.transform.TransformerException;
  public boolean equals(com.sun.org.apache.xpath.internal.objects.XObject);
  public boolean notEquals(com.sun.org.apache.xpath.internal.objects.XObject) throws javax.xml.transform.TransformerException;
  static {};
}
