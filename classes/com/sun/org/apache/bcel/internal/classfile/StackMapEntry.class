Compiled from "StackMapEntry.java"
public final class com.sun.org.apache.bcel.internal.classfile.StackMapEntry implements com.sun.org.apache.bcel.internal.classfile.Node,java.lang.Cloneable {
  com.sun.org.apache.bcel.internal.classfile.StackMapEntry(java.io.DataInput, com.sun.org.apache.bcel.internal.classfile.ConstantPool) throws java.io.IOException;
  public com.sun.org.apache.bcel.internal.classfile.StackMapEntry(int, int, com.sun.org.apache.bcel.internal.classfile.StackMapType[], int, com.sun.org.apache.bcel.internal.classfile.StackMapType[], com.sun.org.apache.bcel.internal.classfile.ConstantPool);
  public com.sun.org.apache.bcel.internal.classfile.StackMapEntry(int, int, com.sun.org.apache.bcel.internal.classfile.StackMapType[], com.sun.org.apache.bcel.internal.classfile.StackMapType[], com.sun.org.apache.bcel.internal.classfile.ConstantPool);
  public final void dump(java.io.DataOutputStream) throws java.io.IOException;
  public final java.lang.String toString();
  int getMapEntrySize();
  public void setFrameType(int);
  public int getFrameType();
  public void setByteCodeOffset(int);
  public void updateByteCodeOffset(int);
  public int getByteCodeOffset();
  public void setNumberOfLocals(int);
  public int getNumberOfLocals();
  public void setTypesOfLocals(com.sun.org.apache.bcel.internal.classfile.StackMapType[]);
  public com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfLocals();
  public void setNumberOfStackItems(int);
  public int getNumberOfStackItems();
  public void setTypesOfStackItems(com.sun.org.apache.bcel.internal.classfile.StackMapType[]);
  public com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfStackItems();
  public com.sun.org.apache.bcel.internal.classfile.StackMapEntry copy();
  public void accept(com.sun.org.apache.bcel.internal.classfile.Visitor);
  public final com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool();
  public final void setConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool);
}
