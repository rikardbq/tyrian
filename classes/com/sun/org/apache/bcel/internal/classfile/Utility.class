Compiled from "Utility.java"
public abstract class com.sun.org.apache.bcel.internal.classfile.Utility {
  public com.sun.org.apache.bcel.internal.classfile.Utility();
  public static java.lang.String accessToString(int);
  public static java.lang.String accessToString(int, boolean);
  public static java.lang.String classOrInterface(int);
  public static java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int, boolean);
  public static java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int);
  public static java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool, boolean) throws java.io.IOException;
  public static java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool) throws java.io.IOException;
  public static java.lang.String compactClassName(java.lang.String);
  public static java.lang.String compactClassName(java.lang.String, java.lang.String, boolean);
  public static java.lang.String compactClassName(java.lang.String, boolean);
  public static int setBit(int, int);
  public static int clearBit(int, int);
  public static boolean isSet(int, int);
  public static java.lang.String methodTypeToSignature(java.lang.String, java.lang.String[]) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String[] methodSignatureArgumentTypes(java.lang.String) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String[] methodSignatureArgumentTypes(java.lang.String, boolean) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String methodSignatureReturnType(java.lang.String) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String methodSignatureReturnType(java.lang.String, boolean) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String);
  public static java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean);
  public static java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean, com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static java.lang.String replace(java.lang.String, java.lang.String, java.lang.String);
  public static java.lang.String signatureToString(java.lang.String);
  public static java.lang.String signatureToString(java.lang.String, boolean);
  public static java.lang.String getSignature(java.lang.String);
  public static byte typeOfMethodSignature(java.lang.String) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static byte typeOfSignature(java.lang.String) throws com.sun.org.apache.bcel.internal.classfile.ClassFormatException;
  public static short searchOpcode(java.lang.String);
  public static java.lang.String toHexString(byte[]);
  public static java.lang.String format(int, int, boolean, char);
  public static java.lang.String fillup(java.lang.String, int, boolean, char);
  static boolean equals(byte[], byte[]);
  public static void printArray(java.io.PrintStream, java.lang.Object[]);
  public static void printArray(java.io.PrintWriter, java.lang.Object[]);
  public static java.lang.String printArray(java.lang.Object[]);
  public static java.lang.String printArray(java.lang.Object[], boolean);
  public static java.lang.String printArray(java.lang.Object[], boolean, boolean);
  public static boolean isJavaIdentifierPart(char);
  public static java.lang.String encode(byte[], boolean) throws java.io.IOException;
  public static byte[] decode(java.lang.String, boolean) throws java.io.IOException;
  public static java.lang.String convertString(java.lang.String);
  static {};
}
