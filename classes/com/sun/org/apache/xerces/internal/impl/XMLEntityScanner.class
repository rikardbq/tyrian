Compiled from "XMLEntityScanner.java"
public class com.sun.org.apache.xerces.internal.impl.XMLEntityScanner implements com.sun.org.apache.xerces.internal.xni.XMLLocator {
  protected com.sun.xml.internal.stream.Entity$ScannedEntity fCurrentEntity;
  protected int fBufferSize;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityManager fEntityManager;
  protected com.sun.org.apache.xerces.internal.utils.XMLSecurityManager fSecurityManager;
  protected com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer fLimitAnalyzer;
  protected com.sun.org.apache.xerces.internal.util.SymbolTable fSymbolTable;
  protected com.sun.org.apache.xerces.internal.impl.XMLErrorReporter fErrorReporter;
  int[] whiteSpaceLookup;
  int whiteSpaceLen;
  boolean whiteSpaceInfoNeeded;
  protected boolean fAllowJavaEncodings;
  protected static final java.lang.String SYMBOL_TABLE;
  protected static final java.lang.String ERROR_REPORTER;
  protected static final java.lang.String ALLOW_JAVA_ENCODINGS;
  protected com.sun.org.apache.xerces.internal.impl.PropertyManager fPropertyManager;
  boolean isExternal;
  protected boolean xmlVersionSetExplicitly;
  boolean detectingVersion;
  public com.sun.org.apache.xerces.internal.impl.XMLEntityScanner();
  public com.sun.org.apache.xerces.internal.impl.XMLEntityScanner(com.sun.org.apache.xerces.internal.impl.PropertyManager, com.sun.org.apache.xerces.internal.impl.XMLEntityManager);
  public final void setBufferSize(int);
  public void reset(com.sun.org.apache.xerces.internal.impl.PropertyManager);
  public void reset(com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager) throws com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
  public final void reset(com.sun.org.apache.xerces.internal.util.SymbolTable, com.sun.org.apache.xerces.internal.impl.XMLEntityManager, com.sun.org.apache.xerces.internal.impl.XMLErrorReporter);
  public final java.lang.String getXMLVersion();
  public final void setXMLVersion(java.lang.String);
  public final void setCurrentEntity(com.sun.xml.internal.stream.Entity$ScannedEntity);
  public com.sun.xml.internal.stream.Entity$ScannedEntity getCurrentEntity();
  public final java.lang.String getBaseSystemId();
  public void setBaseSystemId(java.lang.String);
  public final int getLineNumber();
  public void setLineNumber(int);
  public final int getColumnNumber();
  public void setColumnNumber(int);
  public final int getCharacterOffset();
  public final java.lang.String getExpandedSystemId();
  public void setExpandedSystemId(java.lang.String);
  public final java.lang.String getLiteralSystemId();
  public void setLiteralSystemId(java.lang.String);
  public final java.lang.String getPublicId();
  public void setPublicId(java.lang.String);
  public void setVersion(java.lang.String);
  public java.lang.String getVersion();
  public final java.lang.String getEncoding();
  public final void setEncoding(java.lang.String) throws java.io.IOException;
  public final boolean isExternal();
  public int getChar(int) throws java.io.IOException;
  public int peekChar() throws java.io.IOException;
  protected int scanChar(com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType) throws java.io.IOException;
  protected java.lang.String scanNmtoken() throws java.io.IOException;
  protected java.lang.String scanName(com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType) throws java.io.IOException;
  protected boolean scanQName(com.sun.org.apache.xerces.internal.xni.QName, com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType) throws java.io.IOException;
  protected int checkBeforeLoad(com.sun.xml.internal.stream.Entity$ScannedEntity, int, int) throws java.io.IOException;
  protected void checkEntityLimit(com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType, com.sun.xml.internal.stream.Entity$ScannedEntity, int, int);
  protected void checkNodeCount(com.sun.xml.internal.stream.Entity$ScannedEntity);
  protected void checkLimit(com.sun.org.apache.xerces.internal.utils.XMLSecurityManager$Limit, com.sun.xml.internal.stream.Entity$ScannedEntity, int, int);
  protected int scanContent(com.sun.org.apache.xerces.internal.xni.XMLString) throws java.io.IOException;
  protected int scanLiteral(int, com.sun.org.apache.xerces.internal.xni.XMLString, boolean) throws java.io.IOException;
  protected boolean scanData(java.lang.String, com.sun.org.apache.xerces.internal.util.XMLStringBuffer, int) throws java.io.IOException;
  protected boolean skipChar(int, com.sun.org.apache.xerces.internal.impl.XMLScanner$NameType) throws java.io.IOException;
  public boolean isSpace(char);
  protected boolean skipSpaces() throws java.io.IOException;
  public boolean arrangeCapacity(int) throws java.io.IOException;
  public boolean arrangeCapacity(int, boolean) throws java.io.IOException;
  protected boolean skipString(java.lang.String) throws java.io.IOException;
  protected boolean skipString(char[]) throws java.io.IOException;
  final boolean load(int, boolean, boolean) throws java.io.IOException;
  protected java.io.Reader createReader(java.io.InputStream, java.lang.String, java.lang.Boolean) throws java.io.IOException;
  protected java.lang.Object[] getEncodingName(byte[], int);
  final void print();
  public void registerListener(com.sun.xml.internal.stream.XMLBufferListener);
  public void invokeListeners(int);
  protected final boolean skipDeclSpaces() throws java.io.IOException;
  static {};
}
