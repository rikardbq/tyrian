Compiled from "XMLEntityManager.java"
public class com.sun.org.apache.xerces.internal.impl.XMLEntityManager implements com.sun.org.apache.xerces.internal.xni.parser.XMLComponent,com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver {
  public static final int DEFAULT_BUFFER_SIZE;
  public static final int DEFAULT_XMLDECL_BUFFER_SIZE;
  public static final int DEFAULT_INTERNAL_BUFFER_SIZE;
  protected static final java.lang.String VALIDATION;
  protected boolean fStrictURI;
  protected static final java.lang.String EXTERNAL_GENERAL_ENTITIES;
  protected static final java.lang.String EXTERNAL_PARAMETER_ENTITIES;
  protected static final java.lang.String ALLOW_JAVA_ENCODINGS;
  protected static final java.lang.String WARN_ON_DUPLICATE_ENTITYDEF;
  protected static final java.lang.String LOAD_EXTERNAL_DTD;
  protected static final java.lang.String SYMBOL_TABLE;
  protected static final java.lang.String ERROR_REPORTER;
  protected static final java.lang.String STANDARD_URI_CONFORMANT;
  protected static final java.lang.String ENTITY_RESOLVER;
  protected static final java.lang.String STAX_ENTITY_RESOLVER;
  protected static final java.lang.String VALIDATION_MANAGER;
  protected static final java.lang.String BUFFER_SIZE;
  protected static final java.lang.String SECURITY_MANAGER;
  protected static final java.lang.String PARSER_SETTINGS;
  static final java.lang.String EXTERNAL_ACCESS_DEFAULT;
  protected boolean fWarnDuplicateEntityDef;
  protected boolean fValidation;
  protected boolean fExternalGeneralEntities;
  protected boolean fExternalParameterEntities;
  protected boolean fAllowJavaEncodings;
  protected boolean fLoadExternalDTD;
  protected com.sun.org.apache.xerces.internal.util.SymbolTable fSymbolTable;
  protected com.sun.org.apache.xerces.internal.impl.XMLErrorReporter fErrorReporter;
  protected com.sun.org.apache.xerces.internal.xni.parser.XMLEntityResolver fEntityResolver;
  protected com.sun.xml.internal.stream.StaxEntityResolverWrapper fStaxEntityResolver;
  protected com.sun.org.apache.xerces.internal.impl.PropertyManager fPropertyManager;
  boolean fSupportDTD;
  boolean fReplaceEntityReferences;
  boolean fSupportExternalEntities;
  protected java.lang.String fAccessExternalDTD;
  protected com.sun.org.apache.xerces.internal.impl.validation.ValidationManager fValidationManager;
  protected int fBufferSize;
  protected com.sun.org.apache.xerces.internal.utils.XMLSecurityManager fSecurityManager;
  protected com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer fLimitAnalyzer;
  protected int entityExpansionIndex;
  protected boolean fStandalone;
  protected boolean fInExternalSubset;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityHandler fEntityHandler;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityScanner fEntityScanner;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityScanner fXML10EntityScanner;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityScanner fXML11EntityScanner;
  protected int fEntityExpansionCount;
  protected java.util.Map<java.lang.String, com.sun.xml.internal.stream.Entity> fEntities;
  protected java.util.Stack<com.sun.xml.internal.stream.Entity> fEntityStack;
  protected com.sun.xml.internal.stream.Entity$ScannedEntity fCurrentEntity;
  boolean fISCreatedByResolver;
  protected com.sun.xml.internal.stream.XMLEntityStorage fEntityStorage;
  protected final java.lang.Object[] defaultEncoding;
  javax.xml.catalog.CatalogFeatures fCatalogFeatures;
  javax.xml.catalog.CatalogResolver fCatalogResolver;
  protected java.util.Stack<java.io.Reader> fReaderStack;
  public com.sun.org.apache.xerces.internal.impl.XMLEntityManager();
  public com.sun.org.apache.xerces.internal.impl.XMLEntityManager(com.sun.org.apache.xerces.internal.impl.PropertyManager);
  public void addInternalEntity(java.lang.String, java.lang.String);
  public void addExternalEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;
  public void addUnparsedEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
  public com.sun.xml.internal.stream.XMLEntityStorage getEntityStore();
  public com.sun.org.apache.xerces.internal.impl.XMLEntityScanner getEntityScanner();
  public void setScannerVersion(short);
  public java.lang.String setupCurrentEntity(boolean, java.lang.String, com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, boolean, boolean) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public boolean isExternalEntity(java.lang.String);
  public boolean isEntityDeclInExternalSubset(java.lang.String);
  public void setStandalone(boolean);
  public boolean isStandalone();
  public boolean isDeclaredEntity(java.lang.String);
  public boolean isUnparsedEntity(java.lang.String);
  public com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier getCurrentResourceIdentifier();
  public void setEntityHandler(com.sun.org.apache.xerces.internal.impl.XMLEntityHandler);
  public com.sun.xml.internal.stream.StaxXMLInputSource resolveEntityAsPerStax(com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier) throws java.io.IOException;
  public com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource resolveEntity(com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public void startEntity(boolean, java.lang.String, boolean) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public void startDocumentEntity(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public void startDTDEntity(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public void startExternalSubset();
  public void endExternalSubset();
  public void startEntity(boolean, java.lang.String, com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, boolean, boolean) throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public com.sun.xml.internal.stream.Entity$ScannedEntity getCurrentEntity();
  public com.sun.xml.internal.stream.Entity$ScannedEntity getTopLevelEntity();
  public void closeReaders();
  public void endEntity() throws java.io.IOException, com.sun.org.apache.xerces.internal.xni.XNIException;
  public void reset(com.sun.org.apache.xerces.internal.impl.PropertyManager);
  public void reset(com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager) throws com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
  public void reset();
  public java.lang.String[] getRecognizedFeatures();
  public void setFeature(java.lang.String, boolean) throws com.sun.org.apache.xerces.internal.xni.parser.XMLConfigurationException;
  public void setProperty(java.lang.String, java.lang.Object);
  public void setLimitAnalyzer(com.sun.org.apache.xerces.internal.utils.XMLLimitAnalyzer);
  public java.lang.String[] getRecognizedProperties();
  public java.lang.Boolean getFeatureDefault(java.lang.String);
  public java.lang.Object getPropertyDefault(java.lang.String);
  public static java.lang.String expandSystemId(java.lang.String);
  public static java.io.OutputStream createOutputStream(java.lang.String) throws java.io.IOException;
  public static void absolutizeAgainstUserDir(com.sun.org.apache.xerces.internal.util.URI) throws com.sun.org.apache.xerces.internal.util.URI$MalformedURIException;
  public static java.lang.String expandSystemId(java.lang.String, java.lang.String);
  public static java.lang.String expandSystemId(java.lang.String, java.lang.String, boolean) throws com.sun.org.apache.xerces.internal.util.URI$MalformedURIException;
  protected com.sun.org.apache.xerces.internal.impl.XMLEntityManager$EncodingInfo getEncodingInfo(byte[], int);
  protected java.io.Reader createReader(java.io.InputStream, java.lang.String, java.lang.Boolean) throws java.io.IOException;
  public java.lang.String getPublicId();
  public java.lang.String getExpandedSystemId();
  public java.lang.String getLiteralSystemId();
  public int getLineNumber();
  public int getColumnNumber();
  protected static java.lang.String fixURI(java.lang.String);
  final void print();
  public void test();
  static {};
}
