Compiled from "BaseMarkupSerializer.java"
public abstract class com.sun.org.apache.xml.internal.serialize.BaseMarkupSerializer implements org.xml.sax.ContentHandler,org.xml.sax.DocumentHandler,org.xml.sax.ext.LexicalHandler,org.xml.sax.DTDHandler,org.xml.sax.ext.DeclHandler,com.sun.org.apache.xml.internal.serialize.DOMSerializer,com.sun.org.apache.xml.internal.serialize.Serializer {
  protected short features;
  protected org.w3c.dom.DOMErrorHandler fDOMErrorHandler;
  protected final com.sun.org.apache.xerces.internal.dom.DOMErrorImpl fDOMError;
  protected org.w3c.dom.ls.LSSerializerFilter fDOMFilter;
  protected com.sun.org.apache.xml.internal.serialize.EncodingInfo _encodingInfo;
  protected boolean _started;
  protected java.util.Map<java.lang.String, java.lang.String> _prefixes;
  protected java.lang.String _docTypePublicId;
  protected java.lang.String _docTypeSystemId;
  protected com.sun.org.apache.xml.internal.serialize.OutputFormat _format;
  protected com.sun.org.apache.xml.internal.serialize.Printer _printer;
  protected boolean _indenting;
  protected final java.lang.StringBuffer fStrBuffer;
  protected org.w3c.dom.Node fCurrentNode;
  protected com.sun.org.apache.xml.internal.serialize.BaseMarkupSerializer(com.sun.org.apache.xml.internal.serialize.OutputFormat);
  public org.xml.sax.DocumentHandler asDocumentHandler() throws java.io.IOException;
  public org.xml.sax.ContentHandler asContentHandler() throws java.io.IOException;
  public com.sun.org.apache.xml.internal.serialize.DOMSerializer asDOMSerializer() throws java.io.IOException;
  public void setOutputByteStream(java.io.OutputStream);
  public void setOutputCharStream(java.io.Writer);
  public void setOutputFormat(com.sun.org.apache.xml.internal.serialize.OutputFormat);
  public boolean reset();
  protected void cleanup();
  protected void prepare() throws java.io.IOException;
  public void serialize(org.w3c.dom.Element) throws java.io.IOException;
  public void serialize(org.w3c.dom.Node) throws java.io.IOException;
  public void serialize(org.w3c.dom.DocumentFragment) throws java.io.IOException;
  public void serialize(org.w3c.dom.Document) throws java.io.IOException;
  public void startDocument() throws org.xml.sax.SAXException;
  public void characters(char[], int, int) throws org.xml.sax.SAXException;
  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
  public final void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void processingInstructionIO(java.lang.String, java.lang.String) throws java.io.IOException;
  public void comment(char[], int, int) throws org.xml.sax.SAXException;
  public void comment(java.lang.String) throws java.io.IOException;
  public void startCDATA();
  public void endCDATA();
  public void startNonEscaping();
  public void endNonEscaping();
  public void startPreserving();
  public void endPreserving();
  public void endDocument() throws org.xml.sax.SAXException;
  public void startEntity(java.lang.String);
  public void endEntity(java.lang.String);
  public void setDocumentLocator(org.xml.sax.Locator);
  public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
  public final void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endDTD();
  public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  protected void serializeNode(org.w3c.dom.Node) throws java.io.IOException;
  protected void serializeDocument() throws java.io.IOException;
  protected void serializeDTD(java.lang.String) throws java.io.IOException;
  protected com.sun.org.apache.xml.internal.serialize.ElementState content() throws java.io.IOException;
  protected void characters(java.lang.String) throws java.io.IOException;
  protected abstract java.lang.String getEntityRef(int);
  protected abstract void serializeElement(org.w3c.dom.Element) throws java.io.IOException;
  protected void serializePreRoot() throws java.io.IOException;
  protected void printCDATAText(java.lang.String) throws java.io.IOException;
  protected void surrogates(int, int, boolean) throws java.io.IOException;
  protected void printText(char[], int, int, boolean, boolean) throws java.io.IOException;
  protected void printText(java.lang.String, boolean, boolean) throws java.io.IOException;
  protected void printDoctypeURL(java.lang.String) throws java.io.IOException;
  protected void printEscaped(int) throws java.io.IOException;
  final void printHex(int) throws java.io.IOException;
  protected void printEscaped(java.lang.String) throws java.io.IOException;
  protected com.sun.org.apache.xml.internal.serialize.ElementState getElementState();
  protected com.sun.org.apache.xml.internal.serialize.ElementState enterElementState(java.lang.String, java.lang.String, java.lang.String, boolean);
  protected com.sun.org.apache.xml.internal.serialize.ElementState leaveElementState();
  protected boolean isDocumentState();
  final void clearDocumentState();
  protected java.lang.String getPrefix(java.lang.String);
  protected org.w3c.dom.DOMError modifyDOMError(java.lang.String, short, java.lang.String, org.w3c.dom.Node);
  protected void fatalError(java.lang.String) throws java.io.IOException;
  protected void checkUnboundNamespacePrefixedNode(org.w3c.dom.Node) throws java.io.IOException;
}
