Compiled from "EmptySerializer.java"
public class com.sun.org.apache.xml.internal.serializer.EmptySerializer implements com.sun.org.apache.xml.internal.serializer.SerializationHandler {
  protected static final java.lang.String ERR;
  public com.sun.org.apache.xml.internal.serializer.EmptySerializer();
  protected void couldThrowIOException() throws java.io.IOException;
  protected void couldThrowSAXException() throws org.xml.sax.SAXException;
  protected void couldThrowSAXException(char[], int, int) throws org.xml.sax.SAXException;
  protected void couldThrowSAXException(java.lang.String) throws org.xml.sax.SAXException;
  void aMethodIsCalled();
  public org.xml.sax.ContentHandler asContentHandler() throws java.io.IOException;
  public void setContentHandler(org.xml.sax.ContentHandler);
  public void close();
  public java.util.Properties getOutputFormat();
  public java.io.OutputStream getOutputStream();
  public java.io.Writer getWriter();
  public boolean reset();
  public void serialize(org.w3c.dom.Node) throws java.io.IOException;
  public void setCdataSectionElements(java.util.List<java.lang.String>);
  public boolean setEscaping(boolean) throws org.xml.sax.SAXException;
  public void setIndent(boolean);
  public void setIndentAmount(int);
  public void setIsStandalone(boolean);
  public void setOutputFormat(java.util.Properties);
  public void setOutputStream(java.io.OutputStream);
  public void setVersion(java.lang.String);
  public void setWriter(java.io.Writer);
  public void setTransformer(javax.xml.transform.Transformer);
  public javax.xml.transform.Transformer getTransformer();
  public void flushPending() throws org.xml.sax.SAXException;
  public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException;
  public void addAttributes(org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void addAttribute(java.lang.String, java.lang.String);
  public void characters(java.lang.String) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String) throws org.xml.sax.SAXException;
  public void startDocument() throws org.xml.sax.SAXException;
  public void startElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void startElement(java.lang.String) throws org.xml.sax.SAXException;
  public void namespaceAfterStartElement(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public boolean startPrefixMapping(java.lang.String, java.lang.String, boolean) throws org.xml.sax.SAXException;
  public void entityReference(java.lang.String) throws org.xml.sax.SAXException;
  public com.sun.org.apache.xml.internal.serializer.NamespaceMappings getNamespaceMappings();
  public java.lang.String getPrefix(java.lang.String);
  public java.lang.String getNamespaceURI(java.lang.String, boolean);
  public java.lang.String getNamespaceURIFromPrefix(java.lang.String);
  public void setDocumentLocator(org.xml.sax.Locator);
  public void endDocument() throws org.xml.sax.SAXException;
  public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void characters(char[], int, int) throws org.xml.sax.SAXException;
  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void comment(java.lang.String) throws org.xml.sax.SAXException;
  public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endDTD() throws org.xml.sax.SAXException;
  public void startEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void endEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startCDATA() throws org.xml.sax.SAXException;
  public void endCDATA() throws org.xml.sax.SAXException;
  public void comment(char[], int, int) throws org.xml.sax.SAXException;
  public java.lang.String getDoctypePublic();
  public java.lang.String getDoctypeSystem();
  public java.lang.String getEncoding();
  public boolean getIndent();
  public int getIndentAmount();
  public java.lang.String getMediaType();
  public boolean getOmitXMLDeclaration();
  public java.lang.String getStandalone();
  public java.lang.String getVersion();
  public void setDoctype(java.lang.String, java.lang.String);
  public void setDoctypePublic(java.lang.String);
  public void setDoctypeSystem(java.lang.String);
  public void setEncoding(java.lang.String);
  public void setMediaType(java.lang.String);
  public void setOmitXMLDeclaration(boolean);
  public void setStandalone(java.lang.String);
  public void elementDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void internalEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void externalEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public com.sun.org.apache.xml.internal.serializer.DOMSerializer asDOMSerializer() throws java.io.IOException;
  public void setNamespaceMappings(com.sun.org.apache.xml.internal.serializer.NamespaceMappings);
  public void setSourceLocator(javax.xml.transform.SourceLocator);
  public void addUniqueAttribute(java.lang.String, java.lang.String, int) throws org.xml.sax.SAXException;
  public void characters(org.w3c.dom.Node) throws org.xml.sax.SAXException;
  public void addXSLAttribute(java.lang.String, java.lang.String, java.lang.String);
  public void addAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void setDTDEntityExpansion(boolean);
  public java.lang.String getOutputProperty(java.lang.String);
  public java.lang.String getOutputPropertyDefault(java.lang.String);
  public void setOutputProperty(java.lang.String, java.lang.String);
  public void setOutputPropertyDefault(java.lang.String, java.lang.String);
  public java.lang.Object asDOM3Serializer() throws java.io.IOException;
}
