Compiled from "IncrementalSAXSource_Filter.java"
final class com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Filter implements com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource,org.xml.sax.ContentHandler,org.xml.sax.DTDHandler,org.xml.sax.ext.LexicalHandler,org.xml.sax.ErrorHandler,java.lang.Runnable {
  boolean DEBUG;
  public com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Filter();
  public com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Filter(com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, int);
  public static com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource createIncrementalSAXSource(com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, int);
  public void init(com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager, int, int);
  public void setXMLReader(org.xml.sax.XMLReader);
  public void setContentHandler(org.xml.sax.ContentHandler);
  public void setDTDHandler(org.xml.sax.DTDHandler);
  public void setLexicalHandler(org.xml.sax.ext.LexicalHandler);
  public void setErrHandler(org.xml.sax.ErrorHandler);
  public void setReturnFrequency(int);
  public void characters(char[], int, int) throws org.xml.sax.SAXException;
  public void endDocument() throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException;
  public void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;
  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void setDocumentLocator(org.xml.sax.Locator);
  public void skippedEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startDocument() throws org.xml.sax.SAXException;
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void comment(char[], int, int) throws org.xml.sax.SAXException;
  public void endCDATA() throws org.xml.sax.SAXException;
  public void endDTD() throws org.xml.sax.SAXException;
  public void endEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void startCDATA() throws org.xml.sax.SAXException;
  public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void startEntity(java.lang.String) throws org.xml.sax.SAXException;
  public void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;
  public int getSourceCoroutineID();
  public int getControllerCoroutineID();
  public com.sun.org.apache.xml.internal.dtm.ref.CoroutineManager getCoroutineManager();
  protected void count_and_yield(boolean) throws org.xml.sax.SAXException;
  public void startParse(org.xml.sax.InputSource) throws org.xml.sax.SAXException;
  public void run();
  public java.lang.Object deliverMoreNodes(boolean);
}
