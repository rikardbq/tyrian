Compiled from "SAX2DTM2.java"
public class com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2 extends com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM {
  protected com.sun.org.apache.xml.internal.dtm.ref.ExtendedType[] m_extendedTypes;
  protected java.util.List<java.lang.String> m_values;
  protected int m_SHIFT;
  protected int m_MASK;
  protected int m_blocksize;
  protected static final int TEXT_LENGTH_BITS;
  protected static final int TEXT_OFFSET_BITS;
  protected static final int TEXT_LENGTH_MAX;
  protected static final int TEXT_OFFSET_MAX;
  protected boolean m_buildIdIndex;
  public com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2(com.sun.org.apache.xml.internal.dtm.DTMManager, javax.xml.transform.Source, int, com.sun.org.apache.xml.internal.dtm.DTMWSFilter, com.sun.org.apache.xml.internal.utils.XMLStringFactory, boolean);
  public com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM2(com.sun.org.apache.xml.internal.dtm.DTMManager, javax.xml.transform.Source, int, com.sun.org.apache.xml.internal.dtm.DTMWSFilter, com.sun.org.apache.xml.internal.utils.XMLStringFactory, boolean, int, boolean, boolean, boolean);
  public final int _exptype(int);
  public final int _exptype2(int);
  public final int _nextsib2(int);
  public final int _firstch2(int);
  public final int _parent2(int);
  public final int _type2(int);
  public final int getExpandedTypeID2(int);
  public final int _exptype2Type(int);
  public int getIdForNamespace(java.lang.String);
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public void comment(char[], int, int) throws org.xml.sax.SAXException;
  public void startDocument() throws org.xml.sax.SAXException;
  public void endDocument() throws org.xml.sax.SAXException;
  protected final int addNode(int, int, int, int, int, boolean);
  protected final void charactersFlush();
  public void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;
  public final int getFirstAttribute(int);
  protected int getFirstAttributeIdentity(int);
  protected int getNextAttributeIdentity(int);
  protected final int getTypedAttribute(int, int);
  public java.lang.String getLocalName(int);
  public final java.lang.String getNodeNameX(int);
  public java.lang.String getNodeName(int);
  public com.sun.org.apache.xml.internal.utils.XMLString getStringValue(int);
  public final java.lang.String getStringValueX(int);
  public java.lang.String getStringValue();
  public final void dispatchCharactersEvents(int, org.xml.sax.ContentHandler, boolean) throws org.xml.sax.SAXException;
  public java.lang.String getNodeValue(int);
  protected final void copyTextNode(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws org.xml.sax.SAXException;
  protected final java.lang.String copyElement(int, int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws org.xml.sax.SAXException;
  protected final void copyNS(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler, boolean) throws org.xml.sax.SAXException;
  protected final int getNextNamespaceNode2(int);
  protected final void copyAttributes(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws org.xml.sax.SAXException;
  protected final void copyAttribute(int, int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws org.xml.sax.SAXException;
  static {};
}
