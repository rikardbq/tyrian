Compiled from "Stylesheet.java"
public final class com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet extends com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode {
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet _importedFrom;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet _includedFrom;
  public static final int UNKNOWN_OUTPUT;
  public static final int XML_OUTPUT;
  public static final int HTML_OUTPUT;
  public static final int TEXT_OUTPUT;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet();
  public int getOutputMethod();
  public boolean getTemplateInlining();
  public void setTemplateInlining(boolean);
  public boolean isSimplified();
  public void setSimplified();
  public void setHasIdCall(boolean);
  public void setOutputProperty(java.lang.String, java.lang.String);
  public void setOutputProperties(java.util.Properties);
  public java.util.Properties getOutputProperties();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Output getLastOutputElement();
  public void setMultiDocument(boolean);
  public boolean isMultiDocument();
  public void setCallsNodeset(boolean);
  public boolean callsNodeset();
  public void numberFormattingUsed();
  public void setImportPrecedence(int);
  public int getImportPrecedence();
  public int getMinimumDescendantPrecedence();
  public boolean checkForLoop(java.lang.String);
  public void setParser(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public void setParentStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getParentStylesheet();
  public void setImportingStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public void setIncludingStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public void addIncludedStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public void setSystemId(java.lang.String);
  public java.lang.String getSystemId();
  public void setSourceLoader(com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SourceLoader getSourceLoader();
  public boolean hasGlobals();
  public boolean hasLocalParams();
  protected void addPrefixMapping(java.lang.String, java.lang.String);
  public boolean isExtension(java.lang.String);
  public void declareExtensionPrefixes(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public void parseContents(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public final void parseOwnChildren(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public void processModes();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Mode getMode(com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public void translate();
  public int addParam(com.sun.org.apache.xalan.internal.xsltc.compiler.Param);
  public int addVariable(com.sun.org.apache.xalan.internal.xsltc.compiler.Variable);
  public void display(int);
  public java.lang.String getNamespace(java.lang.String);
  public java.lang.String getClassName();
  public java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.Template> getTemplates();
  public java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.Template> getAllValidTemplates();
  protected void addTemplate(com.sun.org.apache.xalan.internal.xsltc.compiler.Template);
}
