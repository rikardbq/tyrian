Compiled from "SyntaxTreeNode.java"
public abstract class com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode _parent;
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.QName _qname;
  protected org.xml.sax.helpers.AttributesImpl _attributes;
  protected static final com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode Dummy;
  protected static final int IndentIncrement;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode(int);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode(java.lang.String, java.lang.String, java.lang.String);
  protected final void setLineNumber(int);
  public final int getLineNumber();
  protected void setQName(com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  protected void setQName(java.lang.String, java.lang.String, java.lang.String);
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName();
  protected void setAttributes(org.xml.sax.helpers.AttributesImpl);
  protected java.lang.String getAttribute(java.lang.String);
  protected java.lang.String getAttribute(java.lang.String, java.lang.String);
  protected boolean hasAttribute(java.lang.String);
  protected void addAttribute(java.lang.String, java.lang.String);
  protected org.xml.sax.Attributes getAttributes();
  protected void setPrefixMapping(java.util.Map<java.lang.String, java.lang.String>);
  protected java.util.Map<java.lang.String, java.lang.String> getPrefixMapping();
  protected void addPrefixMapping(java.lang.String, java.lang.String);
  protected java.lang.String lookupNamespace(java.lang.String);
  protected java.lang.String lookupPrefix(java.lang.String);
  protected void setParser(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public final com.sun.org.apache.xalan.internal.xsltc.compiler.Parser getParser();
  protected void setParent(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode getParent();
  protected final boolean isDummy();
  protected int getImportPrecedence();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet();
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.Template getTemplate();
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC getXSLTC();
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable getSymbolTable();
  public void parseContents(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  protected final void parseChildren(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.QName updateScope(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  public abstract com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  protected com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheckContents(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public abstract void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  protected void translateContents(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public boolean notTypeOf(java.lang.Class<?>);
  protected void compileResultTree(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  protected boolean contextDependent();
  protected boolean dependentContents();
  protected final void addElement(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  protected final void setFirstElement(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  protected final void removeElement(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  protected final java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode> getContents();
  protected final boolean hasContents();
  protected final int elementCount();
  protected final java.util.Iterator<com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode> elements();
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode elementAt(int);
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode lastChild();
  public void display(int);
  protected void displayContents(int);
  protected final void indent(int);
  protected void reportError(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, java.lang.String, java.lang.String);
  protected void reportWarning(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, com.sun.org.apache.xalan.internal.xsltc.compiler.Parser, java.lang.String, java.lang.String);
  static {};
}
