Compiled from "Parser.java"
public class com.sun.org.apache.xalan.internal.xsltc.compiler.Parser implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants,org.xml.sax.ContentHandler {
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Parser(com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC, boolean);
  public void init();
  public void setOutput(com.sun.org.apache.xalan.internal.xsltc.compiler.Output);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Output getOutput();
  public java.util.Properties getOutputProperties();
  public void addVariable(com.sun.org.apache.xalan.internal.xsltc.compiler.Variable);
  public void addParameter(com.sun.org.apache.xalan.internal.xsltc.compiler.Param);
  public void removeVariable(com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.VariableBase lookupVariable(com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  public void setXSLTC(com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.XSLTC getXSLTC();
  public int getCurrentImportPrecedence();
  public int getNextImportPrecedence();
  public void setCurrentStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getCurrentStylesheet();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getTopLevelStylesheet();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQNameSafe(java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName(java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQNameIgnoreDefaultNs(java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName(java.lang.String, boolean);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName(java.lang.String, java.lang.String, java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName(java.lang.String, java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getQName(com.sun.org.apache.xalan.internal.xsltc.compiler.QName, com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getUseAttributeSets();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getExtensionElementPrefixes();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getExcludeResultPrefixes();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet makeStylesheet(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode) throws com.sun.org.apache.xalan.internal.xsltc.compiler.CompilerException;
  public void createAST(com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader, org.xml.sax.InputSource);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.InputSource);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode getDocumentRoot();
  protected void setPIParameters(java.lang.String, java.lang.String, java.lang.String);
  public boolean elementSupported(java.lang.String, java.lang.String);
  public boolean functionSupported(java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable getSymbolTable();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Template getTemplate();
  public void setTemplate(com.sun.org.apache.xalan.internal.xsltc.compiler.Template);
  public int getTemplateIndex();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode makeInstance(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Expression parseExpression(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Expression parseExpression(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, java.lang.String, java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern parsePattern(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern parsePattern(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode, java.lang.String, java.lang.String);
  public boolean errorsFound();
  public void printErrors();
  public void printWarnings();
  public void reportError(int, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg);
  public java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg> getErrors();
  public java.util.ArrayList<com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg> getWarnings();
  public void startDocument();
  public void endDocument();
  public void startPrefixMapping(java.lang.String, java.lang.String);
  public void endPrefixMapping(java.lang.String);
  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException;
  public void endElement(java.lang.String, java.lang.String, java.lang.String);
  public void characters(char[], int, int);
  public void processingInstruction(java.lang.String, java.lang.String);
  public void ignorableWhitespace(char[], int, int);
  public void skippedEntity(java.lang.String);
  public void setDocumentLocator(org.xml.sax.Locator);
}
