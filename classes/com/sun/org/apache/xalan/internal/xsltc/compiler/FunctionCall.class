Compiled from "FunctionCall.java"
class com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall extends com.sun.org.apache.xalan.internal.xsltc.compiler.Expression {
  protected static final java.lang.String EXT_XSLTC;
  protected static final java.lang.String JAVA_EXT_XSLTC;
  protected static final java.lang.String EXT_XALAN;
  protected static final java.lang.String JAVA_EXT_XALAN;
  protected static final java.lang.String JAVA_EXT_XALAN_OLD;
  protected static final java.lang.String EXSLT_COMMON;
  protected static final java.lang.String EXSLT_MATH;
  protected static final java.lang.String EXSLT_SETS;
  protected static final java.lang.String EXSLT_DATETIME;
  protected static final java.lang.String EXSLT_STRINGS;
  protected static final java.lang.String XALAN_CLASSPACKAGE_NAMESPACE;
  protected static final int NAMESPACE_FORMAT_JAVA;
  protected static final int NAMESPACE_FORMAT_CLASS;
  protected static final int NAMESPACE_FORMAT_PACKAGE;
  protected static final int NAMESPACE_FORMAT_CLASS_OR_PACKAGE;
  com.sun.org.apache.xalan.internal.xsltc.compiler.Expression _thisArgument;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall(com.sun.org.apache.xalan.internal.xsltc.compiler.QName, java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.Expression>);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.FunctionCall(com.sun.org.apache.xalan.internal.xsltc.compiler.QName);
  public java.lang.String getName();
  public void setParser(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  public java.lang.String getClassNameFromUri(java.lang.String);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheckStandard(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheckConstructor(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheckExternal(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public java.util.List<com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type> typeCheckArgs(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.Expression argument(int);
  protected final com.sun.org.apache.xalan.internal.xsltc.compiler.Expression argument();
  protected final int argumentCount();
  protected final void setArgument(int, com.sun.org.apache.xalan.internal.xsltc.compiler.Expression);
  public void translateDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public java.lang.String toString();
  public boolean isStandard();
  public boolean isExtension();
  static final java.lang.String getSignature(java.lang.Class<?>);
  static final java.lang.String getSignature(java.lang.reflect.Method);
  static final java.lang.String getSignature(java.lang.reflect.Constructor<?>);
  protected static java.lang.String replaceDash(java.lang.String);
  static {};
}
