Compiled from "LiteralElement.java"
final class com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralElement extends com.sun.org.apache.xalan.internal.xsltc.compiler.Instruction {
  com.sun.org.apache.xalan.internal.xsltc.compiler.LiteralElement();
  public com.sun.org.apache.xalan.internal.xsltc.compiler.QName getName();
  public void display(int);
  public void registerNamespace(java.lang.String, java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable, boolean);
  public void addAttribute(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  public void setFirstAttribute(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type typeCheck(com.sun.org.apache.xalan.internal.xsltc.compiler.SymbolTable) throws com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError;
  public java.util.Set<java.util.Map$Entry<java.lang.String, java.lang.String>> getNamespaceScope(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode);
  public void parseContents(com.sun.org.apache.xalan.internal.xsltc.compiler.Parser);
  protected boolean contextDependent();
  public void translate(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public com.sun.org.apache.xml.internal.serializer.ElemDesc getElemDesc();
  public boolean allAttributesUnique();
}
