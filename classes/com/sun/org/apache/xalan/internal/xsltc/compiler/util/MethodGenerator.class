Compiled from "MethodGenerator.java"
public class com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator extends com.sun.org.apache.bcel.internal.generic.MethodGen implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
  protected static final int INVALID_INDEX;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen);
  public com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle);
  public com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable2(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.InstructionHandle);
  boolean offsetInLocalVariableGenRange(com.sun.org.apache.bcel.internal.generic.LocalVariableGen, int);
  public void removeLocalVariable(com.sun.org.apache.bcel.internal.generic.LocalVariableGen);
  public com.sun.org.apache.bcel.internal.generic.Instruction loadDOM();
  public com.sun.org.apache.bcel.internal.generic.Instruction storeDOM();
  public com.sun.org.apache.bcel.internal.generic.Instruction storeHandler();
  public com.sun.org.apache.bcel.internal.generic.Instruction loadHandler();
  public com.sun.org.apache.bcel.internal.generic.Instruction storeIterator();
  public com.sun.org.apache.bcel.internal.generic.Instruction loadIterator();
  public final com.sun.org.apache.bcel.internal.generic.Instruction setStartNode();
  public final com.sun.org.apache.bcel.internal.generic.Instruction reset();
  public final com.sun.org.apache.bcel.internal.generic.Instruction nextNode();
  public final com.sun.org.apache.bcel.internal.generic.Instruction startElement();
  public final com.sun.org.apache.bcel.internal.generic.Instruction endElement();
  public final com.sun.org.apache.bcel.internal.generic.Instruction startDocument();
  public final com.sun.org.apache.bcel.internal.generic.Instruction endDocument();
  public final com.sun.org.apache.bcel.internal.generic.Instruction attribute();
  public final com.sun.org.apache.bcel.internal.generic.Instruction uniqueAttribute();
  public final com.sun.org.apache.bcel.internal.generic.Instruction namespace();
  public com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode();
  public com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode();
  public com.sun.org.apache.bcel.internal.generic.Instruction loadContextNode();
  public com.sun.org.apache.bcel.internal.generic.Instruction storeContextNode();
  public int getLocalIndex(java.lang.String);
  public com.sun.org.apache.bcel.internal.generic.LocalVariableGen getLocalVariable(java.lang.String);
  public void setMaxLocals();
  public void addInstructionList(com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern, com.sun.org.apache.bcel.internal.generic.InstructionList);
  public com.sun.org.apache.bcel.internal.generic.InstructionList getInstructionList(com.sun.org.apache.xalan.internal.xsltc.compiler.Pattern);
  public com.sun.org.apache.bcel.internal.classfile.Method[] outlineChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, int);
  public void markChunkStart();
  public void markChunkEnd();
  com.sun.org.apache.bcel.internal.classfile.Method[] getGeneratedMethods(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator);
  protected com.sun.org.apache.bcel.internal.classfile.Method getThisMethod();
  boolean widenConditionalBranchTargetOffsets();
}
