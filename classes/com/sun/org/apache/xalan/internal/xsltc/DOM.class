Compiled from "DOM.java"
public interface com.sun.org.apache.xalan.internal.xsltc.DOM {
  public static final int FIRST_TYPE;
  public static final int NO_TYPE;
  public static final int NULL;
  public static final int RETURN_CURRENT;
  public static final int RETURN_PARENT;
  public static final int SIMPLE_RTF;
  public static final int ADAPTIVE_RTF;
  public static final int TREE_RTF;
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getIterator();
  public abstract java.lang.String getStringValue();
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getChildren(int);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getTypedChildren(int);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getAxisIterator(int);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getTypedAxisIterator(int, int);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getNthDescendant(int, int, boolean);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getNamespaceAxisIterator(int, int);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator getNodeValueIterator(com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, int, java.lang.String, boolean);
  public abstract com.sun.org.apache.xml.internal.dtm.DTMAxisIterator orderNodes(com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, int);
  public abstract java.lang.String getNodeName(int);
  public abstract java.lang.String getNodeNameX(int);
  public abstract java.lang.String getNamespaceName(int);
  public abstract int getExpandedTypeID(int);
  public abstract int getNamespaceType(int);
  public abstract int getParent(int);
  public abstract int getAttributeNode(int, int);
  public abstract java.lang.String getStringValueX(int);
  public abstract void copy(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws com.sun.org.apache.xalan.internal.xsltc.TransletException;
  public abstract void copy(com.sun.org.apache.xml.internal.dtm.DTMAxisIterator, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws com.sun.org.apache.xalan.internal.xsltc.TransletException;
  public abstract java.lang.String shallowCopy(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws com.sun.org.apache.xalan.internal.xsltc.TransletException;
  public abstract boolean lessThan(int, int);
  public abstract void characters(int, com.sun.org.apache.xml.internal.serializer.SerializationHandler) throws com.sun.org.apache.xalan.internal.xsltc.TransletException;
  public abstract org.w3c.dom.Node makeNode(int);
  public abstract org.w3c.dom.Node makeNode(com.sun.org.apache.xml.internal.dtm.DTMAxisIterator);
  public abstract org.w3c.dom.NodeList makeNodeList(int);
  public abstract org.w3c.dom.NodeList makeNodeList(com.sun.org.apache.xml.internal.dtm.DTMAxisIterator);
  public abstract java.lang.String getLanguage(int);
  public abstract int getSize();
  public abstract java.lang.String getDocumentURI(int);
  public abstract void setFilter(com.sun.org.apache.xalan.internal.xsltc.StripFilter);
  public abstract void setupMapping(java.lang.String[], java.lang.String[], int[], java.lang.String[]);
  public abstract boolean isElement(int);
  public abstract boolean isAttribute(int);
  public abstract java.lang.String lookupNamespace(int, java.lang.String) throws com.sun.org.apache.xalan.internal.xsltc.TransletException;
  public abstract int getNodeIdent(int);
  public abstract int getNodeHandle(int);
  public abstract com.sun.org.apache.xalan.internal.xsltc.DOM getResultTreeFrag(int, int);
  public abstract com.sun.org.apache.xalan.internal.xsltc.DOM getResultTreeFrag(int, int, boolean);
  public abstract com.sun.org.apache.xml.internal.serializer.SerializationHandler getOutputDomBuilder();
  public abstract int getNSType(int);
  public abstract int getDocument();
  public abstract java.lang.String getUnparsedEntityURI(java.lang.String);
  public abstract java.util.Map<java.lang.String, java.lang.Integer> getElementsWithIDs();
  public abstract void release();
}
