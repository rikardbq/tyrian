Compiled from "Type.java"
public abstract class com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type implements com.sun.org.apache.xalan.internal.xsltc.compiler.Constants {
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Int;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Real;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Boolean;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type NodeSet;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type String;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type ResultTree;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Reference;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Void;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Object;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type ObjectString;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Node;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Root;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Element;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Attribute;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Text;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Comment;
  public static final com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Processing_Instruction;
  public com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type();
  public static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type newObjectType(java.lang.String);
  public static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type newObjectType(java.lang.Class<?>);
  public abstract java.lang.String toString();
  public abstract boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type);
  public boolean isNumber();
  public boolean implementedAsMethod();
  public boolean isSimple();
  public abstract com.sun.org.apache.bcel.internal.generic.Type toJCType();
  public int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type);
  public abstract java.lang.String toSignature();
  public void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type);
  public com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType);
  public void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class<?>);
  public void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class<?>);
  public void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator);
  public java.lang.String getClassName();
  public com.sun.org.apache.bcel.internal.generic.Instruction ADD();
  public com.sun.org.apache.bcel.internal.generic.Instruction SUB();
  public com.sun.org.apache.bcel.internal.generic.Instruction MUL();
  public com.sun.org.apache.bcel.internal.generic.Instruction DIV();
  public com.sun.org.apache.bcel.internal.generic.Instruction REM();
  public com.sun.org.apache.bcel.internal.generic.Instruction NEG();
  public com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int);
  public com.sun.org.apache.bcel.internal.generic.Instruction STORE(int);
  public com.sun.org.apache.bcel.internal.generic.Instruction POP();
  public com.sun.org.apache.bcel.internal.generic.BranchInstruction GT(boolean);
  public com.sun.org.apache.bcel.internal.generic.BranchInstruction GE(boolean);
  public com.sun.org.apache.bcel.internal.generic.BranchInstruction LT(boolean);
  public com.sun.org.apache.bcel.internal.generic.BranchInstruction LE(boolean);
  public com.sun.org.apache.bcel.internal.generic.Instruction CMP(boolean);
  public com.sun.org.apache.bcel.internal.generic.Instruction DUP();
  static {};
}
