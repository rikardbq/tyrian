Compiled from "JdbcRowSetImpl.java"
public class com.sun.rowset.JdbcRowSetImpl extends javax.sql.rowset.BaseRowSet implements javax.sql.rowset.JdbcRowSet,javax.sql.rowset.Joinable {
  protected transient com.sun.rowset.JdbcRowSetResourceBundle resBundle;
  static final long serialVersionUID;
  public com.sun.rowset.JdbcRowSetImpl();
  public com.sun.rowset.JdbcRowSetImpl(java.sql.Connection) throws java.sql.SQLException;
  public com.sun.rowset.JdbcRowSetImpl(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
  public com.sun.rowset.JdbcRowSetImpl(java.sql.ResultSet) throws java.sql.SQLException;
  protected void initMetaData(javax.sql.RowSetMetaData, java.sql.ResultSetMetaData) throws java.sql.SQLException;
  protected void checkState() throws java.sql.SQLException;
  public void execute() throws java.sql.SQLException;
  protected void setProperties(java.sql.PreparedStatement) throws java.sql.SQLException;
  protected java.sql.PreparedStatement prepare() throws java.sql.SQLException;
  public boolean next() throws java.sql.SQLException;
  public void close() throws java.sql.SQLException;
  public boolean wasNull() throws java.sql.SQLException;
  public java.lang.String getString(int) throws java.sql.SQLException;
  public boolean getBoolean(int) throws java.sql.SQLException;
  public byte getByte(int) throws java.sql.SQLException;
  public short getShort(int) throws java.sql.SQLException;
  public int getInt(int) throws java.sql.SQLException;
  public long getLong(int) throws java.sql.SQLException;
  public float getFloat(int) throws java.sql.SQLException;
  public double getDouble(int) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
  public byte[] getBytes(int) throws java.sql.SQLException;
  public java.sql.Date getDate(int) throws java.sql.SQLException;
  public java.sql.Time getTime(int) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
  public java.io.InputStream getAsciiStream(int) throws java.sql.SQLException;
  public java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException;
  public java.io.InputStream getBinaryStream(int) throws java.sql.SQLException;
  public java.lang.String getString(java.lang.String) throws java.sql.SQLException;
  public boolean getBoolean(java.lang.String) throws java.sql.SQLException;
  public byte getByte(java.lang.String) throws java.sql.SQLException;
  public short getShort(java.lang.String) throws java.sql.SQLException;
  public int getInt(java.lang.String) throws java.sql.SQLException;
  public long getLong(java.lang.String) throws java.sql.SQLException;
  public float getFloat(java.lang.String) throws java.sql.SQLException;
  public double getDouble(java.lang.String) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(java.lang.String, int) throws java.sql.SQLException;
  public byte[] getBytes(java.lang.String) throws java.sql.SQLException;
  public java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;
  public java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException;
  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
  public void clearWarnings() throws java.sql.SQLException;
  public java.lang.String getCursorName() throws java.sql.SQLException;
  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
  public java.lang.Object getObject(int) throws java.sql.SQLException;
  public java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;
  public int findColumn(java.lang.String) throws java.sql.SQLException;
  public java.io.Reader getCharacterStream(int) throws java.sql.SQLException;
  public java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;
  public boolean isBeforeFirst() throws java.sql.SQLException;
  public boolean isAfterLast() throws java.sql.SQLException;
  public boolean isFirst() throws java.sql.SQLException;
  public boolean isLast() throws java.sql.SQLException;
  public void beforeFirst() throws java.sql.SQLException;
  public void afterLast() throws java.sql.SQLException;
  public boolean first() throws java.sql.SQLException;
  public boolean last() throws java.sql.SQLException;
  public int getRow() throws java.sql.SQLException;
  public boolean absolute(int) throws java.sql.SQLException;
  public boolean relative(int) throws java.sql.SQLException;
  public boolean previous() throws java.sql.SQLException;
  public void setFetchDirection(int) throws java.sql.SQLException;
  public int getFetchDirection() throws java.sql.SQLException;
  public void setFetchSize(int) throws java.sql.SQLException;
  public int getType() throws java.sql.SQLException;
  public int getConcurrency() throws java.sql.SQLException;
  public boolean rowUpdated() throws java.sql.SQLException;
  public boolean rowInserted() throws java.sql.SQLException;
  public boolean rowDeleted() throws java.sql.SQLException;
  public void updateNull(int) throws java.sql.SQLException;
  public void updateBoolean(int, boolean) throws java.sql.SQLException;
  public void updateByte(int, byte) throws java.sql.SQLException;
  public void updateShort(int, short) throws java.sql.SQLException;
  public void updateInt(int, int) throws java.sql.SQLException;
  public void updateLong(int, long) throws java.sql.SQLException;
  public void updateFloat(int, float) throws java.sql.SQLException;
  public void updateDouble(int, double) throws java.sql.SQLException;
  public void updateBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
  public void updateString(int, java.lang.String) throws java.sql.SQLException;
  public void updateBytes(int, byte[]) throws java.sql.SQLException;
  public void updateDate(int, java.sql.Date) throws java.sql.SQLException;
  public void updateTime(int, java.sql.Time) throws java.sql.SQLException;
  public void updateTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
  public void updateAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
  public void updateObject(int, java.lang.Object, int) throws java.sql.SQLException;
  public void updateObject(int, java.lang.Object) throws java.sql.SQLException;
  public void updateNull(java.lang.String) throws java.sql.SQLException;
  public void updateBoolean(java.lang.String, boolean) throws java.sql.SQLException;
  public void updateByte(java.lang.String, byte) throws java.sql.SQLException;
  public void updateShort(java.lang.String, short) throws java.sql.SQLException;
  public void updateInt(java.lang.String, int) throws java.sql.SQLException;
  public void updateLong(java.lang.String, long) throws java.sql.SQLException;
  public void updateFloat(java.lang.String, float) throws java.sql.SQLException;
  public void updateDouble(java.lang.String, double) throws java.sql.SQLException;
  public void updateBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
  public void updateString(java.lang.String, java.lang.String) throws java.sql.SQLException;
  public void updateBytes(java.lang.String, byte[]) throws java.sql.SQLException;
  public void updateDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
  public void updateTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
  public void updateTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
  public void updateAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
  public void updateObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
  public void updateObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
  public void insertRow() throws java.sql.SQLException;
  public void updateRow() throws java.sql.SQLException;
  public void deleteRow() throws java.sql.SQLException;
  public void refreshRow() throws java.sql.SQLException;
  public void cancelRowUpdates() throws java.sql.SQLException;
  public void moveToInsertRow() throws java.sql.SQLException;
  public void moveToCurrentRow() throws java.sql.SQLException;
  public java.sql.Statement getStatement() throws java.sql.SQLException;
  public java.lang.Object getObject(int, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
  public java.sql.Ref getRef(int) throws java.sql.SQLException;
  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
  public java.sql.Clob getClob(int) throws java.sql.SQLException;
  public java.sql.Array getArray(int) throws java.sql.SQLException;
  public java.lang.Object getObject(java.lang.String, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
  public java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;
  public java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;
  public java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;
  public java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;
  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public void updateRef(int, java.sql.Ref) throws java.sql.SQLException;
  public void updateRef(java.lang.String, java.sql.Ref) throws java.sql.SQLException;
  public void updateClob(int, java.sql.Clob) throws java.sql.SQLException;
  public void updateClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;
  public void updateBlob(int, java.sql.Blob) throws java.sql.SQLException;
  public void updateBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;
  public void updateArray(int, java.sql.Array) throws java.sql.SQLException;
  public void updateArray(java.lang.String, java.sql.Array) throws java.sql.SQLException;
  public java.net.URL getURL(int) throws java.sql.SQLException;
  public java.net.URL getURL(java.lang.String) throws java.sql.SQLException;
  public javax.sql.rowset.RowSetWarning getRowSetWarnings() throws java.sql.SQLException;
  public void unsetMatchColumn(int[]) throws java.sql.SQLException;
  public void unsetMatchColumn(java.lang.String[]) throws java.sql.SQLException;
  public java.lang.String[] getMatchColumnNames() throws java.sql.SQLException;
  public int[] getMatchColumnIndexes() throws java.sql.SQLException;
  public void setMatchColumn(int[]) throws java.sql.SQLException;
  public void setMatchColumn(java.lang.String[]) throws java.sql.SQLException;
  public void setMatchColumn(int) throws java.sql.SQLException;
  public void setMatchColumn(java.lang.String) throws java.sql.SQLException;
  public void unsetMatchColumn(int) throws java.sql.SQLException;
  public void unsetMatchColumn(java.lang.String) throws java.sql.SQLException;
  public java.sql.DatabaseMetaData getDatabaseMetaData() throws java.sql.SQLException;
  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
  public void commit() throws java.sql.SQLException;
  public void setAutoCommit(boolean) throws java.sql.SQLException;
  public boolean getAutoCommit() throws java.sql.SQLException;
  public void rollback() throws java.sql.SQLException;
  public void rollback(java.sql.Savepoint) throws java.sql.SQLException;
  protected void setParams() throws java.sql.SQLException;
  protected java.sql.Connection getConnection();
  protected void setConnection(java.sql.Connection);
  protected java.sql.PreparedStatement getPreparedStatement();
  protected void setPreparedStatement(java.sql.PreparedStatement);
  protected java.sql.ResultSet getResultSet() throws java.sql.SQLException;
  protected void setResultSet(java.sql.ResultSet);
  public void setCommand(java.lang.String) throws java.sql.SQLException;
  public void setDataSourceName(java.lang.String) throws java.sql.SQLException;
  public void setUrl(java.lang.String) throws java.sql.SQLException;
  public void setUsername(java.lang.String);
  public void setPassword(java.lang.String);
  public void setType(int) throws java.sql.SQLException;
  public void setConcurrency(int) throws java.sql.SQLException;
  public java.sql.SQLXML getSQLXML(int) throws java.sql.SQLException;
  public java.sql.SQLXML getSQLXML(java.lang.String) throws java.sql.SQLException;
  public java.sql.RowId getRowId(int) throws java.sql.SQLException;
  public java.sql.RowId getRowId(java.lang.String) throws java.sql.SQLException;
  public void updateRowId(int, java.sql.RowId) throws java.sql.SQLException;
  public void updateRowId(java.lang.String, java.sql.RowId) throws java.sql.SQLException;
  public int getHoldability() throws java.sql.SQLException;
  public boolean isClosed() throws java.sql.SQLException;
  public void updateNString(int, java.lang.String) throws java.sql.SQLException;
  public void updateNString(java.lang.String, java.lang.String) throws java.sql.SQLException;
  public void updateNClob(int, java.sql.NClob) throws java.sql.SQLException;
  public void updateNClob(java.lang.String, java.sql.NClob) throws java.sql.SQLException;
  public java.sql.NClob getNClob(int) throws java.sql.SQLException;
  public java.sql.NClob getNClob(java.lang.String) throws java.sql.SQLException;
  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
  public void setSQLXML(java.lang.String, java.sql.SQLXML) throws java.sql.SQLException;
  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
  public void setRowId(java.lang.String, java.sql.RowId) throws java.sql.SQLException;
  public void setNString(int, java.lang.String) throws java.sql.SQLException;
  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
  public void setNClob(java.lang.String, java.sql.NClob) throws java.sql.SQLException;
  public java.io.Reader getNCharacterStream(int) throws java.sql.SQLException;
  public java.io.Reader getNCharacterStream(java.lang.String) throws java.sql.SQLException;
  public void updateSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
  public void updateSQLXML(java.lang.String, java.sql.SQLXML) throws java.sql.SQLException;
  public java.lang.String getNString(int) throws java.sql.SQLException;
  public java.lang.String getNString(java.lang.String) throws java.sql.SQLException;
  public void updateNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
  public void updateNCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void updateNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
  public void updateNCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void updateBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateBlob(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateBlob(int, java.io.InputStream) throws java.sql.SQLException;
  public void updateBlob(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void updateClob(int, java.io.Reader, long) throws java.sql.SQLException;
  public void updateClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void updateClob(int, java.io.Reader) throws java.sql.SQLException;
  public void updateClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void updateNClob(int, java.io.Reader, long) throws java.sql.SQLException;
  public void updateNClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void updateNClob(int, java.io.Reader) throws java.sql.SQLException;
  public void updateNClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void updateAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
  public void updateAsciiStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
  public void updateAsciiStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void updateBinaryStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
  public void updateBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
  public void updateBinaryStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void updateCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void updateCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
  public void updateCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void setURL(int, java.net.URL) throws java.sql.SQLException;
  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
  public void setNClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void setNClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
  public void setNString(java.lang.String, java.lang.String) throws java.sql.SQLException;
  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
  public void setNCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void setNCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
  public void setClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
  public void setClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;
  public void setClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void setDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
  public void setDate(java.lang.String, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
  public void setTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
  public void setTime(java.lang.String, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
  public void setBlob(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
  public void setBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;
  public void setBlob(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void setObject(java.lang.String, java.lang.Object, int, int) throws java.sql.SQLException;
  public void setObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
  public void setObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
  public void setAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void setBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void setCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
  public void setAsciiStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void setBinaryStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
  public void setCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
  public void setBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
  public void setString(java.lang.String, java.lang.String) throws java.sql.SQLException;
  public void setBytes(java.lang.String, byte[]) throws java.sql.SQLException;
  public void setTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
  public void setNull(java.lang.String, int) throws java.sql.SQLException;
  public void setNull(java.lang.String, int, java.lang.String) throws java.sql.SQLException;
  public void setBoolean(java.lang.String, boolean) throws java.sql.SQLException;
  public void setByte(java.lang.String, byte) throws java.sql.SQLException;
  public void setShort(java.lang.String, short) throws java.sql.SQLException;
  public void setInt(java.lang.String, int) throws java.sql.SQLException;
  public void setLong(java.lang.String, long) throws java.sql.SQLException;
  public void setFloat(java.lang.String, float) throws java.sql.SQLException;
  public void setDouble(java.lang.String, double) throws java.sql.SQLException;
  public <T> T getObject(int, java.lang.Class<T>) throws java.sql.SQLException;
  public <T> T getObject(java.lang.String, java.lang.Class<T>) throws java.sql.SQLException;
}
