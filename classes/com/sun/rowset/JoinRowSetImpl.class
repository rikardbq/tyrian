Compiled from "JoinRowSetImpl.java"
public class com.sun.rowset.JoinRowSetImpl extends com.sun.rowset.WebRowSetImpl implements javax.sql.rowset.JoinRowSet {
  boolean[] supportedJOINs;
  static final long serialVersionUID;
  public com.sun.rowset.JoinRowSetImpl() throws java.sql.SQLException;
  public void addRowSet(javax.sql.rowset.Joinable) throws java.sql.SQLException;
  public void addRowSet(javax.sql.RowSet, int) throws java.sql.SQLException;
  public void addRowSet(javax.sql.RowSet, java.lang.String) throws java.sql.SQLException;
  public void addRowSet(javax.sql.RowSet[], int[]) throws java.sql.SQLException;
  public void addRowSet(javax.sql.RowSet[], java.lang.String[]) throws java.sql.SQLException;
  public java.util.Collection getRowSets() throws java.sql.SQLException;
  public java.lang.String[] getRowSetNames() throws java.sql.SQLException;
  public javax.sql.rowset.CachedRowSet toCachedRowSet() throws java.sql.SQLException;
  public boolean supportsCrossJoin();
  public boolean supportsInnerJoin();
  public boolean supportsLeftOuterJoin();
  public boolean supportsRightOuterJoin();
  public boolean supportsFullJoin();
  public void setJoinType(int) throws java.sql.SQLException;
  public java.lang.String getWhereClause() throws java.sql.SQLException;
  public boolean next() throws java.sql.SQLException;
  public void close() throws java.sql.SQLException;
  public boolean wasNull() throws java.sql.SQLException;
  public java.lang.String getString(int) throws java.sql.SQLException;
  public boolean getBoolean(int) throws java.sql.SQLException;
  public byte getByte(int) throws java.sql.SQLException;
  public short getShort(int) throws java.sql.SQLException;
  public int getInt(int) throws java.sql.SQLException;
  public long getLong(int) throws java.sql.SQLException;
  public float getFloat(int) throws java.sql.SQLException;
  public double getDouble(int) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
  public byte[] getBytes(int) throws java.sql.SQLException;
  public java.sql.Date getDate(int) throws java.sql.SQLException;
  public java.sql.Time getTime(int) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
  public java.io.InputStream getAsciiStream(int) throws java.sql.SQLException;
  public java.io.InputStream getUnicodeStream(int) throws java.sql.SQLException;
  public java.io.InputStream getBinaryStream(int) throws java.sql.SQLException;
  public java.lang.String getString(java.lang.String) throws java.sql.SQLException;
  public boolean getBoolean(java.lang.String) throws java.sql.SQLException;
  public byte getByte(java.lang.String) throws java.sql.SQLException;
  public short getShort(java.lang.String) throws java.sql.SQLException;
  public int getInt(java.lang.String) throws java.sql.SQLException;
  public long getLong(java.lang.String) throws java.sql.SQLException;
  public float getFloat(java.lang.String) throws java.sql.SQLException;
  public double getDouble(java.lang.String) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(java.lang.String, int) throws java.sql.SQLException;
  public byte[] getBytes(java.lang.String) throws java.sql.SQLException;
  public java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;
  public java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getAsciiStream(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getUnicodeStream(java.lang.String) throws java.sql.SQLException;
  public java.io.InputStream getBinaryStream(java.lang.String) throws java.sql.SQLException;
  public java.sql.SQLWarning getWarnings();
  public void clearWarnings();
  public java.lang.String getCursorName() throws java.sql.SQLException;
  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
  public java.lang.Object getObject(int) throws java.sql.SQLException;
  public java.lang.Object getObject(int, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
  public java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;
  public java.lang.Object getObject(java.lang.String, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
  public java.io.Reader getCharacterStream(int) throws java.sql.SQLException;
  public java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
  public java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;
  public int size();
  public boolean isBeforeFirst() throws java.sql.SQLException;
  public boolean isAfterLast() throws java.sql.SQLException;
  public boolean isFirst() throws java.sql.SQLException;
  public boolean isLast() throws java.sql.SQLException;
  public void beforeFirst() throws java.sql.SQLException;
  public void afterLast() throws java.sql.SQLException;
  public boolean first() throws java.sql.SQLException;
  public boolean last() throws java.sql.SQLException;
  public int getRow() throws java.sql.SQLException;
  public boolean absolute(int) throws java.sql.SQLException;
  public boolean relative(int) throws java.sql.SQLException;
  public boolean previous() throws java.sql.SQLException;
  public int findColumn(java.lang.String) throws java.sql.SQLException;
  public boolean rowUpdated() throws java.sql.SQLException;
  public boolean columnUpdated(int) throws java.sql.SQLException;
  public boolean rowInserted() throws java.sql.SQLException;
  public boolean rowDeleted() throws java.sql.SQLException;
  public void updateNull(int) throws java.sql.SQLException;
  public void updateBoolean(int, boolean) throws java.sql.SQLException;
  public void updateByte(int, byte) throws java.sql.SQLException;
  public void updateShort(int, short) throws java.sql.SQLException;
  public void updateInt(int, int) throws java.sql.SQLException;
  public void updateLong(int, long) throws java.sql.SQLException;
  public void updateFloat(int, float) throws java.sql.SQLException;
  public void updateDouble(int, double) throws java.sql.SQLException;
  public void updateBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
  public void updateString(int, java.lang.String) throws java.sql.SQLException;
  public void updateBytes(int, byte[]) throws java.sql.SQLException;
  public void updateDate(int, java.sql.Date) throws java.sql.SQLException;
  public void updateTime(int, java.sql.Time) throws java.sql.SQLException;
  public void updateTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
  public void updateAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
  public void updateObject(int, java.lang.Object, int) throws java.sql.SQLException;
  public void updateObject(int, java.lang.Object) throws java.sql.SQLException;
  public void updateNull(java.lang.String) throws java.sql.SQLException;
  public void updateBoolean(java.lang.String, boolean) throws java.sql.SQLException;
  public void updateByte(java.lang.String, byte) throws java.sql.SQLException;
  public void updateShort(java.lang.String, short) throws java.sql.SQLException;
  public void updateInt(java.lang.String, int) throws java.sql.SQLException;
  public void updateLong(java.lang.String, long) throws java.sql.SQLException;
  public void updateFloat(java.lang.String, float) throws java.sql.SQLException;
  public void updateDouble(java.lang.String, double) throws java.sql.SQLException;
  public void updateBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
  public void updateString(java.lang.String, java.lang.String) throws java.sql.SQLException;
  public void updateBytes(java.lang.String, byte[]) throws java.sql.SQLException;
  public void updateDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
  public void updateTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
  public void updateTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
  public void updateAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
  public void updateCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
  public void updateObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
  public void updateObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
  public void insertRow() throws java.sql.SQLException;
  public void updateRow() throws java.sql.SQLException;
  public void deleteRow() throws java.sql.SQLException;
  public void refreshRow() throws java.sql.SQLException;
  public void cancelRowUpdates() throws java.sql.SQLException;
  public void moveToInsertRow() throws java.sql.SQLException;
  public void moveToCurrentRow() throws java.sql.SQLException;
  public java.sql.Statement getStatement() throws java.sql.SQLException;
  public java.sql.Ref getRef(int) throws java.sql.SQLException;
  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
  public java.sql.Clob getClob(int) throws java.sql.SQLException;
  public java.sql.Array getArray(int) throws java.sql.SQLException;
  public java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;
  public java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;
  public java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;
  public java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;
  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
  public java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
  public void setMetaData(javax.sql.RowSetMetaData) throws java.sql.SQLException;
  public java.sql.ResultSet getOriginal() throws java.sql.SQLException;
  public java.sql.ResultSet getOriginalRow() throws java.sql.SQLException;
  public void setOriginalRow() throws java.sql.SQLException;
  public int[] getKeyColumns() throws java.sql.SQLException;
  public void setKeyColumns(int[]) throws java.sql.SQLException;
  public void updateRef(int, java.sql.Ref) throws java.sql.SQLException;
  public void updateRef(java.lang.String, java.sql.Ref) throws java.sql.SQLException;
  public void updateClob(int, java.sql.Clob) throws java.sql.SQLException;
  public void updateClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;
  public void updateBlob(int, java.sql.Blob) throws java.sql.SQLException;
  public void updateBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;
  public void updateArray(int, java.sql.Array) throws java.sql.SQLException;
  public void updateArray(java.lang.String, java.sql.Array) throws java.sql.SQLException;
  public void execute() throws java.sql.SQLException;
  public void execute(java.sql.Connection) throws java.sql.SQLException;
  public java.net.URL getURL(int) throws java.sql.SQLException;
  public java.net.URL getURL(java.lang.String) throws java.sql.SQLException;
  public void writeXml(java.sql.ResultSet, java.io.Writer) throws java.sql.SQLException;
  public void writeXml(java.io.Writer) throws java.sql.SQLException;
  public void readXml(java.io.Reader) throws java.sql.SQLException;
  public void readXml(java.io.InputStream) throws java.sql.SQLException, java.io.IOException;
  public void writeXml(java.io.OutputStream) throws java.sql.SQLException, java.io.IOException;
  public void writeXml(java.sql.ResultSet, java.io.OutputStream) throws java.sql.SQLException, java.io.IOException;
  public int getJoinType() throws java.sql.SQLException;
  public void addRowSetListener(javax.sql.RowSetListener);
  public void removeRowSetListener(javax.sql.RowSetListener);
  public java.util.Collection<?> toCollection() throws java.sql.SQLException;
  public java.util.Collection<?> toCollection(int) throws java.sql.SQLException;
  public java.util.Collection<?> toCollection(java.lang.String) throws java.sql.SQLException;
  public javax.sql.rowset.CachedRowSet createCopySchema() throws java.sql.SQLException;
  public void setSyncProvider(java.lang.String) throws java.sql.SQLException;
  public void acceptChanges() throws javax.sql.rowset.spi.SyncProviderException;
  public javax.sql.rowset.spi.SyncProvider getSyncProvider() throws java.sql.SQLException;
}
